<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://hoonably.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hoonably.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-08T02:23:35+00:00</updated><id>https://hoonably.github.io/feed.xml</id><title type="html">hoonably</title><subtitle>Undergraduate student at UNIST (CSE), interested in AI, optimization, and systems programming. </subtitle><entry><title type="html">TTRL: Test-Time Reinforcement Learning</title><link href="https://hoonably.github.io/blog/ttrl/" rel="alternate" type="text/html" title="TTRL: Test-Time Reinforcement Learning"/><published>2025-07-30T16:30:11+00:00</published><updated>2025-07-30T16:30:11+00:00</updated><id>https://hoonably.github.io/blog/ttrl</id><content type="html" xml:base="https://hoonably.github.io/blog/ttrl/"><![CDATA[<table class="simple-table" id="23f451cf-7b79-80d5-ba3c-ee8bbfa08ffd"><tbody><tr id="23f451cf-7b79-80ae-9180-ffcfd13e000a"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">ArXiv</th><td class="" id="L|H:" style="width:580.5px"><a href="https://arxiv.org/abs/2504.16084">https://arxiv.org/abs/2504.16084</a></td></tr><tr id="23f451cf-7b79-802d-a5ea-ee3926e2f82e"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Github Code</th><td class="" id="L|H:" style="width:580.5px"><a href="https://github.com/PRIME-RL/TTRL">https://github.com/PRIME-RL/TTRL</a></td></tr><tr id="23f451cf-7b79-8046-b211-ebd8ca0d2c04"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Authors</th><td class="" id="L|H:" style="width:580.5px">Yuxin Zuo, Kaiyan Zhang, Li Sheng, Shang Qu, Ganqu Cui, Xuekai Zhu, Haozhan Li, Yuchen Zhang, Xinwei Long, Ermo Hua, Biqing Qi, Youbang Sun, Zhiyuan Ma, Lifan Yuan, Ning Ding, Bowen Zhou</td></tr><tr id="23f451cf-7b79-80dd-8748-e9bd04a6d391"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Affiliation</th><td class="" id="L|H:" style="width:580.5px">Tsinghua University, Shanghai AI Lab</td></tr></tbody></table> <figure class="block-color-teal_background callout" id="23f451cf-7b79-8013-9cec-eb52c92f1382" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%"> <strong>Key Differentiator</strong><br/>(1) 다양한 답변을 생성하고 (Test-Time Scaling)<br/>(2) majority voting을 통해 "이 답변은 good, 이건 bad"라는 평가를 자동으로 생성<br/>(3) 이를 reward로 변환해 RL 수행<br/><mark class="highlight-default">Test Time에 </mark><mark class="highlight-red">자율적, 반복적, label-free </mark><mark class="highlight-default">방식으로 학습</mark>하고 더 좋은 결과를 내는 효과<br/><mark class="highlight-blue">답안지 안주고 문제만 줬는데, 알아서 반복적으로 문제풀면서 똑똑해진다!</mark></div></figure> <p class="" id="241451cf-7b79-8076-ad27-c26847b7af24"> </p> <figure class="block-color-gray_background callout" id="241451cf-7b79-80fa-b229-c30666fbb446" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">🤷</span></div><div style="width:100%">Why I chose this paper?<li style="list-style-type:disc">Test-Time 논문들을 많이 봤지만, Reinforcement Learning은 처음 들어봐서 궁금했다.</li><li style="list-style-type:disc">아카이브에만 있고, 최근에 제출된 논문인데, github star이 700개나 되어있어서 궁금했다.</li></div></figure> <p class="" id="241451cf-7b79-80d1-b270-d25db6e9cd8b"> </p> <p class="" id="240451cf-7b79-8026-8478-d8919bd0068d"> </p> <blockquote class="" id="241451cf-7b79-80eb-a84e-d40e74898049">기존의  <strong>Test-Time Scaling</strong>이나  <strong>Reinforcement Learning</strong>을 먼저 설명하는게 좋을 것 같아서<p class="" id="240451cf-7b79-80f8-b8da-d10107724a5a"> <strong>5 Related Works</strong>를 먼저 읽었다.</p></blockquote> <h1 class="" id="23f451cf-7b79-8044-989f-d261c9456ba2">5 Related Works </h1> <h2 class="" id="23f451cf-7b79-8033-92a6-eac5f84bc160">5.1 Test-Time Scaling</h2> <p class="" id="23f451cf-7b79-80a1-a4e2-fb2c87423d91">= LLM이 테스트(추론) 시점에서 더 많은 계산 자원을 사용해 성능을 높이는 방법</p> <p class="" id="23f451cf-7b79-801b-8b2f-cb9270214b29">→ 즉, 학습된 모델 구조는 그대로 두고,  <strong>test-time에 inference 방식만 확장</strong>하는 전략</p> <p class="" id="23f451cf-7b79-800f-9f45-da5854c20383"> </p> <p class="" id="23f451cf-7b79-80cd-8c25-ee13e76d7d65">① Parallel Generation</p> <p class="" id="23f451cf-7b79-8096-a88f-fe4a659d8e80">하나의 입력에 대해 여러 개의 output을 생성하고 그 중 “좋은 것”을 선택</p> <li style="list-style-type:disc"> <strong>Self-Consistency</strong> (Wang et al., 2022)<li style="list-style-type:circle">여러 CoT 답변을 만들고 가장 많은 빈도를 가진 답변을 선택 (majority voting)</li></li> <li style="list-style-type:disc"> <strong>Best-of-N</strong> (Stiennon et al., 2020; Nakano et al., 2021)<li style="list-style-type:circle">reward function이나 score function으로 best 답변 선택</li></li> <li style="list-style-type:disc"> <strong>Reward-guided Search</strong> (Deng &amp; Raffel, 2023; Khanov et al., 2024)<li style="list-style-type:circle">sampling된 결과에 external reward function을 적용해 선택</li></li> <p class="" id="23f451cf-7b79-8044-958d-e876f7f0fdfe">→ 이처럼 parallel하게 여러 답안을 만들고 하나를  <strong>“선택”하거나 “aggregation”</strong> 하는 게 공통</p> <p class="" id="23f451cf-7b79-80e8-93f8-dfb589c80f15"> </p> <p class="" id="23f451cf-7b79-80d4-bc81-c312689c822a">② Sequential Generation</p> <p class="" id="23f451cf-7b79-807d-9ba1-f35787194528">하나의 답변을 길게, 점진적으로 확장하거나 수정하며 reasoning</p> <li style="list-style-type:disc"> <strong>Chain-of-Thought (CoT)</strong> prompting (Wei et al., 2022)<li style="list-style-type:circle">중간 reasoning step을 명시적으로 유도</li></li> <li style="list-style-type:disc"> <strong>Reflective reasoning</strong> (Madaan et al., 2023)<li style="list-style-type:circle">스스로 답을 검토하고 수정</li></li> <p class="" id="23f451cf-7b79-80cb-bb1d-d12800e91d84">→ reasoning depth를 늘리거나 self-correction을 유도</p> <p class="" id="23f451cf-7b79-80b6-8771-e2e6ce5cd7b5"> </p> <p class="" id="23f451cf-7b79-806b-a3f5-ccdb4c5b35dd">한계: 대부분의 TTS는 prompt-based이며,  <strong>모델 파라미터 자체는 업데이트되지 않음</strong></p> <p class="" id="23f451cf-7b79-8019-8025-ee1cb15a5c14"> </p> <table class="simple-table" id="23f451cf-7b79-80b2-ab20-cac97ed3662a"><thead class="simple-table-header"><tr id="23f451cf-7b79-802c-b7a6-dde261647268"><th class="simple-table-header-color simple-table-header" id="dgVD" style="width:253.203125px">기존 TTS</th><th class="simple-table-header-color simple-table-header" id="?GWK" style="width:368.99998474121094px">TTRL</th></tr></thead><tbody><tr id="23f451cf-7b79-80d5-b628-dbb22f086d79"><td class="" id="dgVD" style="width:253.203125px">inference time에만 사용</td><td class="" id="?GWK" style="width:368.99998474121094px">inference + parameter update (TTT) 포함</td></tr><tr id="23f451cf-7b79-80af-8e56-fa25a34d2c88"><td class="" id="dgVD" style="width:253.203125px">majority voting만 사용</td><td class="" id="?GWK" style="width:368.99998474121094px">majority voting → reward로 전환하여 RL 수행</td></tr><tr id="23f451cf-7b79-80e3-8c35-ecc7053d19e1"><td class="" id="dgVD" style="width:253.203125px">non-parametric</td><td class="" id="?GWK" style="width:368.99998474121094px">parametric update 포함</td></tr></tbody></table> <p class="" id="23f451cf-7b79-80fa-8a1b-fd0b7206516d"> </p> <h2 class="" id="23f451cf-7b79-80df-960a-f10bab20ab52">5.2 RL for Reasoning</h2> <p class="" id="23f451cf-7b79-8008-aba5-e9d6d24d7450"> </p> <p class="" id="23f451cf-7b79-80ec-811a-c889338e0cdc"> <strong>Human Preference 기반</strong></p> <ol class="numbered-list" id="23f451cf-7b79-807e-a9dc-f245579ed6f2" start="1" type="1"><li>Human 또는 annotator가 여러 답 중 선호도를 매김</li></ol> <ol class="numbered-list" id="23f451cf-7b79-80a9-8976-df4e7934194c" start="2" type="1"><li>Preference Model 학습 → reward로 사용</li></ol> <ol class="numbered-list" id="23f451cf-7b79-809d-b843-c86c5017dc1a" start="3" type="1"><li>PPO 등으로 policy (LLM) 업데이트</li></ol> <li style="list-style-type:disc">강점: 자연언어적 open-ended instruction에는 적합</li> <li style="list-style-type:disc">한계:  <strong>사람의 label이 필요</strong>하고,  <strong>수치적 평가 불가능한 domain</strong>에서만 가능</li> <p class="" id="23f451cf-7b79-8049-9b2a-ed686d3173af"> </p> <p class="" id="23f451cf-7b79-80c5-acf4-f617b87f179c"> <strong>Rule-based Reward 기반</strong></p> <p class="" id="23f451cf-7b79-80a9-8004-d20bba2d0799">reasoning domain (예: 수학)에서는 정답을 명확하게 판별할 수 있음</p> <p class="" id="23f451cf-7b79-8058-a479-ec3199ba3775">→ 맞았으면 reward = 1, 틀렸으면 0 같은  <strong>rule-based reward</strong> 사용 가능</p> <p class="" id="23f451cf-7b79-8017-a9d6-d26d14787daa"> </p> <p class="" id="23f451cf-7b79-805a-a6ad-cf611db203ff"> <strong>GRPO (Group Relative Policy Optimization)</strong>:</p> <p class="" id="23f451cf-7b79-80d7-b457-e0378ef2a6d8">DeepSeek-R1에서 사용. 수학 문제에 대해 긴 CoT 생성 유도</p> <p class="" id="23f451cf-7b79-8022-be2a-dbb9bc4c8417">PPO도 사용되지만, 수치적 reward의 안정성과 gradient variance가 문제됨</p> <p class="" id="23f451cf-7b79-80f0-9c70-e92f46a01e81"> </p> <table class="simple-table" id="23f451cf-7b79-8022-8cce-f248269d8bc0"><thead class="simple-table-header"><tr id="23f451cf-7b79-80cc-8860-f94665397978"><th class="simple-table-header-color simple-table-header" id=":{rp" style="width:121.6875px">구분</th><th class="simple-table-header-color simple-table-header" id="d@~H">RLHF</th><th class="simple-table-header-color simple-table-header" id="|Fw|" style="width:172.4375px">GRPO / Rule-based RL</th><th class="simple-table-header-color simple-table-header" id="Qb=S" style="width:169.2890625px">TTRL</th></tr></thead><tbody><tr id="23f451cf-7b79-8050-803e-e70b82cf0fa2"><td class="" id=":{rp" style="width:121.6875px">supervision source</td><td class="" id="d@~H">human preference</td><td class="" id="|Fw|" style="width:172.4375px">rule-based labels <br/>(정답존재)<br/></td><td class="" id="Qb=S" style="width:169.2890625px"> <strong>majority voting</strong> <br/>(pseudo-label)<br/></td></tr><tr id="23f451cf-7b79-80a0-a5c5-fcdec2ab6d1c"><td class="" id=":{rp" style="width:121.6875px">label 필요 여부</td><td class="" id="d@~H">필요</td><td class="" id="|Fw|" style="width:172.4375px">필요</td><td class="" id="Qb=S" style="width:169.2890625px"> <strong>불필요 (label 없음)</strong></td></tr><tr id="23f451cf-7b79-8056-b43b-d981996bdb42"><td class="" id=":{rp" style="width:121.6875px">학습 시점</td><td class="" id="d@~H">offline RL</td><td class="" id="|Fw|" style="width:172.4375px">offline RL</td><td class="" id="Qb=S" style="width:169.2890625px"> <strong>Test-time (online RL)</strong></td></tr><tr id="23f451cf-7b79-80bf-bd04-ea80e41d363c"><td class="" id=":{rp" style="width:121.6875px">task</td><td class="" id="d@~H">open-domain instruction</td><td class="" id="|Fw|" style="width:172.4375px">math, logic, program</td><td class="" id="Qb=S" style="width:169.2890625px">math, logic, program</td></tr></tbody></table> <p class="" id="241451cf-7b79-806c-b521-c5d44a654156"> </p> <p class="" id="241451cf-7b79-8005-9b3e-c9ab4028de22"> </p> <hr id="23f451cf-7b79-80cb-a4c8-ceb48ca34901"/> <h1 class="" id="23f451cf-7b79-8060-9397-c7cadf70a7e0">2. Test-Time Reinforcement Learning (TTRL)</h1> <blockquote class="" id="23f451cf-7b79-8098-b1f7-ff2cdc96f014">We study the problem of training a pre-trained model during test time using RL without ground-truth labels. We call this setting Test-Time Reinforcement Learning.</blockquote> <p class="" id="240451cf-7b79-80c8-80f9-c687549fa84f"> </p> <h2 class="" id="23f451cf-7b79-80bf-bbb8-c9d97d99d929">2.1 Methodology</h2> <figure class="image" id="23f451cf-7b79-806a-9b7e-dbaa8db953f7"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image.webp" style="width:709.9715576171875px"/></picture></figure> <p class="" id="23f451cf-7b79-80b2-9528-c205bc70d15b">녹색 배경이 TTS + 이후 나온 결과로 reward calaulation을 통해 Test-Time에 Training</p> <p class="" id="240451cf-7b79-805e-a015-e91b2dc1b750">M: 한 문제(q)에 대해 생성하는  <strong>답변 수</strong></p> <p class="" id="240451cf-7b79-800d-9b93-e29aeea82944">N = batch_size(하나의 학습 step에서 사용하는  <strong>문제 수)</strong></p> <p class="" id="240451cf-7b79-80b8-b020-ce347a6beebf">첫번째 문제에 M개의 답변 내고, voting하고 reward 계산해서 모아놓은게 R(y1, y)</p> <p class="" id="23f451cf-7b79-80f7-81e9-f7f74a50a932"> </p> <h3 class="" id="23f451cf-7b79-8023-b22e-e40da8d0d0d7">상태(state)와 행동(action)</h3> <li style="list-style-type:disc">주어진 문제(prompt) x를 상태(state)로 보고,</li> <li style="list-style-type:disc">LLM은 그에 대한 답변 y를  <strong>policy </strong><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo>∣</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{\theta}(y \mid x) </annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span><span>﻿</span></span>로부터 생성 (sampling)</li> <p class="" id="23f451cf-7b79-80bf-9a18-de6f9fb17744">→  <strong>LLM의 답변 행위 = RL의 action</strong></p> <p class="" id="23f451cf-7b79-80cd-a504-e3c6dcaea997"> </p> <h3 class="" id="23f451cf-7b79-8028-8c1f-e6223b724e26">Rollout: 답변 여러 개 생성</h3> <figure class="image" id="240451cf-7b79-8043-8848-f09b06b6c981"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%201.webp" style="width:709.9928588867188px"/></picture></figure> <p class="" id="23f451cf-7b79-8020-b683-f5d4bae8b936">Ground-truth label이 없이 reward signal을 보내야하니까,  <strong>여러개의 candidate(후보) output을 생성</strong></p> <p class="" id="23f451cf-7b79-80a4-897e-c2a8ef3e923b">→ <mark class="highlight-red_background">x에 대해 답변 {y1,...,yM} 을 sampling</mark> </p> <p class="" id="240451cf-7b79-80c0-aa38-c3559d8b9ec3">랜덤성 있는 샘플링으로  <strong>M=64</strong>개의 다양한 답변 생성(appendix에서는 16)</p> <p class="" id="23f451cf-7b79-807c-9a25-e4cf1ca78dae">→ 단일 답이 아닌 다양한 reasoning path를 확보해야 voting이 의미 있음</p> <p class="" id="241451cf-7b79-80d9-92fd-cfb2d1631f29"> </p> <li><details><summary>여러개의 답변은 자동으로 랜덤되는것인가? 따로 설정을 바꿔주는것인가?</summary><p class="" id="23f451cf-7b79-807e-ac23-f61a4362df9b">원래 LLM은 같은 입력에 대해서도 랜덤하게 다르게 나오긴 함.</p><p class="" id="23f451cf-7b79-8026-b7ab-d85cef1bfb6e">파라미터를 일부러 변화시키진 않고,  <strong>Randomized decoding 설정</strong></p><p class="" id="23f451cf-7b79-802e-b82a-cda6ca3dc509">→ temperature, top-p, top-k, sampling 횟수 등으로 조절</p><figure class="image" id="23f451cf-7b79-8014-914d-da89d38eec5f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%202.webp" style="width:672px"/></picture></figure><li style="list-style-type:disc"><code>temperature = 0.6</code></li><li style="list-style-type:disc"><code>top-p = 0.95</code></li><p class="" id="23f451cf-7b79-8073-bea1-d393e8b776f4">→ sampling된 답변이 다르게 나오도록 유도</p><p class="" id="23f451cf-7b79-8018-ad0d-ce9c89ba386c"> </p><blockquote class="" id="23f451cf-7b79-8091-b236-d5d02f1fdc6a">Temperature: Setting the temperature to 1.0, as opposed to 0.6, increases the model’s output entropy. This promotes more extensive exploration and allows the model to make better use of its prior knowledge for self-improvement, which is particularly important when addressing challenging benchmarks.</blockquote><p class="" id="23f451cf-7b79-8065-a0b4-cd5d24e95c61">실제로 이후 실험에서 Parameter에 따른 비교가 있고, </p><p class="" id="241451cf-7b79-80f1-a257-d2b750388110">Dataset 난이도에 따라서 조정이 필요하다는 한계를 밝힘.</p><p class="" id="241451cf-7b79-80d7-adf4-c620fca26c46">(Figure 11 : Inappropriate RL Hyperparameters)</p><p class="" id="241451cf-7b79-8095-b24f-fd52a4df6557">어려운 task에 대해서는 Temperature을 1.0으로 해야 효과가 좋음.</p><p class="" id="241451cf-7b79-804a-9854-e9cc681a5e3e">→ temperature 높이면 diversity 증가 → exploration 증가 → high entropy → 다양한 답변</p><p class="" id="23f451cf-7b79-80f2-b4b5-c4de0e277aea"> </p></details></li> <p class="" id="240451cf-7b79-80d8-a5f5-c3286a44d0ad"> </p> <p class="" id="23f451cf-7b79-802a-b5dc-ca4a4f4e05a2"> </p> <h3 class="" id="23f451cf-7b79-8032-ba84-e5a1a9510f85">정답 추출 + Majority Voting (Label 추정)</h3> <figure class="image" id="240451cf-7b79-8057-94a4-cf9ec872350d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%203.webp" style="width:709.9928588867188px"/></picture></figure> <li style="list-style-type:disc">각 𝑦i에서 최종 정답만 extract → 숫자, 선택지</li> <li style="list-style-type:disc"><mark class="highlight-blue"><mark class="highlight-default_background"> <strong>majority voting (다수결)로 가장 많이 나온 답을 pseudo-label 𝑦∗로 정함</strong></mark></mark></li> <p class="" id="240451cf-7b79-8088-9b33-d79764dc2134"> </p> <p class="" id="240451cf-7b79-8081-8bde-d6e06d9ea4c6"> </p> <h3 class="" id="23f451cf-7b79-807c-b921-f32ebc0bd18e">Reward 계산</h3> <figure class="image" id="240451cf-7b79-8024-9887-c5d632ae7760"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%204.webp" style="width:709.9928588867188px"/></picture></figure> <p class="" id="23f451cf-7b79-8020-af8c-f5f68a8f8c50">sampling된 y답이 majority 답이랑 일치하면 → reward = 1</p> <p class="" id="240451cf-7b79-8043-a908-d53df570677f">아니면 → reward = 0</p> <figure class="image" id="23f451cf-7b79-8085-b276-c05356788692" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%205.webp" style="width:240px"/></picture></figure> <p class="" id="23f451cf-7b79-8080-90ab-c9a5d3d5dfb2">→ 실제 정답을 모르지만, voting 결과에 얼마나 일치했는지를 기준으로 학습 신호 제공</p> <p class="" id="240451cf-7b79-80f5-b8ab-faabdc2bc747"> </p> <blockquote class="" id="240451cf-7b79-80f8-8763-d3d4b32c050e">We sample 64 responses per prompt using the current model and randomly select 32 to use for training.</blockquote> <p class="" id="240451cf-7b79-8087-9b62-d8db511ddca6">랜덤하게 32개를 트레이닝에 사용그 중 32개만 골라서 reward 계산에 사용</p> <p class="" id="240451cf-7b79-8062-9f2c-c77132b35c3a">→ 투표는 64개로 하는데, 나중에 RL은 랜덤으로 반만 사용함. (너무 계산 과도하니까)</p> <p class="" id="240451cf-7b79-80ba-9977-f22b53cc81e8"> </p> <figure class="block-color-teal_background callout" id="240451cf-7b79-80ad-b82c-d67dc448a2fa" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%">위 과정을 batch size (N) 만큼 반복함. 매 질문마다 업데이트 하는게 아님.<blockquote class="" id="240451cf-7b79-803d-9c86-fa2ad5ebe9f9">Each RL step samples a batch of questions and computes policy gradients using the pseudo-rewards from majority voting.</blockquote>→  <strong>각 step마다 여러 개의 질문(batch of questions)을 사용</strong><br/>→ 이게 곧 우리가 말하는 “batch size”에 해당<br/> <br/>데이터셋마다 다르게 사용했음.<br/>AIME=80, AMC=30, MATH-500=10<br/>AIME는 어려우니까 여러번하고 업데이트해줘야 틀린 정보로 업데이트가 반복될 확률이 줄어듬.</div></figure> <p class="" id="241451cf-7b79-80c7-b5d0-fcbdd80cad59"> </p> <p class="" id="23f451cf-7b79-80d3-a7ef-fbe33ed33149"> </p> <h3 class="" id="23f451cf-7b79-80e8-82ab-f2ba6cd22fbc">Policy 업데이트 (RL)</h3> <figure class="image" id="240451cf-7b79-8016-a269-d63be4bcdbb4"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%206.webp" style="width:720px"/></picture></figure> <p class="" id="240451cf-7b79-80ec-bb33-f04da0189a57">batch size만큼 반복하면 이제 모아놨던</p> <p class="" id="23f451cf-7b79-8011-96c4-f92e87529bc2">목표: expected reward를 최대화하는 것 → 다수결이 옳다고 믿자!</p> <figure class="equation" id="23f451cf-7b79-8009-b062-ec1a7bd1df43"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>θ</mi></munder><msub><mi mathvariant="double-struck">E</mi><mrow><mi>y</mi><mo>∼</mo><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><mi>r</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>y</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\max_{\theta} \mathbb{E}_{y \sim \pi_{\theta}(\cdot | x)} \left[ r(y, y^*) \right]</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.5021em;vertical-align:-0.7521em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">∼</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></div></figure> <p class="" id="240451cf-7b79-80b3-af41-e9749458d9d1">reward가 높았던 답변 쪽으로 (gradient ascent)</p> <p class="" id="240451cf-7b79-8033-ad24-dcd1fc420324">θ (모델 파라미터)를 업데이트</p> <figure class="equation" id="23f451cf-7b79-808a-81da-f70482e06880"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>←</mo><mi>θ</mi><mo>+</mo><mi>η</mi><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><msub><mi mathvariant="double-struck">E</mi><mrow><mi>y</mi><mo>∼</mo><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><mi>r</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>y</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\theta \leftarrow \theta + \eta \nabla_{\theta} \mathbb{E}_{y \sim \pi_{\theta}(\cdot | x)} \left[ r(y, y^*) \right]</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">∼</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></div></figure> <figure class="block-color-teal_background callout" id="23f451cf-7b79-805b-abd9-d45c1f8f209d" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%">LLM이 prompt에 대해 여러 답변을 생성하고, 그 중 다수결로 추정된 label과 얼마나 일치하는지를 reward로 삼아, LLM의 policy를 reinforcement learning으로 업데이트한다.</div></figure> <p class="" id="240451cf-7b79-8003-9d36-ce9c78d260c5"> </p> <p class="" id="240451cf-7b79-80b0-935c-cf0c179556e8"> </p> <p class="" id="240451cf-7b79-8070-b63c-f9f9cc98e99e"> </p> <h2 class="" id="23f451cf-7b79-80e3-940e-c68c1ba1f242">2.2 Majority Voting Reward Function</h2> <figure class="image" id="23f451cf-7b79-8053-9b47-f3832c099906"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%207.webp" style="width:709.9928588867188px"/></picture></figure> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">collections</span> <span class="kn">import</span> <span class="n">Counter</span>

<span class="k">def</span> <span class="nf">majority_voting_reward_fn</span><span class="p">(</span><span class="n">outputs</span><span class="p">):</span>
    <span class="c1"># 1. 정답 추출
</span>    <span class="n">answers</span> <span class="o">=</span> <span class="p">[</span><span class="nf">extract_answer</span><span class="p">(</span><span class="n">output</span><span class="p">)</span> <span class="k">for</span> <span class="n">output</span> <span class="ow">in</span> <span class="n">outputs</span><span class="p">]</span>
    
    <span class="c1"># 2. 다수결로 label 추정
</span>    <span class="n">counts</span> <span class="o">=</span> <span class="nc">Counter</span><span class="p">(</span><span class="n">answers</span><span class="p">)</span>
    <span class="n">majority_answer</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">counts</span><span class="p">.</span><span class="nf">most_common</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    
    <span class="c1"># 3. reward 계산 (일치 여부 기준)
</span>    <span class="n">rewards</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span> <span class="k">if</span> <span class="n">ans</span> <span class="o">==</span> <span class="n">majority_answer</span> <span class="k">else</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">ans</span> <span class="ow">in</span> <span class="n">answers</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">rewards</span>
</code></pre></div></div> <p class="" id="241451cf-7b79-80e9-9c6e-c2cc5c77505f"> </p> <p class="" id="241451cf-7b79-80cd-b3d6-c3b9409f74db"> </p> <p class="" id="241451cf-7b79-805b-9ad4-c1fc388b6d26"> </p> <hr id="23f451cf-7b79-807f-b369-c6b7a60d06bf"/> <h1 class="" id="23f451cf-7b79-8029-9470-f589da896f7a">3 Experiments</h1> <h2 class="" id="23f451cf-7b79-8024-8350-da5c0e1a2cc6">3.1 Experimental Setup</h2> <table class="simple-table" id="23f451cf-7b79-8055-8974-f9f6cb6688ce"><thead class="simple-table-header"><tr id="23f451cf-7b79-8027-a552-f1e1f32d8b6b"><th class="simple-table-header-color simple-table-header" id="MvWh" style="width:107.99999237060547px">구성요소</th><th class="simple-table-header-color simple-table-header" id="mWXN" style="width:263px">설정 내용</th><th class="simple-table-header-color simple-table-header" id="~oyC" style="width:338px">이유</th></tr></thead><tbody><tr id="23f451cf-7b79-8063-a869-db694264b0eb"><td class="" id="MvWh" style="width:107.99999237060547px">Models</td><td class="" id="mWXN" style="width:263px">Qwen, LLaMA, Mistral, DeepSeek 등 다양한 scale의 LLM</td><td class="" id="~oyC" style="width:338px">pretrained + post-trained 모델 모두 사용<br/>→ TTRL이 전형적인 SFT 이후에도 작동 가능한지 검증<br/></td></tr><tr id="23f451cf-7b79-80fb-ba55-c8e1def6bb44"><td class="" id="MvWh" style="width:107.99999237060547px">Tasks</td><td class="" id="mWXN" style="width:263px">AIME 2024, AMC, MATH-500, GPQA</td><td class="" id="~oyC" style="width:338px">정답이 명확하고 채점 가능한 task 위주 선택</td></tr><tr id="23f451cf-7b79-805d-ae8f-e61000881d82"><td class="" id="MvWh" style="width:107.99999237060547px">Sampling</td><td class="" id="mWXN" style="width:263px">64개 생성, 32개 학습 사용</td><td class="" id="~oyC" style="width:338px">label estimation 신뢰도 확보 + 연산 효율 고려</td></tr><tr id="23f451cf-7b79-80a1-9ae2-ff0a75a84127"><td class="" id="MvWh" style="width:107.99999237060547px">Decoding</td><td class="" id="mWXN" style="width:263px">temp=0.6, top-p=0.95</td><td class="" id="~oyC" style="width:338px"></td></tr><tr id="23f451cf-7b79-8057-b356-d922c889d4ce"><td class="" id="MvWh" style="width:107.99999237060547px">RL Algorithm</td><td class="" id="mWXN" style="width:263px"> <strong>GRPO</strong>,  <strong>AdamW</strong>, Cosine schedule Learning rate:5 × 10⁻⁷</td><td class="" id="~oyC" style="width:338px">실험적으로 안정성과 sample-efficiency가 검증된 방식</td></tr><tr id="23f451cf-7b79-80ac-b455-dfdee0cc5eb4"><td class="" id="MvWh" style="width:107.99999237060547px">Max Length</td><td class="" id="mWXN" style="width:263px">3072 (일반), 32768 (LRM)</td><td class="" id="~oyC" style="width:338px">CoT처럼 길고 reasoning-heavy한 답변도 처리 가능하도록 설계</td></tr><tr id="23f451cf-7b79-80c0-8212-e9cbac7489b7"><td class="" id="MvWh" style="width:107.99999237060547px">Episodes</td><td class="" id="mWXN" style="width:263px">AIME=80, AMC=30, MATH-500=10</td><td class="" id="~oyC" style="width:338px">dataset 난이도와 크기에 맞춰 적절히 조정</td></tr></tbody></table> <li><details><summary>Dataset 설명</summary><p class="" id="240451cf-7b79-8048-b1fb-e26b2b71d455">AIME 2024 - American Invitational Mathematics Examination</p><li style="list-style-type:disc">고등학교 상위권 대상 미국 수학 경시대회 (3-digit integer)</li><p class="" id="240451cf-7b79-80d4-969d-ccfa878870ed">AMC - American Mathematics Competitions</p><li style="list-style-type:disc">AIME보다 쉬운 단계의 선다형 수학 경시 문제 (5지선다 A~E)</li><p class="" id="240451cf-7b79-80b8-ac73-d8b5a0fc187b">MATH-500 - Open-source 수학 문제집에서 500개 추출</p><li style="list-style-type:disc">수식, 정수 → 프로그램으로 직접 계산 (symbolic checker 사용)</li><p class="" id="240451cf-7b79-8021-85f6-e39b93da7195">GPQA - Graduate-level Physics Question Answering</p><li style="list-style-type:disc">이 중 Diamond 난이도만 (객관식)</li><p class="" id="240451cf-7b79-8009-bd3a-c3830a27353c"> </p></details></li> <p class="" id="240451cf-7b79-80d0-ad43-cda625c50c10"> </p> <p class="" id="240451cf-7b79-80ff-a3de-e4ee31271329"> </p> <h2 class="" id="23f451cf-7b79-8067-ae6d-f50c97867dda">3.2 Main Results</h2> <h3 class="" id="240451cf-7b79-803f-bca0-d7fd3048a847">Table 1 : Performs well on most tasks</h3> <figure class="image" id="23f451cf-7b79-8007-9e99-c348a3e0ab19" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%208.webp" style="width:528px"/></picture></figure> <p class="" id="240451cf-7b79-800a-b717-e41bee762adc">Qwen2.5-Math-1.5B 같은 1.5B 모델이 73.0까지 가기도 함.<br/>→ 소형 모델은 RL이 어려웠다는 걸 깸<br/><br/>* 여기서는 Qwen3-8B가 non-thinking mode이고, thinking mode는 Figure 3<br/></p> <p class="" id="240451cf-7b79-80fd-8787-c14bdf2b0f04"> </p> <p class="" id="240451cf-7b79-806f-b423-eddca2305895"> </p> <h3 class="" id="240451cf-7b79-8070-b30b-dc24b7ce5eda">Table 2 : Performs well on most models</h3> <figure class="image" id="23f451cf-7b79-8069-94ac-c0a9464371eb" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%209.webp" style="width:432px"/></picture></figure> <p class="" id="240451cf-7b79-8052-9cfb-dbfed28c498c"> </p> <p class="" id="23f451cf-7b79-804b-8aaa-d0db412bd767">LLaMA-Instruct, DeepSeek-R1, Mistral 등 다양한 모델에서 테스트</p> <p class="" id="240451cf-7b79-8022-9080-d701ee2dd05f"> </p> <p class="" id="240451cf-7b79-8099-ac35-ed608668dc06"> </p> <h3 class="" id="240451cf-7b79-8025-8ac4-ff07c4a07636">Figure 3 : TTRL performs well on LRMs</h3> <figure class="image" id="23f451cf-7b79-80f1-9ddd-da1a2bc484b1" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2010.webp" style="width:336px"/></picture></figure> <p class="" id="240451cf-7b79-8034-a11b-d095d2ffca52">Large Reasoning Models에도 좋은 성능을 보임</p> <p class="" id="240451cf-7b79-8017-8a49-d6e755b3b307">이미 Reasoning쪽으로 타겟해서 학습한 모델도 향상됨</p> <p class="" id="240451cf-7b79-80de-a168-db97fad92c46"> </p> <p class="" id="240451cf-7b79-80ff-b5e5-e4995a375ca5"> </p> <h3 class="" id="240451cf-7b79-8003-bb37-f5dfd44ec308">Figure 4 : TTRL generalizes well beyond the target task</h3> <figure class="image" id="23f451cf-7b79-80b1-ab57-d20470accbac" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2011.webp" style="width:576px"/></picture></figure> <p class="" id="240451cf-7b79-8044-be24-ee6e9c7e70d6">특정 벤치마크에서 학습 후 다른 task에서도 성능이 같이 올라감.</p> <p class="" id="240451cf-7b79-80d5-86d2-d8da741b1da3"> </p> <p class="" id="240451cf-7b79-80d6-9228-c14912ce4de7"> </p> <h3 class="" id="240451cf-7b79-8022-93f7-d59233a11c6b">Figure 5 : TTRL is compatible with different RL algorithms</h3> <figure class="image" id="240451cf-7b79-80bf-99fb-c7c0e6662478" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2012.webp" style="width:576px"/></picture></figure> <p class="" id="240451cf-7b79-808f-ae8d-c6d789d6b4dd">GRPO, PPO, PRIME을 비교</p> <p class="" id="241451cf-7b79-80d1-a6ea-eb3edc3c921c">GRPO (rule-based), PPO (value-based), PRIME (process-level reward) </p> <p class="" id="241451cf-7b79-8030-bfab-c0c793b94aa3">→ 다른 알고리즘으로도 호환이된다.</p> <p class="" id="241451cf-7b79-8058-84cd-e6ce74a8a8db"> </p> <li><details><summary> <strong>PPO</strong> : Proximal Policy Optimization</summary><p class="" id="241451cf-7b79-802d-be42-c396c4c7d495">현재의 policy를 너무 많이 바꾸지 않으면서 조금씩 좋아지게</p><p class="" id="241451cf-7b79-8091-8f22-e88408788c3f">value function V(s) 을 사용해서 현재 상태가 얼마나 좋은지를 예측하고,</p><p class="" id="241451cf-7b79-80e4-a233-eacfd33f6fe8">그 기준으로 얼마나 정책을 바꿀지를 계산</p></details></li> <p class="" id="241451cf-7b79-8003-9ed3-cfcb75e6667b"> </p> <li><details><summary> <strong>PRIME</strong> : Process Reinforcement through Implicit Rewards</summary><p class="" id="241451cf-7b79-809f-bbe8-fc024bbc9fcb"><a href="https://arxiv.org/abs/2502.01456">https://arxiv.org/abs/2502.01456</a></p><p class="" id="241451cf-7b79-807b-ba92-c0ba196c7ef6">각 토큰 단위로 계산된 log-prob ratio를 사용해 reward를 구성</p><p class="" id="241451cf-7b79-80cc-8a85-df0b09b702ac">근데, reward source는 여전히  <strong>majority voting 기반</strong>이었을 가능성이 큼</p></details></li> <p class="" id="241451cf-7b79-80d8-a048-ef56f094a64a"> </p> <li><details><summary> <strong>GRPO</strong> : Group Relative Policy Optimization</summary><p class="" id="241451cf-7b79-800c-a5d9-c77d5e1f4c0e"><a href="https://arxiv.org/abs/2402.03300">https://arxiv.org/abs/2402.03300</a></p><p class="" id="240451cf-7b79-80b9-9848-ccfe19cae50b">같은 질문에 대한 여러 응답의 상대적인 정답률을 비교하여 보상을 주는 방식</p><p class="" id="240451cf-7b79-80de-949b-e19359b9af89">N개의 샘플, 다항 reward, 다양성 샘플링, online setting 등에 모두 적용 가능</p></details></li> <p class="" id="240451cf-7b79-8044-9555-c8e1fedfeae4"> </p> <li><details><summary>DPO : Direct Preference Optimization (사용 안함)</summary><p class="" id="241451cf-7b79-8067-a466-eb328696f023">두 응답 중 어느 쪽이 더 좋은지에 대한 인간의 "선호"를 직접 학습하는 방식</p><p class="" id="241451cf-7b79-8042-a1a7-f565568e4c95">reward가 단순한 0/1 형태의  <strong>pairwise</strong> 비교로 제한</p><p class="" id="241451cf-7b79-8093-9e05-d6527de1708e">preference 들어가서 offline 구조임.</p><p class="" id="241451cf-7b79-803c-b69a-d6961c1154ba"> <strong>→ 이 논문에서 적용 못함.</strong></p></details></li> <p class="" id="240451cf-7b79-80c2-949d-c53899472add"> </p> <p class="" id="240451cf-7b79-80f7-998b-f4b873c7068f"> </p> <h3 class="" id="23f451cf-7b79-809f-8b9b-f422de0e92f7">Figure 6 : Achieves sustainable self-evolution through “online” and “RL”</h3> <figure class="image" id="240451cf-7b79-804e-8318-fa45ce179481" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2013.webp" style="width:624px"/></picture></figure> <p class="" id="240451cf-7b79-80d8-a0c4-ec28fbf44250"> </p> <li><details><summary>pass@1, avg@16, maj@16 이 뭐야?</summary><p class="" id="241451cf-7b79-8041-9087-d36765281472"> </p><p class="" id="240451cf-7b79-80d5-9e68-c2d5cbb7be4c"> <strong>pass@1</strong></p><p class="" id="240451cf-7b79-801e-ad5e-c87c0bc89f13">→ TTRL 모델이 현재 상태로 inference 할 때  <strong>단일 샘플이 정답일 확률</strong></p><p class="" id="240451cf-7b79-80ff-bcfb-c5b73b6da9d3">→ 실제 사용자 성능</p><p class="" id="240451cf-7b79-80e0-aeb5-c99eb32fbf71"> </p><p class="" id="240451cf-7b79-8016-9a03-c130c7b520ca"> <strong>avg@16</strong></p><li style="list-style-type:disc">각 문제에 대해 생성된 16 <strong>개의 답변 중 정답인 비율</strong>을 계산</li><p class="" id="240451cf-7b79-80a5-b2e1-fc91c2973919">→ 예를 들어 정답이 10번 나왔으면 그 문제의 점수는 10/16</p><li style="list-style-type:disc">이렇게 모든 문제에 대해 평균을 낸 것</li><p class="" id="240451cf-7b79-80dd-83a3-ebf319ecbedf">→ ground truth랑 비교해야하니까 사실상 나중에 성능 평가용임</p><p class="" id="240451cf-7b79-8049-96a5-c2b9f47327a5"> </p><p class="" id="240451cf-7b79-80bd-9dcd-c6d2cc501c5d"> <strong>maj@16</strong></p><li style="list-style-type:disc">다수결로 뽑은 수도라벨이  <strong>정답이면</strong> 1점</li><li style="list-style-type:disc">이렇게 전체 문제에 대해 평균을 내면 <code>maj@64</code> accuracy</li><p class="" id="241451cf-7b79-808b-8f6d-d1a7a039432e"> </p></details></li> <p class="" id="240451cf-7b79-80e4-81b2-c755fe5e59f8"> </p> <p class="" id="240451cf-7b79-80cc-882c-f02141c2f99a"> </p> <p class="" id="240451cf-7b79-8030-94a2-cffebf521dc9">TTRL은 단순히 기존의 pseudo-label에 수렴하는 게 아니라,  <strong>pseudo-label 자체도 계속 고도화</strong>되고 있음</p> <li style="list-style-type:disc">TTRL의 구조상,  <strong>자신의 예측(y_hat)으로부터 만든 보상을 기반으로 스스로 학습</strong>함</li> <li style="list-style-type:disc">그러면 모델의 성능이 향상되고, 그에 따라 더 좋은 예측 → 더 나은 pseudo-label → 더 나은 학습 신호로 이어지는  <strong>자기강화 루프(self-reinforcing loop)</strong> 형성</li> <p class="" id="240451cf-7b79-80cb-8c8b-d7e13ee9ebfd"> </p> <p class="" id="240451cf-7b79-80b7-801f-e90b6b3270cd"><mark class="highlight-red">이 논문에서는 RL을 쓸 때 maj@16 기준으로 reward를 계산(GRPO) 하고,</mark></p> <p class="" id="240451cf-7b79-8040-82fd-d60268e820a6"><mark class="highlight-red">학습 이후 성능 평가에서는 avg@16, maj@16 둘 다 확인함.</mark></p> <p class="" id="240451cf-7b79-8092-84eb-f53f81ef3d08"> </p> <p class="" id="241451cf-7b79-803c-bf84-ee06159c8099"> </p> <p class="" id="241451cf-7b79-809b-be2e-ce6cda8d7881"> </p> <p class="" id="241451cf-7b79-80c7-83e9-e65c19eba1f6"> </p> <hr id="240451cf-7b79-80bb-8c25-e7e89631b128"/> <h1 class="" id="23f451cf-7b79-806c-abcb-fd70797dd70c">4 Analysis and Discussions</h1> <p class="" id="23f451cf-7b79-8041-be5b-f85ff54d6b30"> </p> <h2 class="" id="23f451cf-7b79-8009-83cc-e5c49554336c">4.1 Q1: <mark class="highlight-red"> <strong>How Well</strong></mark> Can TTRL Perform?</h2> <p class="" id="240451cf-7b79-8035-b5a8-f8571b79b529">기존 self-training 방식의 상한선들과 비교해서 어디까지 도달할 수 있는지 실험적으로 검증</p> <figure class="image" id="240451cf-7b79-80d2-b2c7-fe2624395036" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2014.webp" style="width:624px"/></picture></figure> <p class="" id="240451cf-7b79-8052-b677-f756d195b653">TTRL 전/후의 avg@64, maj@64 비교</p> <p class="" id="240451cf-7b79-8037-8e84-de8771482b0b">→ 모든 benchmark에서 TTRL 적용 후 avg@64, maj@64 둘 다 성능이 증가</p> <p class="" id="240451cf-7b79-80d4-9ba2-fb794343826b"> <strong>TTRL은 학습 신호로 maj@n을 사용했지만, 학습 이후 결과는 그 상한선을 초과</strong></p> <p class="" id="240451cf-7b79-80fa-b6fe-de44eaba5868"> </p> <p class="" id="240451cf-7b79-8007-ac7c-efcf01131db1"> </p> <figure class="image" id="240451cf-7b79-8052-8752-eb319dde9f85" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2015.webp" style="width:480px"/></picture></figure> <p class="" id="240451cf-7b79-8032-b0bb-e6958cb3359f">RL : ground-truth label이 있는 상태에서 RL을 직접 돌리는 경우</p> <p class="" id="240451cf-7b79-8048-bd37-ef6d7dbd1660">사실 RL은 Label이 없어서 Test-Time에 불가능 → 그 성능을 따라감<br/><br/></p> <p class="" id="240451cf-7b79-8097-97f4-c2f78a0c1893"> </p> <li><details><summary>그런데 어떻게 TTRL이 중간 accuracy에서 leakage보다 높아질 수 있나?</summary><p class="" id="240451cf-7b79-80a9-a8e1-c99bebbcc22a"> </p><p class="" id="240451cf-7b79-8067-a823-ccc2b3a70ae0">Leakage RL은 단일 샘플에 대해  <strong>reward가 binary함</strong></p><li style="list-style-type:disc">정답이면 +1, 오답이면 0</li><p class="" id="240451cf-7b79-8028-8438-c7efc8130e8f">→ 이건  <strong>very sparse + very high variance</strong> reward</p><p class="" id="240451cf-7b79-80d1-a79e-c2c2f766f6ed">→ 따라서 초반에는  <strong>policy가 이 reward를 제대로 활용하기 어려움</strong></p><p class="" id="240451cf-7b79-8013-8160-ddf33614e707"> </p><p class="" id="240451cf-7b79-8068-b119-e2477b7bec18">반대로 TTRL은 soft한 avg 기반 reward를 사용함</p><li style="list-style-type:disc">예를 들어 정답이 전체 32개 중 18개면 reward가 0.5625</li><li style="list-style-type:disc">이건  <strong>gradient variance가 낮고 안정적인 학습이 가능</strong></li><p class="" id="240451cf-7b79-8018-9458-e86270a32e3f"> </p><p class="" id="240451cf-7b79-8025-94e3-e54932a28a96">하지만 시간이 지나면, 정답 기반 reward가 더 정확하므로 TTRL보다 더 높은 한계 성능에 수렴하게 됨</p></details></li> <p class="" id="240451cf-7b79-8048-b5df-c09f4f31732d"> </p> <p class="" id="240451cf-7b79-8096-afde-d782681a5233"> </p> <h2 class="" id="23f451cf-7b79-80d6-beaa-d5bc4fc4a318">4.2 Q2: Why Does TTRL Work?</h2> <p class="" id="240451cf-7b79-800c-85e1-c246e1f49813"> </p> <h3 class="" id="240451cf-7b79-801b-85c5-fe14a346f5d8">1. Label Estimation</h3> <figure class="image" id="240451cf-7b79-808b-aa4e-e0f53f1b1958"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2016.webp" style="width:709.9928588867188px"/></picture></figure> <p class="" id="240451cf-7b79-809f-8301-ceee99ece220"> <strong>Label Accuracy와 Reward Accuracy는 다르다!!</strong></p> <li style="list-style-type:disc">label accuracy는 낮음 (majority voting으로 만든 pseudo-label이 틀리는 경우가 많음)</li> <li style="list-style-type:disc">그러나  <strong>reward accuracy는 높게 유지됨</strong></li> <figure class="block-color-teal_background callout" id="240451cf-7b79-800e-b5a2-fb7d2f98fbce" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%"><mark class="highlight-default_background">"</mark><mark class="highlight-default_background"><strong>Lucky Hit</strong></mark><mark class="highlight-default_background">" 현상: sampling된 답 중 정답을 우연히 맞출 수 있고, 이게 높은 보상으로 이어짐</mark></div></figure> <p class="" id="240451cf-7b79-8032-95cc-ef963af5d2f3"> </p> <p class="" id="240451cf-7b79-8001-9f70-ca10f0c537b2">라벨이 틀릴 수 있어도, reward는 우연히 맞기 때문에 보상 신호는 충분히 유효하고,</p> <p class="" id="240451cf-7b79-80e5-97db-f5fed93b9fbd">RL은 원래 그런 noise에 강하므로, label이 부정확해도 학습이 안정적으로 진행될 수 있다.</p> <p class="" id="240451cf-7b79-80a3-af18-f9d894565bf9"> </p> <p class="" id="240451cf-7b79-808b-8ced-c6589e02f9b4"> </p> <h3 class="" id="240451cf-7b79-804e-bdbf-da16b5cf8733">2. Reward Calculations</h3> <p class="" id="240451cf-7b79-8044-a970-ea3109738a6c"> <strong>비교 기반이기 때문에 "운 좋게" 올바른 보상을 줄 수 있다</strong></p> <li style="list-style-type:disc">ŷ가 label과 같으면 →  <strong>positive reward</strong></li> <li style="list-style-type:disc">ŷ가 label과 다르면 →  <strong>negative reward</strong></li> <p class="" id="240451cf-7b79-80f9-a59a-d01418bfb746">근데 이 label이 실제 정답이 아닐 수도 있음</p> <p class="" id="240451cf-7b79-80ec-8577-d56a3bb2e22d">그래도  <strong>ŷ가 틀린 label이랑도 다르면</strong>, 그건  <strong>"틀린 거다"라는 부정적 신호로는 여전히 맞음</strong></p> <p class="" id="240451cf-7b79-80cb-a004-dff6578ca6a4">→ label이 틀려도 reward는 우연히 맞는 경우가 많음</p> <figure class="image" id="240451cf-7b79-80a5-b637-cbe59861f08c" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2017.webp" style="width:432px"/></picture></figure> <table class="simple-table" id="240451cf-7b79-80bf-8971-f23e8aec9573"><thead class="simple-table-header"><tr id="240451cf-7b79-80ea-ad6e-c74f60cfc924"><th class="simple-table-header-color simple-table-header" id="l=SS" style="width:219px">무엇을 기준으로 reward?</th><th class="simple-table-header-color simple-table-header" id="Y^DN">예측값</th><th class="simple-table-header-color simple-table-header" id="U:ve" style="width:262px">reward</th></tr></thead><tbody><tr id="240451cf-7b79-8000-9960-dcebc6f6b7c8"><td class="" id="l=SS" style="width:219px"> <strong>True label (3)</strong></td><td class="" id="Y^DN"><code>1 1 2 2 2 4 5 6</code></td><td class="" id="U:ve" style="width:262px"><code>0 0 0 0 0 0 0 0</code> → 전부 오답</td></tr><tr id="240451cf-7b79-80b5-8c45-c794199048e6"><td class="" id="l=SS" style="width:219px"> <strong>Estimated label (2)</strong></td><td class="" id="Y^DN"><code>1 1 2 2 2 4 5 6</code></td><td class="" id="U:ve" style="width:262px"><code>0 0 1 1 1 0 0 0</code> → 3개 정답 처리</td></tr></tbody></table> <p class="" id="240451cf-7b79-8081-971a-fe1440689a2b">→ 8개 중 5개는 올바른 reward를 줌</p> <p class="" id="240451cf-7b79-808f-87da-dc3ae6db093a"> </p> <p class="" id="240451cf-7b79-8011-888a-d82ff1ed6eaa"> <strong>rollout 기반 robustness</strong></p> <p class="" id="240451cf-7b79-80ed-aaf6-ffe3c1f128fd">하나의 질문에 대해 여러 개 (M개)의 답변을 sampling하기 때문에:</p> <li style="list-style-type:disc">하나라도 label과 일치하는 output이 있으면 → positive reward</li> <li style="list-style-type:disc">하나도 없더라도 → negative reward는 정확히 계산됨</li> <p class="" id="240451cf-7b79-80c5-b913-e49b902155c7"> </p> <p class="" id="240451cf-7b79-8057-90df-d8e593a49a28"> <strong>모델이 못할수록 reward accuracy는 오히려 올라간다?</strong></p> <p class="" id="240451cf-7b79-8037-851a-c62c5623ef52">AIME 2024에서</p> <li style="list-style-type:disc">label accuracy: 37%</li> <li style="list-style-type:disc">reward accuracy: 92%</li> <p class="" id="240451cf-7b79-805b-a7d5-d64d7879d0cd">모델이 다양한 오답을 내기 때문에 (e.g., 가장 많이 나온 답이 16.6%에 불과)</p> <p class="" id="240451cf-7b79-80ac-b2d5-c716e1869159"> <strong>각각의 output이 다 다른 틀린 답</strong>이므로 → label과 일치하지 않음</p> <p class="" id="240451cf-7b79-8026-868c-f7825254b303">그 자체로 negative reward가 제대로 전달됨 (비교 결과 다르니까)</p> <p class="" id="240451cf-7b79-8014-aa54-f1badd217003"> </p> <p class="" id="240451cf-7b79-8099-a119-cf0480545c8e"> </p> <h3 class="" id="240451cf-7b79-80dd-9eab-dd6ee52dcc48">3. Online Learning</h3> <p class="" id="240451cf-7b79-8030-9ce3-f213a444ad1c">온라인 RL 접근 방식을 기반으로 설계되니까 모델은 application하면서 기능을 향상시킬 수 있으며, 이는 투표를 통해 생성 된보다 정확한 레이블로 이어짐</p> <p class="" id="240451cf-7b79-807a-834f-fced1eee9bc3">→ supervision 신호의 품질이 향상되어 지속 가능한 자기 진화가 가능 (Figure 6 내용)</p> <p class="" id="240451cf-7b79-806c-ae3f-cef27e6c399a"> </p> <p class="" id="240451cf-7b79-8090-92fc-f865b70cc3b7"> </p> <p class="" id="23f451cf-7b79-8005-8962-f005e7c8ca82"> </p> <h2 class="" id="23f451cf-7b79-80f2-91a5-f5859b178380">4.3 Q3: When Might TTRL Fail?</h2> <p class="" id="240451cf-7b79-8034-9e46-c84a6434ac5e"> </p> <h3 class="" id="240451cf-7b79-8038-8e9f-fb0a7094500b">Figure 11 : Inappropriate RL Hyperparameters</h3> <figure class="image" id="240451cf-7b79-80f5-bb4b-fe5bd3f8cb7c" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2018.webp" style="width:384px"/></picture></figure> <p class="" id="240451cf-7b79-80cd-b8f7-e2348bee7743">TTRL은  <strong>unsupervised</strong> +  <strong>reward estimation이 noisy</strong>한 구조이기 때문에,</p> <p class="" id="240451cf-7b79-80c0-8e39-e64a7e99bc20">일반적인 RL보다  <strong>하이퍼파라미터에 훨씬 민감</strong>함.</p> <li style="list-style-type:disc">특히 실패한 경우는  <strong>Entropy</strong>가 끝까지 낮아지지 않음 (→ exploration 실패)</li> <li style="list-style-type:disc">실험적으로 다음 두 가지가 핵심임:</li> <p class="" id="240451cf-7b79-80b8-95c3-c2dda585cbeb"> </p> <p class="" id="240451cf-7b79-807b-bc23-e97756013e40"> <strong>(1) Temperature</strong></p> <li style="list-style-type:disc"><code>T=1.0</code>으로 높이면 더 많은 entropy (더 다양한 답변)</li> <li style="list-style-type:disc">exploration이 많아지고 prior knowledge를 더 잘 쓰게 됨</li> <li style="list-style-type:disc">challenging benchmark (ex. AIME)에선 exploration이 매우 중요</li> <p class="" id="240451cf-7b79-808b-9b4e-f014d904f0eb"> <strong>(2) Episodes</strong></p> <li style="list-style-type:disc">문제 수 적고 난이도 높은 데이터셋 (ex. AIME 2024)은  <strong>에피소드 수가 많아야 함</strong></li> <li style="list-style-type:disc">exploration을 충분히 하지 않으면 수렴 불가</li> <p class="" id="240451cf-7b79-80dd-b969-fd7b3bf3c87a"> </p> <p class="" id="240451cf-7b79-8071-b8c4-c39d1b41ffef">→ TTRL은 문제의 난이도/분포/규모에 따라 하이퍼파라미터를  <strong>정밀 조정해야 함 </strong></p> <p class="" id="240451cf-7b79-80bc-b338-c36125e4fcd6"> </p> <p class="" id="240451cf-7b79-80c5-8392-fa3c9882e2a6"> </p> <h3 class="" id="240451cf-7b79-80c2-bcfc-e550e9f14c73">Table 3: Lack of Prior Knowledge on Target Task</h3> <figure class="image" id="240451cf-7b79-805e-adb4-e9f1980b0a2f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2019.webp" style="width:709.9921875px"/></picture></figure> <p class="" id="240451cf-7b79-8051-aa0b-fab15b1dfb93">TTRL은  <strong>test set만 가지고 학습</strong>하기 때문에,</p> <p class="" id="240451cf-7b79-80f2-9b8f-ec9f795cceed">모델이 그 분야에 대한 사전 지식이 없으면  <strong>완전히 실패할 수 있음</strong></p> <li style="list-style-type:disc">curriculum learning (쉬운 문제부터) 같은 도입이 없음</li> <li style="list-style-type:disc"> <strong>사전 학습된 knowledge 없이 어려운 문제에 바로 적응</strong>해야 함</li> <p class="" id="240451cf-7b79-80da-8929-cc1ef3ea5746"> </p> <li style="list-style-type:disc">난이도가 높아질수록  <strong>성능 향상 폭 감소</strong></li> <li style="list-style-type:disc">문제 길이 감소율도 떨어짐</li> <p class="" id="240451cf-7b79-8091-839b-d28dfa4aaaef">→ 어려운 문제일수록 backbone의 사전 지식 부족으로 학습이 힘들다는 증거</p> <p class="" id="241451cf-7b79-80c0-a4de-fd17f59e6aa9"> </p> <p class="" id="240451cf-7b79-8035-8cca-e6868067d2d7"> </p> <hr id="240451cf-7b79-80a6-aabe-cacd912d5aa6"/> <h1 class="" id="23f451cf-7b79-80b8-a3cc-c24193d30661">7 Limitations and Future Works</h1> <h3 class="" id="240451cf-7b79-805f-85a2-f6f3ac8d53c8">Limitations</h3> <ol class="numbered-list" id="240451cf-7b79-8039-8a2a-d7a71416c918" start="1" type="1"><li> <strong>TTRL은 초기 탐색 단계</strong>에 불과하며,</li></ol> <ol class="numbered-list" id="240451cf-7b79-806a-80fe-d687c0c5ae5a" start="2" type="1"><li>다음 두 요소가  <strong>학습 성능에 큰 영향을 미침</strong>에도 아직 정량적 분석이 부족함:<li style="list-style-type:disc">모델의  <strong>사전 지식 수준 (prior knowledge)</strong></li><li style="list-style-type:disc"> <strong>하이퍼파라미터 설정</strong> (temperature, episode 수 등)</li></li></ol> <p class="" id="240451cf-7b79-802b-b0f0-eee1ad9928fa"> </p> <h3 class="" id="240451cf-7b79-8004-8de6-f14b2c1527b9">Future Works (논문에 나온 내용)</h3> <ol class="numbered-list" id="240451cf-7b79-80a7-81bb-d0c3c889a381" start="1" type="1"><li> <strong>이론적 분석</strong><li style="list-style-type:disc">TTRL이 4.1에서 정의한  <strong>두 upper bound</strong>(maj@n / RL leakage)에 대해 얼마나 수렴 가능한지 이론적으로 분석</li><li style="list-style-type:disc">convergence theory와 optimality 조건 규명</li></li></ol> <ol class="numbered-list" id="240451cf-7b79-80b9-86ba-d18380311334" start="2" type="1"><li> <strong>스트리밍 데이터 기반 온라인 학습</strong><li style="list-style-type:disc">현재 TTRL은 static test set 기준</li><li style="list-style-type:disc">이를  <strong>실시간 도착하는 데이터 스트림에 적응하는 형태로 확장</strong>하려는 계획<p class="" id="240451cf-7b79-8067-b50f-fb7b323a1ff9">→ 진정한 Test-Time Adaptation (TTA)으로의 확장</p></li></li></ol> <ol class="numbered-list" id="240451cf-7b79-803d-9e3e-c2732f68382e" start="3" type="1"><li> <strong>대규모 self-supervised RL</strong><li style="list-style-type:disc">TTRL을  <strong>대규모 데이터셋 + 대형 LLM</strong>에 적용</li><li style="list-style-type:disc">인간의 라벨링 없이도 강력한 자기지도 강화학습 시스템으로 발전시키려는 방향</li></li></ol> <ol class="numbered-list" id="240451cf-7b79-80bd-b55b-fad116fa1c81" start="4" type="1"><li> <strong>Agentic Task 및 과학적 추론</strong><li style="list-style-type:disc">TTRL을 단순 QA 또는 math benchmark가 아닌,<li style="list-style-type:circle"> <strong>장기적 계획이 필요한 agentic task</strong></li><li style="list-style-type:circle"> <strong>여러 단계의 논리를 요하는 과학적 문제 해결</strong>에 확장</li></li><li style="list-style-type:disc">open-ended한 domain으로도 TTRL 적용 가능성 타진</li></li></ol> <p class="" id="241451cf-7b79-8090-8ec5-c11fb855b2a9"> </p> <h3 class="" id="241451cf-7b79-80d5-9027-e52aeb637ba5">Limitations &amp; Future Works (내 생각)</h3> <p class="" id="241451cf-7b79-80cc-a9a6-d92a0bfdac82"> </p> <ol class="numbered-list" id="241451cf-7b79-804b-9a87-ee40c061c430" start="1" type="1"><li>Hyperparameter Sensitivity<p class="" id="241451cf-7b79-80c8-bad5-c10a66e0c334">RL training is  <strong>highly sensitive</strong> to hyperparameters.</p><p class="" id="241451cf-7b79-805b-ba7f-d3769873d45e">→Automatic hyperparameter tuning</p><p class="" id="241451cf-7b79-80e1-8150-dbaae1ef4072"> </p></li></ol> <ol class="numbered-list" id="241451cf-7b79-8018-a37b-e9825a07c111" start="2" type="1"><li>Too much resource<p class="" id="241451cf-7b79-8067-88bb-d97cf8058236">The experiments require  <strong>8 × A100 80GB GPUs</strong></p><p class="" id="241451cf-7b79-8035-8f5f-db22d99f009c">→ Parameter-efficient by LoRA</p><p class="" id="241451cf-7b79-8005-aa36-c5c196c40c59"> </p></li></ol> <ol class="numbered-list" id="241451cf-7b79-80dd-b286-e1b1b14a2673" start="3" type="1"><li>Only for simple QA<p class="" id="241451cf-7b79-8064-9aca-d53b7801ea52">Experiments are focused on  <strong>math &amp; multiple-choice</strong></p><p class="" id="241451cf-7b79-8043-87ed-c5e2e99c9ebf">→ Extend to complex, multi-step reasoning tasks</p></li></ol> <p class="" id="241451cf-7b79-800d-b66a-c005eddd519d"> </p> <p class="" id="241451cf-7b79-801c-bbed-efdd81f3e4b9"> </p> <p class="" id="241451cf-7b79-8085-bc7c-c827ce24ece9"> </p> <hr id="240451cf-7b79-8084-9117-e75ba7f23fc5"/> <h1 class="" id="241451cf-7b79-8098-aac3-fe8fc55f4004">Q&amp;A</h1> <p class="" id="241451cf-7b79-804e-a08f-de2e99a03afc">논문 Presentation 발표 중 제대로 답변 못한 Q&amp;A</p> <p class="" id="241451cf-7b79-8091-b5e2-fdd21f930bc5"> </p> <h3 class="block-color-orange_background" id="241451cf-7b79-80b8-9270-d2fbb339a555">Q1) 이거 Test-Time에 RL 첫 논문 맞는가?</h3> <p class="" id="241451cf-7b79-80c5-b9fd-d2243371647f">이론상 Test-Time + RL 구조의 첫 논문은 아니다.</p> <p class="" id="241451cf-7b79-80c5-a40b-c80d1c8b284f"> </p> <p class="" id="241451cf-7b79-8091-a8f0-fffe5a3654ea">GRPO 자체도 test-time에 쓸 수 있고, label 없이도 reward 만들 수 있지 않나?</p> <li style="list-style-type:disc">GRPO는  <strong>RL 알고리즘 (optimizer)</strong></li> <li style="list-style-type:disc">TTRL은  <strong>전체 프레임워크</strong></li> <p class="" id="241451cf-7b79-803f-827d-db4e4272947d"> </p> <p class="" id="241451cf-7b79-80b3-bd50-e650eb983562"><a href="https://arxiv.org/abs/2402.03300">https://arxiv.org/abs/2402.03300</a></p> <p class="" id="241451cf-7b79-8090-b7f3-ec2c29fa2bb9">GRPO를 소개한 DeepSeekMath</p> <p class="" id="241451cf-7b79-809c-a591-d60151a943c4">→ GRPO를 test-time에서 label 없이 쓰는 건 가능</p> <p class="" id="241451cf-7b79-80fc-967c-cd37744347c2"> </p> <p class="" id="241451cf-7b79-807c-84c9-c5fd04346c1c"> <strong>TTRL에서 정의한 GRPO를 test-time에 실제로 쓰려면 필요한 요소들</strong></p> <li style="list-style-type:disc">test-time input stream 처리 방식</li> <li style="list-style-type:disc">sampling strategy (M개 생성 → voting)</li> <li style="list-style-type:disc">pseudo-label → reward 변환 함수</li> <li style="list-style-type:disc">GRPO를 작동시킬 수 있는 reward scaling</li> <li style="list-style-type:disc">batch-level update → continual self-evolution</li> <p class="" id="241451cf-7b79-802d-8b16-f9c5afc8b7ff">→ 실제로 작동하게 만드는 <mark class="highlight-red"> <strong>환경 + 입력 + reward + 반복 학습 루프</strong></mark>를 처음 설계</p> <p class="" id="241451cf-7b79-806d-801a-c29fece2f491"> </p> <p class="" id="241451cf-7b79-801e-8c05-da87cd331180"> </p> <p class="" id="241451cf-7b79-8028-a3c1-f7136e982b00"><a href="https://arxiv.org/abs/2505.18514">https://arxiv.org/abs/2505.18514</a></p> <p class="" id="241451cf-7b79-80f8-8f32-e624966c9533">우리 연구실 지도교수님이신 <a href="https://taesikgong.com/">공태식 교수님</a>이 최근에 쓰신 이 논문도 “Test-Time RL”의 정의가 맞음</p> <p class="" id="241451cf-7b79-8089-ac56-d14a5699dee3">→ Test-Time RL의 최초라는 말은 틀림.</p> <p class="" id="241451cf-7b79-80d4-8ec1-e61daf57f592">차이점은</p> <p class="" id="241451cf-7b79-8088-9426-f11411cac7aa">BiTTA : 정답 클래스 자체는 필요하지 않지만, 실시간으로 사람의  <strong>Binary Feedback</strong>이 필요하다.</p> <p class="" id="241451cf-7b79-809a-9598-c39e36008567">TTRL : 진짜로  <strong>label-free</strong>,  <strong>oracle-free</strong></p> <p class="" id="241451cf-7b79-808b-8be5-e7151542fe45"> </p> <p class="" id="241451cf-7b79-80eb-848a-fc508dce2a99">정답이 있는 oracle의 binary feedback을 필요로 함.</p> <p class="" id="241451cf-7b79-80ca-9073-f8846d63903f"> </p> <p class="" id="241451cf-7b79-8022-b3e4-c89180ba99ad">TTRL은 어떠한 모델, 데이터셋에도 적용 가능하지만, (정답이 딱 떨어지기만 하면)</p> <p class="" id="241451cf-7b79-8057-8187-ec923329f8c7">reward noise, model prior, dataset 난이도 등의 영향으로 </p> <p class="" id="241451cf-7b79-80ca-98fc-fc4f81811ca1">hyperparameter (batch size, temperature, episode 수 등)에 매우 민감</p> <p class="" id="241451cf-7b79-80f1-99a5-f1a7eef886cc">→ 하이퍼파라미터 튜닝이 필요</p> <p class="" id="241451cf-7b79-80b6-8fa2-ed496667e351"> </p> <p class="" id="241451cf-7b79-80cd-b24f-c7876c009550"> </p> <h3 class="block-color-orange_background" id="241451cf-7b79-8072-a18d-dfd8cb8ce57a">Q2) Lucky hit여도 결국 틀린답으로 학습하는거 아닌가?</h3> <p class="" id="241451cf-7b79-809b-99b5-c43fbff990eb">완전 잘못 이해하고 있었다. 내가 알고있던 정보는 BiTTA 처럼 Reward를 1과 -1로 줘야지 가능한 것이다.</p> <p class="" id="241451cf-7b79-804d-bc07-cfd2fee1e456"><a href="https://arxiv.org/abs/2505.18514">https://arxiv.org/abs/2505.18514</a></p> <p class="" id="241451cf-7b79-8045-a2c8-f67bb19dd09b">예측이 틀렸으면  <strong>-1이라는 부정적인 보상</strong>을 명시적으로 줘서, 틀린 방향으로의 확률이 낮아지도록 gradient</p> <p class="" id="241451cf-7b79-8043-a679-cbfcce9d7a3d"> </p> <p class="" id="241451cf-7b79-80e1-8127-f72ff6f1dad6"> </p> <figure class="image" id="241451cf-7b79-8051-b184-d38434d71949"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-31-ttrl/image%2020.webp" style="width:336px"/></picture></figure> <p class="" id="241451cf-7b79-803f-ba7b-d6ff6448f496"> </p> <p class="" id="241451cf-7b79-80cc-a3d7-d568a602a7f3">예시 - 모델이 잘 모를때</p> <p class="" id="241451cf-7b79-80a9-9749-dcf54a22a4b9"> <strong>[1, 1, 2, 2, 2, 4, 5, 6]</strong> → majority는 2 (2개)</p> <p class="" id="241451cf-7b79-80f9-92d0-ccc4438b1721">→ 3/8이라서 적긴 하지만,  <strong>분명히 2가 정답이라는 것이 강화되는 건 맞다.</strong></p> <p class="" id="241451cf-7b79-8062-a4d1-f00522aa4b4e"> </p> <p class="" id="241451cf-7b79-80a0-99d5-e287ca328da3">TTRL에서 모델이 잘 몰라서 majority voting을 통해 뽑은 pseudo label = 2</p> <p class="" id="241451cf-7b79-8031-a315-f404633c81b8"><code>0 0 1 1 1 0 0 0 </code></p> <p class="" id="241451cf-7b79-8025-9709-c333209f3f4b">신호로 Reinforcement Learning</p> <p class="" id="241451cf-7b79-800e-9e69-e646ac5d37b5"> </p> <p class="" id="241451cf-7b79-8021-9e56-cf1d89c09dc4">만약 실제로 true-label (3)을 줄 때</p> <p class="" id="241451cf-7b79-808a-adad-d7e253a1a401"><code>0 0 0 0 0 0 0 0</code></p> <p class="" id="241451cf-7b79-80aa-99f8-c5940cb64edb">신호로 Reinforcement Learning</p> <p class="" id="241451cf-7b79-80f5-a473-f82d58458365"> </p> <p class="" id="241451cf-7b79-8072-85da-d3200f911a0a"> <strong>모델이 잘 모르는 것에 대해서 label이 없이 했지만, </strong></p> <p class="" id="241451cf-7b79-8022-a736-fee0930b2f83"> <strong>실제 정답 label이 있을때와 Reward 신호가 62.5%나 일치한다! → hit ratio</strong></p> <p class="" id="241451cf-7b79-80ff-8214-c8659ef05cb5"> </p> <p class="" id="241451cf-7b79-80e7-a6d4-e53b0c3cb0ec">실제 정답 라벨이 없기 때문에 다른 논문처럼 reward에서 penalty 신호인 -1을 주지 않고,</p> <p class="" id="241451cf-7b79-8092-b661-e31aede932ae">맞으면 1,  <strong>틀려도 0 </strong>으로 설정한 것으로 보인다.</p> <p class="" id="241451cf-7b79-8050-92fb-c08291555057"> </p> <p class="" id="241451cf-7b79-80b7-a6f1-fad5b001a4dd"> </p> <p class="" id="241451cf-7b79-800c-baed-cb146828c330"> </p> <h3 class="block-color-orange_background" id="241451cf-7b79-801a-9d07-c0c5281a3c1c">Q3) 이 RL에서 action이 뭔가?</h3> <p class="" id="241451cf-7b79-802b-b5e4-f21ff7617291">state : 주어진 문제(prompt) x</p> <p class="" id="241451cf-7b79-80f2-a391-fda4552ab895">action : LLM의 답변 행위</p> <p class="" id="241451cf-7b79-8050-8625-e83472cdd0a5">→ LLM은 그에 대한 답변 y를 policy <strong> </strong><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo>∣</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{\theta}(y \mid x) </annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span><span>﻿</span></span>로부터 생성 (sampling)</p> <p class="" id="241451cf-7b79-80cf-9bde-c673c347a13b"> </p> <p class="" id="241451cf-7b79-8076-af9d-c91db6bffced"> </p> <p class="" id="241451cf-7b79-8031-ad3a-fa42fbaca653"> </p> <p><span class="sans" style="font-size:14px;padding-top:2em"></span></p>]]></content><author><name></name></author><category term="Paper"/><category term="AI"/><summary type="html"><![CDATA[ArXivhttps://arxiv.org/abs/2504.16084Github Codehttps://github.com/PRIME-RL/TTRLAuthorsYuxin Zuo, Kaiyan Zhang, Li Sheng, Shang Qu, Ganqu Cui, Xuekai Zhu, Haozhan Li, Yuchen Zhang, Xinwei Long, Ermo Hua, Biqing Qi, Youbang Sun, Zhiyuan Ma, Lifan Yuan, Ning Ding, Bowen ZhouAffiliationTsinghua University, Shanghai AI Lab 💡 Key Differentiator(1) 다양한 답변을 생성하고 (Test-Time Scaling)(2) majority voting을 통해 "이 답변은 good, 이건 bad"라는 평가를 자동으로 생성(3) 이를 reward로 변환해 RL 수행Test Time에 자율적, 반복적, label-free 방식으로 학습하고 더 좋은 결과를 내는 효과답안지 안주고 문제만 줬는데, 알아서 반복적으로 문제풀면서 똑똑해진다! 🤷Why I chose this paper?Test-Time 논문들을 많이 봤지만, Reinforcement Learning은 처음 들어봐서 궁금했다.아카이브에만 있고, 최근에 제출된 논문인데, github star이 700개나 되어있어서 궁금했다. 기존의  Test-Time Scaling이나  Reinforcement Learning을 먼저 설명하는게 좋을 것 같아서 5 Related Works를 먼저 읽었다. 5 Related Works 5.1 Test-Time Scaling=LLM이 테스트(추론) 시점에서 더 많은 계산 자원을 사용해 성능을 높이는 방법 → 즉, 학습된 모델 구조는 그대로 두고,  test-time에 inference 방식만 확장하는 전략 ① Parallel Generation 하나의 입력에 대해 여러 개의 output을 생성하고 그 중 “좋은 것”을 선택  Self-Consistency (Wang et al., 2022)여러 CoT 답변을 만들고 가장 많은 빈도를 가진 답변을 선택 (majority voting)  Best-of-N (Stiennon et al., 2020; Nakano et al., 2021)reward function이나 score function으로 best 답변 선택  Reward-guided Search (Deng &amp; Raffel, 2023; Khanov et al., 2024)sampling된 결과에 external reward function을 적용해 선택 → 이처럼 parallel하게 여러 답안을 만들고 하나를  “선택”하거나 “aggregation” 하는 게 공통 ② Sequential Generation 하나의 답변을 길게, 점진적으로 확장하거나 수정하며 reasoning  Chain-of-Thought (CoT) prompting (Wei et al., 2022)중간 reasoning step을 명시적으로 유도  Reflective reasoning (Madaan et al., 2023)스스로 답을 검토하고 수정 → reasoning depth를 늘리거나 self-correction을 유도 한계: 대부분의 TTS는 prompt-based이며,  모델 파라미터 자체는 업데이트되지 않음 기존 TTSTTRLinference time에만 사용inference + parameter update (TTT) 포함majority voting만 사용majority voting → reward로 전환하여 RL 수행non-parametricparametric update 포함 5.2 RL for Reasoning  Human Preference 기반 Human 또는 annotator가 여러 답 중 선호도를 매김 Preference Model 학습 → reward로 사용 PPO 등으로 policy (LLM) 업데이트 강점: 자연언어적 open-ended instruction에는 적합 한계:  사람의 label이 필요하고,  수치적 평가 불가능한 domain에서만 가능  Rule-based Reward 기반 reasoning domain (예: 수학)에서는 정답을 명확하게 판별할 수 있음 → 맞았으면 reward=1, 틀렸으면 0 같은  rule-based reward 사용 가능  GRPO (Group Relative Policy Optimization): DeepSeek-R1에서 사용. 수학 문제에 대해 긴 CoT 생성 유도 PPO도 사용되지만, 수치적 reward의 안정성과 gradient variance가 문제됨 구분RLHFGRPO / Rule-based RLTTRLsupervision sourcehuman preferencerule-based labels (정답존재) majority voting (pseudo-label)label 필요 여부필요필요 불필요 (label 없음)학습 시점offline RLoffline RL Test-time (online RL)taskopen-domain instructionmath, logic, programmath, logic, program 2. Test-Time Reinforcement Learning (TTRL) We study the problem of training a pre-trained model during test time using RL without ground-truth labels. We call this setting Test-Time Reinforcement Learning. 2.1 Methodology 녹색 배경이 TTS + 이후 나온 결과로 reward calaulation을 통해 Test-Time에 Training M: 한 문제(q)에 대해 생성하는  답변 수 N=batch_size(하나의 학습 step에서 사용하는  문제 수) 첫번째 문제에 M개의 답변 내고, voting하고 reward 계산해서 모아놓은게 R(y1, y) 상태(state)와 행동(action) 주어진 문제(prompt) x를 상태(state)로 보고, LLM은 그에 대한 답변 y를  policy πθ(y∣x)\pi_{\theta}(y \mid x) πθ​(y∣x)﻿로부터 생성 (sampling) →  LLM의 답변 행위 = RL의 action Rollout: 답변 여러 개 생성 Ground-truth label이 없이 reward signal을 보내야하니까,  여러개의 candidate(후보) output을 생성 → x에 대해 답변 {y1,...,yM} 을 sampling 랜덤성 있는 샘플링으로  M=64개의 다양한 답변 생성(appendix에서는 16) → 단일 답이 아닌 다양한 reasoning path를 확보해야 voting이 의미 있음 여러개의 답변은 자동으로 랜덤되는것인가? 따로 설정을 바꿔주는것인가?원래 LLM은 같은 입력에 대해서도 랜덤하게 다르게 나오긴 함.파라미터를 일부러 변화시키진 않고,  Randomized decoding 설정→ temperature, top-p, top-k, sampling 횟수 등으로 조절temperature = 0.6top-p = 0.95→ sampling된 답변이 다르게 나오도록 유도 Temperature: Setting the temperature to 1.0, as opposed to 0.6, increases the model’s output entropy. This promotes more extensive exploration and allows the model to make better use of its prior knowledge for self-improvement, which is particularly important when addressing challenging benchmarks.실제로 이후 실험에서 Parameter에 따른 비교가 있고, Dataset 난이도에 따라서 조정이 필요하다는 한계를 밝힘.(Figure 11 : Inappropriate RL Hyperparameters)어려운 task에 대해서는 Temperature을 1.0으로 해야 효과가 좋음.→ temperature 높이면 diversity 증가 → exploration 증가 → high entropy → 다양한 답변 정답 추출 + Majority Voting (Label 추정) 각 𝑦i에서 최종 정답만 extract → 숫자, 선택지  majority voting (다수결)로 가장 많이 나온 답을 pseudo-label 𝑦∗로 정함 Reward 계산 sampling된 y답이 majority 답이랑 일치하면 → reward=1 아니면 → reward=0 → 실제 정답을 모르지만, voting 결과에 얼마나 일치했는지를 기준으로 학습 신호 제공 We sample 64 responses per prompt using the current model and randomly select 32 to use for training. 랜덤하게 32개를 트레이닝에 사용그 중 32개만 골라서 reward 계산에 사용 → 투표는 64개로 하는데, 나중에 RL은 랜덤으로 반만 사용함. (너무 계산 과도하니까) 💡위 과정을 batch size (N) 만큼 반복함. 매 질문마다 업데이트 하는게 아님.Each RL step samples a batch of questions and computes policy gradients using the pseudo-rewards from majority voting.→  각 step마다 여러 개의 질문(batch of questions)을 사용→ 이게 곧 우리가 말하는 “batch size”에 해당 데이터셋마다 다르게 사용했음.AIME=80, AMC=30, MATH-500=10AIME는 어려우니까 여러번하고 업데이트해줘야 틀린 정보로 업데이트가 반복될 확률이 줄어듬. Policy 업데이트 (RL) batch size만큼 반복하면 이제 모아놨던 목표: expected reward를 최대화하는 것 → 다수결이 옳다고 믿자! max⁡θEy∼πθ(⋅∣x)[r(y,y∗)]\max_{\theta} \mathbb{E}_{y \sim \pi_{\theta}(\cdot | x)} \left[ r(y, y^*) \right]θmax​Ey∼πθ​(⋅∣x)​[r(y,y∗)] reward가 높았던 답변 쪽으로 (gradient ascent) θ (모델 파라미터)를 업데이트 θ←θ+η∇θEy∼πθ(⋅∣x)[r(y,y∗)]\theta \leftarrow \theta + \eta \nabla_{\theta} \mathbb{E}_{y \sim \pi_{\theta}(\cdot | x)} \left[ r(y, y^*) \right]θ←θ+η∇θ​Ey∼πθ​(⋅∣x)​[r(y,y∗)] 💡LLM이 prompt에 대해 여러 답변을 생성하고, 그 중 다수결로 추정된 label과 얼마나 일치하는지를 reward로 삼아, LLM의 policy를 reinforcement learning으로 업데이트한다. 2.2 Majority Voting Reward Function]]></summary></entry><entry><title type="html">Test-Time Learning for Large Language Models</title><link href="https://hoonably.github.io/blog/ttl-llm/" rel="alternate" type="text/html" title="Test-Time Learning for Large Language Models"/><published>2025-07-13T16:30:40+00:00</published><updated>2025-07-13T16:30:40+00:00</updated><id>https://hoonably.github.io/blog/ttl-llm</id><content type="html" xml:base="https://hoonably.github.io/blog/ttl-llm/"><![CDATA[<table class="simple-table" id="23f451cf-7b79-8004-a097-c43c95ee2303"><tbody><tr id="23f451cf-7b79-8060-b8bb-df1b9686c82c"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">ArXiv</th><td class="" id="L|H:" style="width:580.5px"><a href="https://arxiv.org/abs/2505.20633">https://arxiv.org/abs/2505.20633</a></td></tr><tr id="23f451cf-7b79-80f4-9fed-e4621e37ba85"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Authors</th><td class="" id="L|H:" style="width:580.5px">Jinwu Hu, Zhitian Zhang, Guohao Chen, Xutao Wen, Chao Shuai, Wei Luo, Bin Xiao, Yuanqing Li, Mingkui Tan</td></tr><tr id="23f451cf-7b79-80ee-a0d3-d937f9d96b19"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Affiliation</th><td class="" id="L|H:" style="width:580.5px">School of Software Engineering, South China University of Technology<br/>Pazhou Laboratory<br/>Zhejiang University<br/>South China Agricultural University<br/>Chongqing University of Posts and Telecommunications<br/>Key Laboratory of Big Data and Intelligent Robot, Ministry of Education<br/></td></tr></tbody></table> <figure class="block-color-teal_background callout" id="228451cf-7b79-80c0-acd7-fa4383b79091" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%"> <strong>Key Differentiator</strong><br/>Perplexity Minimization<br/>기존 TTA (ex. Tent, EATA, COME)는 전부  <strong>entropy minimization</strong> 기반<br/>→ 출력 분포의 불확실성을 낮추는 방향<br/>하지만 이 논문은  <strong>LLM의 autoregressive 구조</strong>를 고려해<br/>→ 출력 entropy가 아니라  <strong>입력 perplexity를 최소화</strong>하는 완전히 다른 objective를 제안</div></figure> <p class="" id="228451cf-7b79-80ac-8355-e2df159c9edb"> </p> <h2 class="" id="228451cf-7b79-8069-b876-f517d055bf9d">2. Related Work</h2> <p class="" id="22b451cf-7b79-8057-b85b-f612da90620e">기존 방법들의 특징과 LLM에서의 한계</p> <p class="" id="22b451cf-7b79-80ed-bf02-dabf2515d36f"> </p> <h3 class="" id="228451cf-7b79-80b1-8eab-eea3d94e8d10"> <strong>Fine-tuning</strong></h3> <p class="" id="228451cf-7b79-8093-9704-e2652b31e113">: 라벨된 데이터를 기반으로 모델 파라미터를 업데이트</p> <p class="" id="228451cf-7b79-8028-8cb1-d8e61caf0731">→ 라벨링 비용이 크고, 현실에서 계속해서 라벨된 데이터를 구하기 힘듦</p> <p class="" id="22b451cf-7b79-8024-aa59-e40974b3ac58"> </p> <h3 class="" id="228451cf-7b79-8060-95a7-f6be2b99ddcc"> <strong>RAG (Retrieval-Augmented Generation)</strong></h3> <p class="" id="228451cf-7b79-802d-8528-c9348f82fdb1">: 외부 지식 베이스에서 관련 정보를 찾아와 응답에 반영</p> <p class="" id="228451cf-7b79-80cd-9319-cd8664844426">→ 검색 품질에 의존 + 검색 비용 있음</p> <p class="" id="22b451cf-7b79-8096-a355-ef77f22c55f5"> </p> <h3 class="" id="228451cf-7b79-80d3-8616-ffdf47dcc54a"> <strong>TTT (Test-Time Training)</strong></h3> <p class="" id="228451cf-7b79-80b2-8fdd-c458256d278e">: 훈련 데이터나 knowledge base에서 유사한 데이터를 찾아서 모델을 미세 조정</p> <p class="" id="228451cf-7b79-800e-a381-e3753bc18e28">→ 훈련 데이터 접근 필요 + 검색 과정이 느림</p> <p class="" id="22b451cf-7b79-80d4-98e6-d9435ebe0d98"> </p> <h3 class="" id="228451cf-7b79-806e-bd2b-f6b5030fa76e"> <strong>TTA (Test-Time Adaptation)</strong></h3> <p class="" id="22b451cf-7b79-8036-9885-cf7a0c88ce7b">: 라벨 없는 테스트 데이터를 이용해 모델을 적응시킴</p> <p class="" id="22b451cf-7b79-80c5-b51a-e1b2e771c319"> </p> <p class="" id="22b451cf-7b79-80cf-8d6b-d0ae3b185971">→ 대부분  <strong>entropy minimization</strong> (출력의 확률 분포를 단일하게 만드는 방식)을 사용</p> <p class="" id="22b451cf-7b79-80e9-bf59-f47bc95dce14">→ LLM은  <strong>autoregressive 구조</strong>인데, 이 구조를 무시하고 entropy만 최소화하면 효과가 떨어짐</p> <p class="" id="22b451cf-7b79-80d2-aa7e-c43d60607bd5"> </p> <hr id="22b451cf-7b79-800f-81bc-ee0e3cee3a40"/> <p class="" id="230451cf-7b79-8086-8407-cc24beab462a"> </p> <h3 class="" id="230451cf-7b79-805e-8ad1-d0b1d19b8b87"> <strong>기존 LLM TTA가 불가능한 이유</strong></h3> <li style="list-style-type:disc">기존 TTA는 주로 BatchNorm 통계(mean/var)를 업데이트하면서 적응</li> <li style="list-style-type:disc">그런데 LLM에는 BatchNorm이 없고 대신 LayerNorm을 쓰고,<p class="" id="22b451cf-7b79-80d0-a1f7-ccf970ff75a7">LayerNorm은 test-time에서 업데이트할 게 없음 → 기존 방식 적용 불가</p></li> <p class="" id="22b451cf-7b79-80af-901a-fe22ff50417a"> </p> <p class="" id="22b451cf-7b79-801a-9d31-f74b41c0aa98"> <strong>그럼 LLM에서는 어떤 test-time 신호가 있는가?</strong></p> <p class="" id="22b451cf-7b79-8037-90c1-c09d1596301f">→ 입력 perplexity를 이용해서</p> <p class="" id="22b451cf-7b79-8073-90b1-feb1c83fbd42">→ backprop 가능한 self-supervised objective를 설계함</p> <p class="" id="22b451cf-7b79-805e-80da-ea2e2cdbba5b"> </p> <p class="" id="22b451cf-7b79-8093-9665-c1b6bc4b6983"> </p> <hr id="22b451cf-7b79-800e-811f-d68d1ee16165"/> <p class="" id="22b451cf-7b79-80c0-abeb-c57e8d13259a"> </p> <p class="" id="22b451cf-7b79-80aa-8994-fa63cb4c7425"> </p> <h3 class="" id="22b451cf-7b79-80bf-82bd-c566a88da574">Why <span style="border-bottom:0.05em solid">Entropy Minimization </span>Doesn’t Work Well for LLMs?</h3> <p class="" id="230451cf-7b79-80cc-8e08-ea5ef940e2f3"> </p> <h3 class="" id="22b451cf-7b79-804f-a601-d6a0f9501b1e"> <strong>Entropy란?</strong></h3> <p class="" id="22b451cf-7b79-807a-8542-d52534288f34">entropy = uncertainty</p> <p class="" id="22b451cf-7b79-80fa-a0bc-e6ec970a595a">[0.5, 0.5] → high entropy</p> <p class="" id="22b451cf-7b79-805b-9ef8-e6391cc368fc">[0.99, 0.01] → less entropy</p> <h3 class="" id="22b451cf-7b79-8027-904a-fc5f2404dd21"> <strong>Autoregressive한 LLM은?</strong></h3> <p class="" id="22b451cf-7b79-8019-8603-eb9f20de0c39">Predict tokens one by one</p> <p class="" id="22b451cf-7b79-8079-984a-dce9ef943987">Each prediction depends on previous tokens</p> <p class="" id="22b451cf-7b79-805c-a553-d93f7659651a">Errors accumulate over time</p> <div class="column-list" id="22b451cf-7b79-803a-be75-dc152dd1ef88"><div class="column" id="22b451cf-7b79-8080-b2fa-df7a1cbaa807" style="width:56.25%"><h3 class="" id="22b451cf-7b79-800b-8a63-e72445209a53"> <strong>문제점</strong></h3><p class="" id="230451cf-7b79-80f2-92b3-c4a928cd37ca"> </p><li style="list-style-type:disc">Ignores token dependencies</li><li style="list-style-type:disc">Optimizes locally, not globally</li><li style="list-style-type:disc">Early mistakes → later tokens collapse</li><p class="" id="22b451cf-7b79-8038-93ac-f862f030098b"> </p></div><div class="column" id="22b451cf-7b79-80ec-a2f1-c9ead77b92d1" style="width:43.75%"><figure class="image" id="22b451cf-7b79-80d4-825f-ca3ab88bf03b"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image.webp" style="width:288px"/></picture></figure><p class="" id="230451cf-7b79-80cc-8cd6-dec69deb905f"> </p></div></div> <p class="" id="22b451cf-7b79-8020-8fd3-d3b4ab3e46fc"> </p> <p class="" id="22b451cf-7b79-80cd-a96f-cab01fea9a61"> </p> <hr id="22b451cf-7b79-8011-9b3e-edf816abbd60"/> <p class="" id="22b451cf-7b79-8016-ad45-e818e1b80858"> </p> <h2 class="" id="22b451cf-7b79-80e4-8a54-cf80354bfa81">4.1 Perplexity Minimization for Test-Time Learning</h2> <p class="" id="22b451cf-7b79-8019-a676-e5db3decf359">Entropy 기반의 문제점 해결책</p> <h3 class="" id="22b451cf-7b79-8012-a037-c4abb7fce194"> <strong>perplexity</strong></h3> <p class="" id="22b451cf-7b79-809f-bbec-e6992e9dd450">: A metric that measures how confidently a language model predicts a given sequence</p> <p class="" id="22b451cf-7b79-8006-ac32-dd5ebd11e917">언어 모델이  <strong>주어진 시퀀스를 얼마나 “자신 있게” 예측했는가</strong>를 측정하는 지표</p> <figure class="equation" id="230451cf-7b79-80e2-86d9-ff48b844df8b"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi mathvariant="normal">Θ</mi></munder><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>∣</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi mathvariant="normal">Θ</mi></munder><msup><mi>e</mi><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>t</mi></msub><mo>∣</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\min_{\Theta} \mathcal{P}(y \mid x; \Theta) = \min_{\Theta} e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(y_t \mid x, y_{1:t-1}; \Theta) \right)}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8548em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1105em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">;</span><span class="mord mtight">Θ</span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></figure> <li style="list-style-type:disc">log probability가 클수록 → 예측 잘함 → perplexity 낮음</li> <li style="list-style-type:disc">확률 예측이 낮고 불확실할수록 → perplexity 높음</li> <p class="" id="22c451cf-7b79-8088-93db-ccb79cc8c008"> </p> <h3 class="" id="22c451cf-7b79-80e4-933a-e66aab6d807b"> <strong>TTA에서의 문제점을 해결</strong></h3> <p class="" id="22c451cf-7b79-80af-964d-eea408ed9f48">entropy는 <code>[p₁, p₂, ..., p_T]</code> 각 토큰에 대해 개별적으로 확률 분포를 만들어서 토큰간의 관계보다는, 각 위치에서 단일 정답을 강하게 만들려고 함. → 토큰 간 dependency 무시</p> <p class="" id="22c451cf-7b79-80f8-9ac8-c584410a694d">→ 시그마로 전체 시퀀스에 대한 joint probability의 log loss를 구하기 때문에 토큰 간 의존성을 완전히 반영함</p> <p class="" id="22c451cf-7b79-8017-a413-df787ab2890d">→ 전체 문장을 얼마나 잘 예측했는가? 기준으로 loss 줌</p> <p class="" id="22c451cf-7b79-80e9-90f8-c969a60f5bfc">→ 글로벌한 관점에서 모델을 업데이트</p> <p class="" id="22c451cf-7b79-808b-81ac-d224c631a7d2"> </p> <h3 class="" id="22b451cf-7b79-8030-8496-e5c591256d54"> <strong>문제점</strong></h3> <p class="" id="22b451cf-7b79-8016-ad51-da552a92301e">테스트 시엔 ground truth가 없음 → output perplexity를 못 씀</p> <p class="" id="22b451cf-7b79-8031-b297-fd2fcc442c04">x = input / y = output</p> <li style="list-style-type:disc">LLM 성능을 올리려면 당연히  <strong>P(y | x)</strong> 를 줄이는 게 맞음</li> <li style="list-style-type:disc">하지만  <strong>test-time에는 y를 모르기 때문에</strong> 위의 식을 직접 쓸 수 없다.</li> <p class="" id="22b451cf-7b79-8054-99f1-dc0f70799dde"> </p> <p class="" id="22b451cf-7b79-8002-b89a-d8935b987385">→ 발견</p> <p class="" id="22b451cf-7b79-803b-86cf-df6b8d5e5b04">  <strong>P(y | x)를 줄이는 대신 P(x)를 줄이는 것도 효과가 있다</strong>는 것</p> <p class="" id="22b451cf-7b79-80ea-a5c1-e77486f97e74"> </p> <p class="" id="22b451cf-7b79-8037-ba96-c3308d51b6d8"> </p> <p class="" id="22b451cf-7b79-8063-b945-cfa80144b7f0">"The trend of LLM’s perplexity to the input P(x; Θ) and perplexity to the output P(y|x; Θ) is the same.”</p> <p class="" id="22b451cf-7b79-8091-8f82-c078051a9c88"> </p> <div class="column-list" id="22b451cf-7b79-8045-b456-d6a344cb5192"><div class="column" id="22b451cf-7b79-80e1-9914-f452026468d7" style="width:50%"><figure class="image" id="22b451cf-7b79-808d-9d6f-c94e5f0e107d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%201.webp" style="width:336px"/></picture></figure></div><div class="column" id="22b451cf-7b79-803e-a42f-e85c7790930c" style="width:50%"><p class="" id="22b451cf-7b79-8089-abb1-e1930f44f1fe">왼쪽 그래프를 보면,</p><p class="" id="22b451cf-7b79-8055-b92b-ccef550f09ce"> input/output perplexity를 측정했을때 </p><p class="" id="22b451cf-7b79-80c0-83e7-e489e5f385e1">강한 상관관계를 보인다.</p><p class="" id="22b451cf-7b79-806e-9a60-e917943754e8"> </p><p class="" id="22b451cf-7b79-80f2-9f1e-d1189df5b071">→ 입력 perplexity를 줄이면 출력도 같이 좋아짐</p><p class="" id="240451cf-7b79-8038-ad67-d96f954d60ac"> </p></div></div> <figure class="equation" id="230451cf-7b79-80b4-9896-c4b2ca0261b2"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi mathvariant="normal">Θ</mi></munder><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>∣</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi mathvariant="normal">Θ</mi></munder><msup><mi>e</mi><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>t</mi></msub><mo>∣</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>y</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\min_{\Theta} \mathcal{P}(y \mid x; \Theta) = \min_{\Theta} e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(y_t \mid x, y_{1:t-1}; \Theta) \right)}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8548em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1105em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">;</span><span class="mord mtight">Θ</span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></figure> <p class="" id="230451cf-7b79-808e-91c6-d67fe9432091">에서 y를 쓰지 않는 다음으로 변경</p> <figure class="equation" id="230451cf-7b79-80e1-8af6-e3b385d9201f"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>T</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo>∣</mo><msub><mi>x</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{P}(\{x_1, x_2, \ldots, x_T\}) = e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(x_t \mid x_{1:t-1}; \Theta) \right)}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">({</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1105em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1105em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">;</span><span class="mord mtight">Θ</span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></figure> <p class="" id="230451cf-7b79-8016-9ece-d43fecc884bd"> </p> <p class="" id="22b451cf-7b79-809b-a4f0-f83cb06db2c9"> </p> <hr id="22b451cf-7b79-80db-912f-f953489d36d3"/> <p class="" id="22b451cf-7b79-80b5-8202-c66ff8f65492"> </p> <h2 class="" id="22b451cf-7b79-8060-8efc-da7cfbc12828">4.2 Sample Efficient Learning Strategy</h2> <p class="" id="22b451cf-7b79-8069-b76a-c9fa77f63e82"> </p> <p class="" id="22b451cf-7b79-80c6-a8fc-ffe640566cb1">TTL에서  <strong>모든 테스트 샘플을 다 사용해서 업데이트</strong>하면:</p> <li style="list-style-type:disc">계산량 낭비</li> <li style="list-style-type:disc">효과 없는 샘플에 모델이 오히려 흔들릴 수 있음</li> <p class="" id="22b451cf-7b79-800e-895e-ded62c0c3963"> </p> <div class="column-list" id="22b451cf-7b79-80e8-89a0-e7822864d27d"><div class="column" id="22b451cf-7b79-8089-a719-d4da4f4ee9cd" style="width:37.5%"><figure class="image" id="22b451cf-7b79-806c-aba4-e7fd671d9778"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%202.webp" style="width:336px"/></picture></figure></div><div class="column" id="22b451cf-7b79-8027-8161-f6329f7f4cb2" style="width:62.5%"><p class="" id="22b451cf-7b79-8004-995d-d0e2c021b7b1">→ 발견</p><li style="list-style-type:disc">high-perplexity 샘플로 학습하면 더 높은 ROUGE 성능</li><li style="list-style-type:disc">low-perplexity 샘플만 쓰면 성능  <strong>오히려 떨어짐</strong></li><p class="" id="22b451cf-7b79-8098-b73e-df38c7e2c5da"> <strong>Low-perplexity input</strong>은 이미 잘 맞추는 것이라 정보 거의 없기 때문.</p></div></div> <p class="" id="22c451cf-7b79-80e5-a7c2-f063f5939090"> </p> <blockquote class="" id="22c451cf-7b79-8088-bcf2-fa358c76c5cc">ROUGE(Recall-Oriented Understudy for Gisting Evaluation):<p class="" id="22c451cf-7b79-80bd-8090-ceb01df31db6">자연어 생성 결과를  <strong>reference 문장과 비교해 얼마나 잘 일치하는지</strong> 평가하</p><p class="" id="22c451cf-7b79-80df-8adc-f1404765db4b">ROUGE-L : Longest Common Subsequence (LCS) 기반으로 공통 부분문자열 </p></blockquote> <p class="" id="230451cf-7b79-8030-9bfa-faad42424686"> </p> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mover accent="true"><mi mathvariant="normal">Θ</mi><mo>ˉ</mo></mover></msub><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min_{\bar{\Theta}} S(x) \mathcal{P}(x; \Theta)</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4707em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight">Θ</span></span><span style="top:-2.9523em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2293em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span></span><span>﻿</span></span> → informative한 샘플만 골라 쓰자</li> <li style="list-style-type:disc">각 샘플마다 perplexity를 기반으로 점수 S(x) 를 매기고</li> <li style="list-style-type:disc">S(x)가 높은 샘플만 backpropagation에 사용</li> <figure class="equation" id="230451cf-7b79-800b-9a76-c7f7f3f97c97"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>λ</mi><mo>⋅</mo><msup><mi>e</mi><mrow><mi>log</mi><mo>⁡</mo><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>P</mi><mn>0</mn></msub></mrow></msup><mo>⋅</mo><msub><mi mathvariant="double-struck">I</mi><mrow><mo stretchy="false">{</mo><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>&gt;</mo><msub><mi>P</mi><mn>0</mn></msub><mo stretchy="false">}</mo></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(x) = \lambda \cdot e^{\log \mathcal{P}(x; \Theta) - \log P_0} \cdot \mathbb{I}_{\{ \mathcal{P}(x; \Theta) &gt; P_0 \}}(\mathbf{x})</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.938em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathcal mtight" style="margin-right:0.08222em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">;</span><span class="mord mtight">Θ</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathbb">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">{</span><span class="mord mathcal mtight" style="margin-right:0.08222em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">;</span><span class="mord mtight">Θ</span><span class="mclose mtight">)</span><span class="mrel mtight">&gt;</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span></span></span></span></span></div></figure> <p class="" id="22b451cf-7b79-8056-baf8-d4da99a94231">Low-perplexity 샘플은 제외하고, High-perplexity 샘플은 비중을 크게 부여해서 학습에 반영</p> <p class="" id="22c451cf-7b79-8075-89a5-f7fd08f21c1f">여기서 아라비아숫자 2 같이 생긴건, indicator function (지시 함수)를 의미한다.</p> <p class="" id="22c451cf-7b79-80dc-8467-f48d4cc2e5d6">즉, 조건을 만족하면 <code>1</code>, 만족하지 않으면 <code>0</code>이 되는  <strong>불연속 함수</strong></p> <p class="" id="22c451cf-7b79-809c-861a-dd2af8f766e5"> </p> <p class="" id="22b451cf-7b79-8000-aebb-c031cf1589e6"> </p> <p class="" id="22b451cf-7b79-8018-b849-d33839c764d4"> <strong>효과</strong></p> <li style="list-style-type:disc">불필요한 샘플 업데이트를 줄여  <strong>계산량 감소</strong></li> <li style="list-style-type:disc">더 informative한 샘플로만 업데이트해서  <strong>성능 향상</strong></li> <p class="" id="22b451cf-7b79-8085-b569-c0aaa414d180"> </p> <p class="" id="22b451cf-7b79-80b0-b0c9-d96ccdd7b53a"> </p> <hr id="22b451cf-7b79-80f5-afa7-dde5edf2c716"/> <p class="" id="22b451cf-7b79-805f-8a98-ce2bb3e01437"> </p> <h2 class="" id="22b451cf-7b79-8076-b30d-e659baf153f4">4.3 Modulating Parameters for Test-Time Learning</h2> <p class="" id="22b451cf-7b79-80e7-99b3-d197ce57271e"> </p> <div class="column-list" id="22b451cf-7b79-8058-879c-fabc5f27b061"><div class="column" id="22b451cf-7b79-8061-a316-c76db6c9cdd0" style="width:37.5%"><figure class="image" id="22b451cf-7b79-80c7-ad5a-d193dd6e0ab0"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%203.webp" style="width:384px"/></picture></figure></div><div class="column" id="22b451cf-7b79-80f4-81b3-cd120d1b174d" style="width:62.5%"><p class="" id="22b451cf-7b79-804a-a5a2-e7bd244d4a44">LoRA(Low-Rank Adaptation)는 일부 linear layer에 작은 랭크의 보조 행렬 A, B를 추가해서 업데이트함</p><p class="" id="22b451cf-7b79-808e-9310-fd8c334f1770">→ LoRA로만 업데이트한 경우, full-param update보다 original 성능 유지력이 훨씬 좋음</p><p class="" id="22b451cf-7b79-80ea-a2cc-cab53efecf78">도메인 적응 중에도 task 성능 유지 →  <strong>forgetting 억제</strong></p><p class="" id="22b451cf-7b79-80d1-b0b3-dc82c626f69b"> </p></div></div> <figure class="equation" id="230451cf-7b79-80cd-b778-da016b47b2d2"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mover accent="true"><mi mathvariant="normal">Θ</mi><mo>~</mo></mover></munder><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mover accent="true"><mi mathvariant="normal">Θ</mi><mo>~</mo></mover><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi mathvariant="normal">Δ</mi><mi mathvariant="normal">Θ</mi></mrow></munder><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="script">P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min_{\tilde{\Theta}} S(x)\mathcal{P}(x; \tilde{\Theta}) = \min_{\Delta\Theta} S(x)\mathcal{P}(x; \Theta + \Delta\Theta)</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.8303em;vertical-align:-0.9101em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.1899em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight">Θ</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9101em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord">Θ</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ΔΘ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ΔΘ</span><span class="mclose">)</span></span></span></span></span></div></figure> <p class="" id="22b451cf-7b79-80e9-9330-e11f33f34a22">LoRA를 사용하기 때문에 위와 같은 식이 됨</p> <p class="" id="22b451cf-7b79-80eb-af86-d6f29188262e"> </p> <p class="" id="22b451cf-7b79-8043-9202-fe27643a3084"> </p> <hr id="22b451cf-7b79-801c-92c6-c0f157df1135"/> <p class="" id="22b451cf-7b79-8067-9e46-d2839d65f719"> </p> <h2 class="" id="22b451cf-7b79-803c-b447-d379191c4e1c">5.1. Experimental Settings</h2> <h3 class="" id="22b451cf-7b79-806f-bc4b-c17fec07bb04">Benchmark: AdaptEval</h3> <li style="list-style-type:disc">논문에서 만든 새로운 평가 벤치마크</li> <li style="list-style-type:disc">다양한 도메인과 과제 유형을 포함하여  <strong>LLM의 적응 능력</strong>을 다각도로 평가</li> <table class="simple-table" id="22b451cf-7b79-806f-a184-fd148ff700c1"><thead class="simple-table-header"><tr id="22b451cf-7b79-80b9-8216-e09179b828b6"><th class="simple-table-header-color simple-table-header" id="x;wa">Bench</th><th class="simple-table-header-color simple-table-header" id="@QS^">목적</th><th class="simple-table-header-color simple-table-header" id="hGn_" style="width:415px">포함된 데이터셋</th></tr></thead><tbody><tr id="22b451cf-7b79-8050-a97e-c598c4582ad8"><td class="" id="x;wa"> <strong>DomainBench</strong></td><td class="" id="@QS^">도메인 지식 적응</td><td class="" id="hGn_" style="width:415px">Geography, Agriculture, Medicine, Finance</td></tr><tr id="22b451cf-7b79-805f-805b-e0366f300f74"><td class="" id="x;wa"> <strong>InstructionBench</strong></td><td class="" id="@QS^">지시 따르기</td><td class="" id="hGn_" style="width:415px">Alpaca-GPT4, Dolly, InstructionWild</td></tr><tr id="22b451cf-7b79-80c5-90d5-c7153b21311d"><td class="" id="x;wa"> <strong>ReasoningBench</strong></td><td class="" id="@QS^">논리 추론</td><td class="" id="hGn_" style="width:415px">GSM8K, MetaMath, Logiqa</td></tr></tbody></table> <h3 class="" id="22b451cf-7b79-8090-9837-cfacb0eb138e">평가 지표 (Metrics)</h3> <li style="list-style-type:disc"> <strong>DomainBench, InstructionBench</strong> → <em>ROUGE-Lsum (R-Lsum)</em></li> <li style="list-style-type:disc"> <strong>ReasoningBench</strong> → <em>Exact Match (EM)</em></li> <blockquote class="" id="22b451cf-7b79-8061-9fca-ce8d9a499ab1">각각의 task 특성에 맞는 대표 지표를 사용함</blockquote> <h3 class="" id="22b451cf-7b79-805d-bab5-dfdfea8b94c6">LLM 모델</h3> <li style="list-style-type:disc">Llama3.2-3B-Instruct</li> <li style="list-style-type:disc">Llama3-8B-Instruct</li> <li style="list-style-type:disc">Llama2-13B-Chat</li> <li style="list-style-type:disc">Qwen2.5-7B-Instruct</li> <h3 class="" id="22b451cf-7b79-80c8-b489-ce4448fda412">Baselines</h3> <li style="list-style-type:disc"> <strong>Tent</strong> (Entropy minimization 기반 TTA)</li> <li style="list-style-type:disc"> <strong>EATA</strong> (low-entropy 샘플 선택 기반 TTA)</li> <li style="list-style-type:disc"> <strong>COME</strong> (보수적 entropy 최소화 방식)</li> <p class="" id="22b451cf-7b79-8076-8d13-e8c387243eab">→ 모두  <strong>unlabeled test data만 사용하는 최신 TTA 기법</strong></p> <p class="" id="22b451cf-7b79-8081-9c09-ecd77960708f">→ 공정한 비교를 위해 모두 offline 설정에 맞춰 재구현</p> <h3 class="" id="22b451cf-7b79-805a-9328-e1f29ea7be44">구현 세팅</h3> <li style="list-style-type:disc">Optimizer: Adam</li> <li style="list-style-type:disc">Learning rate:<li style="list-style-type:circle">DomainBench: 5e-5</li><li style="list-style-type:circle">InstructionBench: 5e-5</li><li style="list-style-type:circle">ReasoningBench: 1e-6</li></li> <li style="list-style-type:disc">Batch size: 1</li> <li style="list-style-type:disc">Decoding: Greedy, temperature = 0</li> <li style="list-style-type:disc">λ = 0.1, P₀ = e³ (샘플 선택 threshold)</li> <p class="" id="22b451cf-7b79-80dc-9b7c-da98efb9a160"> </p> <p class="" id="22b451cf-7b79-80b5-a45f-ddf3d45f3929"> </p> <hr id="22b451cf-7b79-808d-bce7-c662edcbe5c3"/> <p class="" id="22b451cf-7b79-80ba-b772-e77544948d0c"> </p> <h2 class="" id="22b451cf-7b79-8047-986b-c2b7453a279c">5.2 Comparison Experiments</h2> <figure class="image" id="22b451cf-7b79-8071-9b5b-f4e8f38666b7"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%204.webp" style="width:709.984375px"/></picture></figure> <p class="" id="22b451cf-7b79-8014-bec8-e0ad209884aa">TLM은 모든 task category에서 baseline 대비 우수한 성능을 달성</p> <li style="list-style-type:disc"> <strong>DomainBench</strong>: 전문 용어, 도메인-specific 표현들 (예: 의료, 금융 용어)</li> <li style="list-style-type:disc"> <strong>InstructionBench</strong>: 지시문의 표현 방식, 말투, 요청 스타일 적응</li> <p class="" id="22b451cf-7b79-80db-948f-c5d2407fc9f7">→ 이런 과제들은 모델이 새로운 용어, 문장 패턴에만 적응하면 성능이 올라감</p> <p class="" id="22b451cf-7b79-8009-9831-dbbbcd270c21">→ 그리고 TLM은 입력 perplexity 최소화 → 문장 표현에 대한 이해 강화</p> <p class="" id="22b451cf-7b79-804e-b07b-db22d1e7ffb7">→ 즉, perplexity 기반 self-supervised 적응이 직접적으로 효과적임</p> <p class="" id="22b451cf-7b79-80c6-8dae-e60e4a58a3d9"> </p> <div class="column-list" id="22b451cf-7b79-802b-8b42-e84e1fdf880e"><div class="column" id="22b451cf-7b79-80f3-a7d1-ce15107538ce" style="width:50%"><figure class="image" id="22b451cf-7b79-802c-ab67-d7e14075ab15"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%205.webp" style="width:332px"/></picture></figure></div><div class="column" id="22b451cf-7b79-8020-b29a-f75e3ae39b95" style="width:50%"><p class="" id="22b451cf-7b79-80d0-b6f1-d2b5e55d3055">이 표만 값이  <strong>Exact Match (EM)</strong>임. </p><p class="" id="22b451cf-7b79-8070-8751-d791e5cc2360">→ 정확히 답을 얼마나 맞췄는가</p><p class="" id="22b451cf-7b79-8045-ba19-e62087ea1ce1"> </p><p class="" id="22b451cf-7b79-8062-b589-e807433cfba0">ReasoningBench도 좋아지긴 했지만, 논리 구조가 핵심이라  <strong>chain-of-thought reasoning</strong>이 중요함</p><p class="" id="22b451cf-7b79-80c9-8a38-eca49092ba34">→ test-time에 입력만 보고 모델을 개선하는 건  <strong>제한적인 효과만 있음</strong></p><p class="" id="22b451cf-7b79-8055-9b99-c162ef3317b4">→ 특히 reasoning 능력은 이미 pretraining + fine-tuning 단계에서 깊게 학습되어야 함</p><p class="" id="22b451cf-7b79-8027-887d-cd7fdea3b5d2"> </p></div></div> <p class="" id="22b451cf-7b79-80ee-8934-e5ec6d344e1e"> </p> <hr id="22b451cf-7b79-8084-a678-c310067f1f3b"/> <p class="" id="22b451cf-7b79-80be-89b2-fe7c9f69ac65"> </p> <h2 class="" id="22b451cf-7b79-8097-b262-c86e66f48e2e">5.3 Ablation Studies</h2> <table class="simple-table" id="22b451cf-7b79-806b-931f-fd565d6cc30d"><thead class="simple-table-header"><tr id="22b451cf-7b79-803e-9848-cebd00c9c859"><th class="simple-table-header-color simple-table-header" id="NdW_">버전</th><th class="simple-table-header-color simple-table-header" id="PZJ&gt;" style="width:523px">설명</th></tr></thead><tbody><tr id="22b451cf-7b79-80c7-bade-f4bc54bb1c7b"><td class="" id="NdW_"> <strong>Original LLM</strong></td><td class="" id="PZJ&gt;" style="width:523px">아무런 TTL 적용 안 한 원본</td></tr><tr id="22b451cf-7b79-80e8-8158-cd3c3d8cff56"><td class="" id="NdW_"> <strong>Ours (w/o SEL)</strong></td><td class="" id="PZJ&gt;" style="width:523px">샘플 선택 없이 input perplexity만 최소화</td></tr><tr id="22b451cf-7b79-80e4-b87b-c06ec7a799eb"><td class="" id="NdW_"> <strong>Ours</strong></td><td class="" id="PZJ&gt;" style="width:523px">full TLM = SEL + LoRA + perplexity minimization</td></tr></tbody></table> <figure class="image" id="22b451cf-7b79-80ab-9b48-c17d2424ec6a"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%206.webp" style="width:576px"/></picture></figure> <h3 class="" id="22b451cf-7b79-80fb-9c8c-e7d4bd2eaad7">Input Perplexity Minimization</h3> <p class="" id="22b451cf-7b79-8029-b8de-e1a8b28f738d">→ 성능 향상의  <strong>주된 원인</strong></p> <p class="" id="22b451cf-7b79-80b8-808b-ca69ab929e32">→ SEL 없이도 30~80% 향상</p> <h3 class="" id="22b451cf-7b79-8086-b230-e7af2025574a">Sample Efficient Learning (SEL)</h3> <p class="" id="22b451cf-7b79-8099-9864-e7f4dfc2e941">→ 추가 향상은 적지만,</p> <p class="" id="22b451cf-7b79-804c-a8d6-f4845c0e603d">→  <strong>계산량 줄이면서 성능 유지</strong></p> <div class="column-list" id="22b451cf-7b79-809d-8569-f3df818b2e44"><div class="column" id="22b451cf-7b79-80bf-a45e-cf6cc6af559e" style="width:56.25%"><h3 class="" id="22b451cf-7b79-8023-af92-d6a7bb1cd8ff">Threshold P0 (perplexity margin)</h3><p class="" id="22b451cf-7b79-806e-901b-da0bf4f8adfa"> </p><figure class="image" id="22b451cf-7b79-80db-bf16-c2473e09b4fc"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%207.webp" style="width:373.484375px"/></picture></figure><p class="" id="22b451cf-7b79-8072-9c17-e88475d100ed">→다양한 P0∈{e2,e3,...,e6} 실험</p><p class="" id="22b451cf-7b79-80ce-8792-f6ec7579ecbd">→ P0=e3 일 때 가장 안정적이고 좋은 성능</p><p class="" id="22b451cf-7b79-8063-8075-f0624658fb82"> </p></div><div class="column" id="22b451cf-7b79-80ae-b03b-eeb3f837d635" style="width:43.74999999999999%"><figure class="image" id="22b451cf-7b79-80d9-853b-ecad71c1ec0d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%208.webp" style="width:709.9921875px"/></picture></figure></div></div> <p class="" id="22b451cf-7b79-8077-9eaa-c2b74ba1f05b"> </p> <hr id="22b451cf-7b79-8014-a1a4-c578275d97ef"/> <p class="" id="22b451cf-7b79-8065-8aad-eca5739e6a76"> </p> <h2 class="" id="22b451cf-7b79-8026-a58c-c72686281227">5.4 More Discussions</h2> <p class="" id="22b451cf-7b79-801d-8028-eeabc1ef7394"> </p> <figure class="image" id="22b451cf-7b79-806b-bef5-f038dc0278bf"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-07-14-ttl-llm/image%209.webp" style="width:624px"/></picture></figure> <h3 class="" id="22b451cf-7b79-80c0-b561-de8aac31ab2d">Online Test-Time Experiments</h3> <p class="" id="22b451cf-7b79-8063-bbb0-c3bfb4bddf82">test-time에  <strong>샘플 하나씩</strong> 들어오는 상황에서도 TLM이 잘 작동하는가?</p> <li style="list-style-type:disc">처음에는 high-perplexity 샘플이 많아서 업데이트 많이 하다가</li> <li style="list-style-type:disc">점점 모델이 적응하면서 low-perplexity 샘플이 늘어남 →  <strong>자동으로 학습 중단됨</strong></li> <p class="" id="22b451cf-7b79-8056-8755-dd63887d439d"> </p> <h3 class="" id="22b451cf-7b79-80ae-b304-d83d4b3931ed">Experiments on Quantized LLM</h3> <p class="" id="22b451cf-7b79-8003-a5b1-c3b0ca13f8e3">TLM은 quantized 모델에서도 성능 향상 유지</p> <p class="" id="22b451cf-7b79-8014-a026-c3ee7936bbad">→ 메모리 제한 환경에서도 실용적</p> <p class="" id="22b451cf-7b79-8032-9711-d6eacef7c389"> </p> <p class="" id="22b451cf-7b79-80d0-bf9f-c8340887a299"> </p> <hr id="22b451cf-7b79-80b4-af8d-fddd20b9d7a9"/> <p class="" id="22b451cf-7b79-808f-a576-e94a6c1e04c1"> </p> <h2 class="" id="22b451cf-7b79-8024-8585-c06378b78970">Limitation</h2> <p class="" id="22b451cf-7b79-80cc-a7ad-e5cb7d214552">따로 언급은 없지만 굳이 뽑자면,</p> <p class="" id="22b451cf-7b79-807d-aff7-e9be1eb8b9e3"> </p> <p class="" id="22b451cf-7b79-8061-ac6a-ec4fe2338fa2">1.  <strong>No Backprop-Free Variant (실제 inference 환경 제한)</strong></p> <p class="" id="22b451cf-7b79-801a-a70d-e70ab1b2476e">TLM은 backprop이 필요함 → 대부분의 실제 LLM 배포 환경(API, closed-weight)에서는 적용 불가</p> <p class="" id="22b451cf-7b79-8010-8c09-ea6f99cf8c7b">Future Work: Backprop-free TTL, e.g. prompt-based or derivative-free adaptation </p> <hr id="22b451cf-7b79-80ef-8610-eee13e4f5759"/> <p class="" id="230451cf-7b79-80bd-9469-cad5f1ab3af1">2.  <strong>Limited Effect on Reasoning Tasks</strong></p> <p class="" id="22b451cf-7b79-801c-bf47-e819df3b61c2">GSM8K, MetaMath 등 reasoning benchmark에서 성능 향상폭이 작음</p> <p class="" id="22b451cf-7b79-8057-9db1-c26367f71d32">→ Perplexity minimization이  <strong>표현 적응에는 강하지만</strong>, 논리적 추론엔 약함</p> <p class="" id="22b451cf-7b79-8045-abde-c184a730af21">Future Work: TTL for logic and chain-of-thought reasoning</p> <hr id="22b451cf-7b79-8061-be94-f6a8d0aa5e3d"/> <p class="" id="230451cf-7b79-80ff-bd68-d2d1d133383a">3.  <strong>Domain-Specific Overfitting / Forgetting Risk</strong></p> <p class="" id="22b451cf-7b79-80e1-8430-df635544aa78">LoRA 사용해도, 장기적으로 특정 도메인에 반복 적응 시 원래 능력(logic, general knowledge) 저하 가능성 존재</p> <p class="" id="22b451cf-7b79-802c-b267-e8113cf7ab42">Future Work: Continual TTL with forgetting mitigation</p> <hr id="22b451cf-7b79-801e-8900-f3cce05e1fa8"/> <p class="" id="230451cf-7b79-8011-830a-c80f01a8af6c">4.  <strong>Hyperparameter Sensitivity (e.g., P₀ threshold)</strong></p> <p class="" id="22b451cf-7b79-802a-a474-c092c4db4445">샘플 선택 기준(P₀ = e³)이나 λ 값에 민감</p> <p class="" id="230451cf-7b79-8077-aaf6-fae5bd1418d7">도메인/모델에 따라 튜닝 필요 → 실용화에 방해될 수 있음</p> <p class="" id="22b451cf-7b79-80c1-b26a-c51bbb57ab09">Future Work: Auto-tuning or adaptive sampling strategies</p> <hr id="22b451cf-7b79-8085-9049-e5f8611f5805"/> <p class="" id="230451cf-7b79-8037-addd-fbbff997106a">5.  <strong>Session-Aware / Multi-Turn TTL 미지원</strong></p> <p class="" id="22b451cf-7b79-806f-b626-fa65321375a9">현재는 입력 단위로만 TTL 작동. 대화형 시스템처럼  <strong>context가 누적되는 환경에서는 적용되지 않음</strong></p> <p class="" id="22b451cf-7b79-80dc-8bb6-fdaeb04f56d0">Future Work: Session-level TTL for conversational agents</p> <p class="" id="230451cf-7b79-80f4-90b0-fc7273a41ff8"> </p> <p class="" id="230451cf-7b79-8002-8927-c3435e22ea58"> </p> <p class="" id="230451cf-7b79-8049-a185-ef40d63c6b8c"> </p> <hr id="22b451cf-7b79-809e-a702-ea435479b5be"/> <p class="" id="230451cf-7b79-801a-9064-dc7c30596476"> </p> <h2 class="" id="230451cf-7b79-80f1-bade-d457742be4e9">Q&amp;A</h2> <p class="" id="22b451cf-7b79-8006-93bf-d8f97157577e"> </p> <p class="" id="22b451cf-7b79-80bb-8ace-c2b9af40ab26">Q. LLM에서 Test-Time 학습 최초인가?</p> <p class="" id="22b451cf-7b79-8038-b5d1-fcb3a2c24df3"> </p> <p class="" id="22b451cf-7b79-8017-9a07-f4114b25afe3">다음과 같은 논문들은 있었음.</p> <p class="" id="22b451cf-7b79-80d2-bf20-e18ba785dfd6"><a href="https://arxiv.org/abs/2410.08020">https://arxiv.org/abs/2410.08020</a></p> <p class="" id="22b451cf-7b79-8019-b73d-e36ccebfc17b">LLM을 테스트 시점에 prompt‑specific fine‑tuning 하는 방법을 제안했고,</p> <p class="" id="22b451cf-7b79-8029-be9d-c9a9010a2429">실험을 통해 test‑time에도 LLM을 업데이트할 수 있다는 점을 보여줌</p> <p class="" id="22b451cf-7b79-8099-ae26-ea066315f9b4">다만, 속도가 느리고 계산 비용이 크다는 단점</p> <p class="" id="22b451cf-7b79-80b0-867a-eab05a0f2907">→ 가능은 했지만 실용에서 멀었음</p> <p class="" id="22b451cf-7b79-8000-ac31-d0b200a731de"> </p> <p class="" id="22b451cf-7b79-80b9-882a-d2fdc8380ad3"> <strong>Prompt tuning 빼면 TLM이 LLM에서 Test-Time 학습을 최초로 실용화한 논문</strong></p> <p class="" id="22b451cf-7b79-8003-bdf3-c7d201fe01ab">위 Table 5 를 보면 이미 Tent나 EATA도 한것처럼 보이지만, 오히려 기존 LLM을 파괴한 성능이 나옴.</p> <p class="" id="230451cf-7b79-80c5-99c3-d03b60476406"> </p> <hr id="230451cf-7b79-804e-9e16-e8fe0becd8cb"/> <p class="" id="230451cf-7b79-80a7-a779-ccbb58d50e54"> </p> <p class="" id="230451cf-7b79-8098-81b2-c60f771eab4f"> </p> <p class="" id="230451cf-7b79-80da-a175-f7047a6a9596">Q. Output 내기 전에 학습하는 것인가?</p> <p class="" id="230451cf-7b79-809b-8d00-d606399e66eb">P(y|x)을 기준으로 학습 못한다고 했는데, 왜? 어차피 output은 나오는거 아닌가?</p> <p class="" id="230451cf-7b79-8073-8e65-ec54ae8191d1"> </p> <h3 class="" id="230451cf-7b79-805a-ba5f-e3659752912e">왜 y를 안쓰는가?</h3> <p class="" id="230451cf-7b79-801b-8108-d24201269250">모델이 생성한 ŷ는  <strong>정답이 아님</strong> → ground truth 없음</p> <p class="" id="230451cf-7b79-805f-a491-f1e51ecd48c4"><code>P(ŷ | x)</code>를 줄이면  <strong>잘못된 출력을 더 확신하게 만드는 결과</strong>가 될 수 있음</p> <p class="" id="230451cf-7b79-80f6-b176-e5f66e58d963"> </p> <p class="" id="230451cf-7b79-80fd-9c1f-dd45cc1ed5a1"> <strong>예시</strong></p> <li style="list-style-type:disc">“사과는 빨갛다”가 정답인데</li> <li style="list-style-type:disc">모델이 “사과는 바나나다”라고 출력했을 경우</li> <li style="list-style-type:disc">이걸 기준으로 loss를 줄이면 오히려  <strong>틀린 출력에 더 확신을 주게 됨</strong></li> <p class="" id="230451cf-7b79-8094-8080-dc17938a73a4"> </p> <h3 class="" id="230451cf-7b79-805d-888c-c4b7e857d057">순서</h3> <ol class="numbered-list" id="230451cf-7b79-8071-8b2d-f9acc0fb3404" start="1" type="1"><li>입력 <code>x</code> 들어옴</li></ol> <ol class="numbered-list" id="230451cf-7b79-8049-baf8-f6fe476ec6e9" start="2" type="1"><li>모델이 현재 파라미터(θ + Δθ)로 출력 <code>ŷ</code> 생성</li></ol> <ol class="numbered-list" id="230451cf-7b79-80e6-8bcf-d566bb9946e5" start="3" type="1"><li><code>x</code>에 대한 perplexity 계산</li></ol> <ol class="numbered-list" id="230451cf-7b79-807f-9ac5-e296656e5cd1" start="4" type="1"><li><code>P(x)</code>가 기준보다 크면 → backprop으로 LoRA 파라미터 업데이트</li></ol> <ol class="numbered-list" id="230451cf-7b79-8067-8f0d-d00b0eb46fae" start="5" type="1"><li>→ 이 업데이트는 다음 입력부터 반영됨</li></ol> <p class="" id="230451cf-7b79-80fb-949c-e5d30286f50a"> </p> <h3 class="" id="230451cf-7b79-807d-9797-c6d03aa4c71f">정리</h3> <blockquote class="" id="230451cf-7b79-80c6-a7f1-e44b27506cf6">Although the true target y is unavailable at test time, we show that minimizing P(x) leads to update directions that are often aligned with those from minimizing P(y|x).</blockquote> <p class="" id="230451cf-7b79-80d3-aacb-cdfe780593cc">Test-time에 label <code>y</code>가 없어서 그 샘플의 성능을 직접 평가할 수 없음</p> <p class="" id="230451cf-7b79-8055-9b38-f57ddc2d5922">→ 대신, 그 샘플을 기반으로 전체 파라미터를 업데이트해서 미래의 예측력을 높임</p> <p class="" id="230451cf-7b79-801a-8e52-da346235fef3">→ TLM은  <strong><span style="border-bottom:0.05em solid">online self-supervised continual learning</span></strong>에 가까움</p> <p class="" id="230451cf-7b79-80a3-85b2-f46450230e1f"> </p> <p><span class="sans" style="font-size:14px;padding-top:2em"></span></p>]]></content><author><name></name></author><category term="Paper"/><category term="AI"/><summary type="html"><![CDATA[ArXivhttps://arxiv.org/abs/2505.20633AuthorsJinwu Hu, Zhitian Zhang, Guohao Chen, Xutao Wen, Chao Shuai, Wei Luo, Bin Xiao, Yuanqing Li, Mingkui TanAffiliationSchool of Software Engineering, South China University of TechnologyPazhou LaboratoryZhejiang UniversitySouth China Agricultural UniversityChongqing University of Posts and TelecommunicationsKey Laboratory of Big Data and Intelligent Robot, Ministry of Education 💡 Key DifferentiatorPerplexity Minimization기존 TTA (ex. Tent, EATA, COME)는 전부  entropy minimization 기반→ 출력 분포의 불확실성을 낮추는 방향하지만 이 논문은  LLM의 autoregressive 구조를 고려해→ 출력 entropy가 아니라  입력 perplexity를 최소화하는 완전히 다른 objective를 제안 2. Related Work 기존 방법들의 특징과 LLM에서의 한계  Fine-tuning : 라벨된 데이터를 기반으로 모델 파라미터를 업데이트 → 라벨링 비용이 크고, 현실에서 계속해서 라벨된 데이터를 구하기 힘듦  RAG (Retrieval-Augmented Generation) : 외부 지식 베이스에서 관련 정보를 찾아와 응답에 반영 → 검색 품질에 의존 + 검색 비용 있음  TTT (Test-Time Training) : 훈련 데이터나 knowledge base에서 유사한 데이터를 찾아서 모델을 미세 조정 → 훈련 데이터 접근 필요 + 검색 과정이 느림  TTA (Test-Time Adaptation) : 라벨 없는 테스트 데이터를 이용해 모델을 적응시킴 → 대부분  entropy minimization (출력의 확률 분포를 단일하게 만드는 방식)을 사용 → LLM은  autoregressive 구조인데, 이 구조를 무시하고 entropy만 최소화하면 효과가 떨어짐  기존 LLM TTA가 불가능한 이유 기존 TTA는 주로 BatchNorm 통계(mean/var)를 업데이트하면서 적응 그런데 LLM에는 BatchNorm이 없고 대신 LayerNorm을 쓰고,LayerNorm은 test-time에서 업데이트할 게 없음 → 기존 방식 적용 불가  그럼 LLM에서는 어떤 test-time 신호가 있는가? → 입력 perplexity를 이용해서 → backprop 가능한 self-supervised objective를 설계함 Why Entropy Minimization Doesn’t Work Well for LLMs?  Entropy란? entropy=uncertainty [0.5, 0.5] → high entropy [0.99, 0.01] → less entropy  Autoregressive한 LLM은? Predict tokens one by one Each prediction depends on previous tokens Errors accumulate over time  문제점 Ignores token dependenciesOptimizes locally, not globallyEarly mistakes → later tokens collapse 4.1 Perplexity Minimization for Test-Time Learning Entropy 기반의 문제점 해결책  perplexity : A metric that measures how confidently a language model predicts a given sequence 언어 모델이  주어진 시퀀스를 얼마나 “자신 있게” 예측했는가를 측정하는 지표 min⁡ΘP(y∣x;Θ)=min⁡Θe(−1T∑t=1Tlog⁡p(yt∣x,y1:t−1;Θ))\min_{\Theta} \mathcal{P}(y \mid x; \Theta) = \min_{\Theta} e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(y_t \mid x, y_{1:t-1}; \Theta) \right)}Θmin​P(y∣x;Θ)=Θmin​e(−T1​∑t=1T​logp(yt​∣x,y1:t−1​;Θ)) log probability가 클수록 → 예측 잘함 → perplexity 낮음 확률 예측이 낮고 불확실할수록 → perplexity 높음  TTA에서의 문제점을 해결 entropy는 [p₁, p₂, ..., p_T] 각 토큰에 대해 개별적으로 확률 분포를 만들어서 토큰간의 관계보다는, 각 위치에서 단일 정답을 강하게 만들려고 함. → 토큰 간 dependency 무시 → 시그마로 전체 시퀀스에 대한 joint probability의 log loss를 구하기 때문에 토큰 간 의존성을 완전히 반영함 → 전체 문장을 얼마나 잘 예측했는가? 기준으로 loss 줌 → 글로벌한 관점에서 모델을 업데이트  문제점 테스트 시엔 ground truth가 없음 → output perplexity를 못 씀 x=input / y=output LLM 성능을 올리려면 당연히  P(y | x) 를 줄이는 게 맞음 하지만  test-time에는 y를 모르기 때문에 위의 식을 직접 쓸 수 없다. → 발견  P(y | x)를 줄이는 대신 P(x)를 줄이는 것도 효과가 있다는 것 "The trend of LLM’s perplexity to the input P(x; Θ) and perplexity to the output P(y|x; Θ) is the same.” 왼쪽 그래프를 보면, input/output perplexity를 측정했을때 강한 상관관계를 보인다. → 입력 perplexity를 줄이면 출력도 같이 좋아짐 min⁡ΘP(y∣x;Θ)=min⁡Θe(−1T∑t=1Tlog⁡p(yt∣x,y1:t−1;Θ))\min_{\Theta} \mathcal{P}(y \mid x; \Theta) = \min_{\Theta} e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(y_t \mid x, y_{1:t-1}; \Theta) \right)}Θmin​P(y∣x;Θ)=Θmin​e(−T1​∑t=1T​logp(yt​∣x,y1:t−1​;Θ)) 에서 y를 쓰지 않는 다음으로 변경 P({x1,x2,…,xT})=e(−1T∑t=1Tlog⁡p(xt∣x1:t−1;Θ))\mathcal{P}(\{x_1, x_2, \ldots, x_T\}) = e^{\left(-\frac{1}{T} \sum_{t=1}^{T} \log p(x_t \mid x_{1:t-1}; \Theta) \right)}P({x1​,x2​,…,xT​})=e(−T1​∑t=1T​logp(xt​∣x1:t−1​;Θ)) 4.2 Sample Efficient Learning Strategy TTL에서  모든 테스트 샘플을 다 사용해서 업데이트하면: 계산량 낭비 효과 없는 샘플에 모델이 오히려 흔들릴 수 있음 → 발견high-perplexity 샘플로 학습하면 더 높은 ROUGE 성능low-perplexity 샘플만 쓰면 성능  오히려 떨어짐 Low-perplexity input은 이미 잘 맞추는 것이라 정보 거의 없기 때문. ROUGE(Recall-Oriented Understudy for Gisting Evaluation):자연어 생성 결과를  reference 문장과 비교해 얼마나 잘 일치하는지 평가하ROUGE-L : Longest Common Subsequence (LCS) 기반으로 공통 부분문자열 min⁡ΘˉS(x)P(x;Θ)\min_{\bar{\Theta}} S(x) \mathcal{P}(x; \Theta)minΘˉ​S(x)P(x;Θ)﻿ → informative한 샘플만 골라 쓰자 각 샘플마다 perplexity를 기반으로 점수 S(x) 를 매기고 S(x)가 높은 샘플만 backpropagation에 사용 S(x)=λ⋅elog⁡P(x;Θ)−log⁡P0⋅I{P(x;Θ)&gt;P0}(x)S(x) = \lambda \cdot e^{\log \mathcal{P}(x; \Theta) - \log P_0} \cdot \mathbb{I}_{\{ \mathcal{P}(x; \Theta) &gt; P_0 \}}(\mathbf{x})S(x)=λ⋅elogP(x;Θ)−logP0​⋅I{P(x;Θ)&gt;P0​}​(x) Low-perplexity 샘플은 제외하고, High-perplexity 샘플은 비중을 크게 부여해서 학습에 반영 여기서 아라비아숫자 2 같이 생긴건, indicator function (지시 함수)를 의미한다. 즉, 조건을 만족하면 1, 만족하지 않으면 0이 되는  불연속 함수  효과 불필요한 샘플 업데이트를 줄여  계산량 감소 더 informative한 샘플로만 업데이트해서  성능 향상 4.3 Modulating Parameters for Test-Time Learning LoRA(Low-Rank Adaptation)는 일부 linear layer에 작은 랭크의 보조 행렬 A, B를 추가해서 업데이트함→ LoRA로만 업데이트한 경우, full-param update보다 original 성능 유지력이 훨씬 좋음도메인 적응 중에도 task 성능 유지 →  forgetting 억제 min⁡Θ~S(x)P(x;Θ~)=min⁡ΔΘS(x)P(x;Θ+ΔΘ)\min_{\tilde{\Theta}} S(x)\mathcal{P}(x; \tilde{\Theta}) = \min_{\Delta\Theta} S(x)\mathcal{P}(x; \Theta + \Delta\Theta)Θ~min​S(x)P(x;Θ~)=ΔΘmin​S(x)P(x;Θ+ΔΘ) LoRA를 사용하기 때문에 위와 같은 식이 됨 5.1. Experimental Settings Benchmark: AdaptEval 논문에서 만든 새로운 평가 벤치마크 다양한 도메인과 과제 유형을 포함하여  LLM의 적응 능력을 다각도로 평가 Bench목적포함된 데이터셋 DomainBench도메인 지식 적응Geography, Agriculture, Medicine, Finance InstructionBench지시 따르기Alpaca-GPT4, Dolly, InstructionWild ReasoningBench논리 추론GSM8K, MetaMath, Logiqa 평가 지표 (Metrics)  DomainBench, InstructionBench → ROUGE-Lsum (R-Lsum)  ReasoningBench → Exact Match (EM) 각각의 task 특성에 맞는 대표 지표를 사용함 LLM 모델 Llama3.2-3B-Instruct Llama3-8B-Instruct Llama2-13B-Chat Qwen2.5-7B-Instruct Baselines  Tent (Entropy minimization 기반 TTA)  EATA (low-entropy 샘플 선택 기반 TTA)  COME (보수적 entropy 최소화 방식) → 모두  unlabeled test data만 사용하는 최신 TTA 기법 → 공정한 비교를 위해 모두 offline 설정에 맞춰 재구현 구현 세팅 Optimizer: Adam Learning rate:DomainBench: 5e-5InstructionBench: 5e-5ReasoningBench: 1e-6 Batch size: 1 Decoding: Greedy, temperature=0 λ = 0.1, P₀ = e³ (샘플 선택 threshold) 5.2 Comparison Experiments TLM은 모든 task category에서 baseline 대비 우수한 성능을 달성  DomainBench: 전문 용어, 도메인-specific 표현들 (예: 의료, 금융 용어)  InstructionBench: 지시문의 표현 방식, 말투, 요청 스타일 적응 → 이런 과제들은 모델이 새로운 용어, 문장 패턴에만 적응하면 성능이 올라감 → 그리고 TLM은 입력 perplexity 최소화 → 문장 표현에 대한 이해 강화 → 즉, perplexity 기반 self-supervised 적응이 직접적으로 효과적임 이 표만 값이  Exact Match (EM)임. → 정확히 답을 얼마나 맞췄는가 ReasoningBench도 좋아지긴 했지만, 논리 구조가 핵심이라  chain-of-thought reasoning이 중요함→ test-time에 입력만 보고 모델을 개선하는 건  제한적인 효과만 있음→ 특히 reasoning 능력은 이미 pretraining + fine-tuning 단계에서 깊게 학습되어야 함 5.3 Ablation Studies 버전설명 Original LLM아무런 TTL 적용 안 한 원본 Ours (w/o SEL)샘플 선택 없이 input perplexity만 최소화 Oursfull TLM=SEL + LoRA + perplexity minimization Input Perplexity Minimization → 성능 향상의  주된 원인 → SEL 없이도 30~80% 향상 Sample Efficient Learning (SEL) → 추가 향상은 적지만, →  계산량 줄이면서 성능 유지 Threshold P0 (perplexity margin) →다양한 P0∈{e2,e3,...,e6} 실험→ P0=e3 일 때 가장 안정적이고 좋은 성능 5.4 More Discussions Online Test-Time Experiments test-time에  샘플 하나씩 들어오는 상황에서도 TLM이 잘 작동하는가? 처음에는 high-perplexity 샘플이 많아서 업데이트 많이 하다가 점점 모델이 적응하면서 low-perplexity 샘플이 늘어남 →  자동으로 학습 중단됨 Experiments on Quantized LLM TLM은 quantized 모델에서도 성능 향상 유지 → 메모리 제한 환경에서도 실용적 Limitation 따로 언급은 없지만 굳이 뽑자면, 1.  No Backprop-Free Variant (실제 inference 환경 제한) TLM은 backprop이 필요함 → 대부분의 실제 LLM 배포 환경(API, closed-weight)에서는 적용 불가 Future Work: Backprop-free TTL, e.g. prompt-based or derivative-free adaptation 2.  Limited Effect on Reasoning Tasks GSM8K, MetaMath 등 reasoning benchmark에서 성능 향상폭이 작음 → Perplexity minimization이  표현 적응에는 강하지만, 논리적 추론엔 약함 Future Work: TTL for logic and chain-of-thought reasoning 3.  Domain-Specific Overfitting / Forgetting Risk LoRA 사용해도, 장기적으로 특정 도메인에 반복 적응 시 원래 능력(logic, general knowledge) 저하 가능성 존재 Future Work: Continual TTL with forgetting mitigation 4.  Hyperparameter Sensitivity (e.g., P₀ threshold) 샘플 선택 기준(P₀ = e³)이나 λ 값에 민감 도메인/모델에 따라 튜닝 필요 → 실용화에 방해될 수 있음 Future Work: Auto-tuning or adaptive sampling strategies 5.  Session-Aware / Multi-Turn TTL 미지원 현재는 입력 단위로만 TTL 작동. 대화형 시스템처럼  context가 누적되는 환경에서는 적용되지 않음 Future Work: Session-level TTL for conversational agents Q&amp;A Q. LLM에서 Test-Time 학습 최초인가? 다음과 같은 논문들은 있었음. https://arxiv.org/abs/2410.08020 LLM을 테스트 시점에 prompt‑specific fine‑tuning 하는 방법을 제안했고, 실험을 통해 test‑time에도 LLM을 업데이트할 수 있다는 점을 보여줌 다만, 속도가 느리고 계산 비용이 크다는 단점 → 가능은 했지만 실용에서 멀었음  Prompt tuning 빼면 TLM이 LLM에서 Test-Time 학습을 최초로 실용화한 논문 위 Table 5 를 보면 이미 Tent나 EATA도 한것처럼 보이지만, 오히려 기존 LLM을 파괴한 성능이 나옴. Q. Output 내기 전에 학습하는 것인가? P(y|x)을 기준으로 학습 못한다고 했는데, 왜? 어차피 output은 나오는거 아닌가? 왜 y를 안쓰는가? 모델이 생성한 ŷ는  정답이 아님 → ground truth 없음 P(ŷ | x)를 줄이면  잘못된 출력을 더 확신하게 만드는 결과가 될 수 있음  예시 “사과는 빨갛다”가 정답인데 모델이 “사과는 바나나다”라고 출력했을 경우 이걸 기준으로 loss를 줄이면 오히려  틀린 출력에 더 확신을 주게 됨 순서 입력 x 들어옴 모델이 현재 파라미터(θ + Δθ)로 출력 ŷ 생성 x에 대한 perplexity 계산 P(x)가 기준보다 크면 → backprop으로 LoRA 파라미터 업데이트 → 이 업데이트는 다음 입력부터 반영됨 정리 Although the true target y is unavailable at test time, we show that minimizing P(x) leads to update directions that are often aligned with those from minimizing P(y|x). Test-time에 label y가 없어서 그 샘플의 성능을 직접 평가할 수 없음 → 대신, 그 샘플을 기반으로 전체 파라미터를 업데이트해서 미래의 예측력을 높임 → TLM은  online self-supervised continual learning에 가까움]]></summary></entry><entry><title type="html">Various techniques in al-folio</title><link href="https://hoonably.github.io/blog/al-folio-tech/" rel="alternate" type="text/html" title="Various techniques in al-folio"/><published>2025-06-28T06:32:13+00:00</published><updated>2025-06-28T06:32:13+00:00</updated><id>https://hoonably.github.io/blog/al-folio-tech</id><content type="html" xml:base="https://hoonably.github.io/blog/al-folio-tech/"><![CDATA[<p>al-folio로 블로그를 바꾼 후 신기한 기능들이 많아서 정리를 해보고자 <a href="https://alshedivat.github.io/al-folio/blog/">https://alshedivat.github.io/al-folio/blog/</a>에 있는 기능들을 모아봤다.</p> <h2 id="detail-box">detail box</h2> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="custom-blockquotes">custom blockquotes</h2> <blockquote class="block-tip"> <p><strong>TIP</strong></p> <p>A tip can be used when you want to give advice related to a certain content.</p> </blockquote> <blockquote class="block-warning"> <p><strong>WARNING</strong></p> <p>This is a warning, and thus should be used when you want to warn the user</p> </blockquote> <blockquote class="block-danger"> <p><strong>DANGER</strong></p> <p>This is a danger zone, and thus should be used carefully</p> </blockquote> <hr/> <h2 id="tabs">tabs</h2> <ul id="log" class="tab" data-tab="2ed00998-7ca0-4450-a785-dc28461855ca" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="2ed00998-7ca0-4450-a785-dc28461855ca" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <hr/> <h2 id="pseudocode">pseudocode</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pseudocode</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre> <hr/> <h2 id="image-video-audio">Image, Video, Audio</h2> <h3 id="single-image">single image</h3> <figure> <picture> <img src="/assets/img/logo/UNIST_logo.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="multiple-image">multiple image</h3> <p>2~3개의 이미지를 같은 줄에 넣기</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/logo/UNIST_logo.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/logo/UAI_logo2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <h3 id="swiper-container">swiper-container</h3> <p>이미지 여러장 옆으로 넘기면서 보기</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">images</span><span class="pi">:</span>
  <span class="na">slider</span><span class="pi">:</span> <span class="kc">true</span>  <span class="c1"># 이미지 여러장 옆으로 넘기면서 보기</span>
</code></pre></div></div> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <img src="/assets/img/logo/UAI_logo2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/logo/UNIST_logo.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/logo/Topmath.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h3 id="img-comparison-slider">img-comparison-slider</h3> <p>좌우로 슬라이더로 비교</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">images</span><span class="pi">:</span>
  <span class="na">compare</span><span class="pi">:</span> <span class="kc">true</span>  <span class="c1"># 좌우로 슬라이드하면서 흑백 변경같은거</span>
</code></pre></div></div> <img-comparison-slider> <figure slot="first"> <picture> <img src="/assets/img/logo/UNIST_logo.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <img src="/assets/img/logo/UAI_logo2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider> <hr/> <h3 id="video">video</h3> <p>유튜브 링크를 그대로 가져올 경우 다음과 같은 embed 링크로 변환해줘야함</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://youtu.be/kCc8FmEb1nY → https://www.youtube.com/embed/kCc8FmEb1nY
</code></pre></div></div> <figure> <div style="position: relative; width: 100%; padding-bottom: 56.25%; height: 0;"> <iframe src="https://www.youtube.com/embed/kCc8FmEb1nY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe> </div> </figure> <hr/> <h3 id="audio">audio</h3> <figure> <audio src="https://cdn.pixabay.com/download/audio/2022/06/25/audio_69a61cd6d6.mp3" controls=""/> </figure> <hr/> <h2 id="code_diff">code_diff</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">code_diff</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <ul> <li>diff 사용 <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div> </div> </li> <li>diff2html 사용 <pre><code class="language-diff2html">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")
</code></pre> </li> </ul> <hr/> <h2 id="typograms">typograms</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">typograms</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <hr/> <h2 id="chart">Chart</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">chart</span><span class="pi">:</span>
  <span class="na">echarts</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">chartjs</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">plotly</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">vega_lite</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <h3 id="echarts">echarts</h3> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <h3 id="chartjs">chartjs</h3> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <h3 id="plotly">plotly</h3> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}
</code></pre> <h3 id="vega_lite">vega_lite</h3> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <hr/> <h2 id="mermaid-diagrams">mermaid (diagrams)</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">mermaid</span><span class="pi">:</span>
  <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">zoomable</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <pre><code class="language-mermaid">sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
</code></pre> <pre><code class="language-mermaid">gantt
    dateFormat  YYYY-MM-DD
    title A Gantt Diagram

    section Section
    Task A           :a1, 2025-01-01, 30d
    Task B           :after a1, 20d
    Task C           :2025-01-10, 12d
</code></pre> <hr/> <h2 id="detail-codeblock">detail codeblock</h2> <p>lineos를 통해 줄번호 입력 가능하지만, <code class="language-plaintext highlighter-rouge">pretty_table: true</code> 해주면 선이 보여서 별로임</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
<span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure> <hr/> <h2 id="toc">toc</h2> <p>목차를 어떻게 쓸건지임</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
  <span class="na">beginning</span><span class="pi">:</span> <span class="kc">true</span>  <span class="c1"># 맨 앞에 목차</span>
  <span class="na">sidebar</span><span class="pi">:</span> <span class="s">left</span>  <span class="c1"># 목차가 사이드바 왼쪽에 붙어있음</span>
</code></pre></div></div> <hr/> <h2 id="jupyter-notebook">jupyter notebook</h2> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <hr/> <h2 id="pretty_table">pretty_table</h2> <p>이걸 해야 표에 선이 생김</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pretty_table</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <table> <thead> <tr> <th style="text-align: left">Left aligned</th> <th style="text-align: center">Center aligned</th> <th style="text-align: right">Right aligned</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">Left 1</td> <td style="text-align: center">center 1</td> <td style="text-align: right">right 1</td> </tr> <tr> <td style="text-align: left">Left 2</td> <td style="text-align: center">center 2</td> <td style="text-align: right">right 2</td> </tr> <tr> <td style="text-align: left">Left 3</td> <td style="text-align: center">center 3</td> <td style="text-align: right">right 3</td> </tr> </tbody> </table> <table data-click-to-select="true" data-height="460" data-pagination="true" data-search="true" data-toggle="table" data-url="/assets/json/table_data.json"> <thead> <tr> <th data-checkbox="true"></th> <th data-field="id" data-halign="left" data-align="center" data-sortable="true">ID</th> <th data-field="name" data-halign="center" data-align="right" data-sortable="true">Item Name</th> <th data-field="price" data-halign="right" data-align="left" data-sortable="true">Item Price</th> </tr> </thead> </table> <hr/> <h2 id="redirect">Redirect</h2> <p>이런 식으로 쓰면 글 눌렀을 때 바로 그 경로로 가짐</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">redirect</span><span class="pi">:</span> <span class="s">/assets/pdf/example_pdf.pdf</span>
</code></pre></div></div> <h2 id="citation">Citation</h2> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">citation</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>이 아래 내용은 내가 안쓴건데 “이 사이트가 유용했다면 다음과 같은 방법으로 인용해주세요~” 라고 해줌<br/> 👇👇👇</p>]]></content><author><name></name></author><category term="Else"/><summary type="html"><![CDATA[al-folio로 블로그를 바꾼 후 신기한 기능들이 많아서 정리를 해보고자 https://alshedivat.github.io/al-folio/blog/에 있는 기능들을 모아봤다.]]></summary></entry><entry><title type="html">SANA: Efficient High-Resolution Image Synthesis with Linear Diffusion Transformers</title><link href="https://hoonably.github.io/blog/sana/" rel="alternate" type="text/html" title="SANA: Efficient High-Resolution Image Synthesis with Linear Diffusion Transformers"/><published>2025-05-11T16:27:31+00:00</published><updated>2025-05-11T16:27:31+00:00</updated><id>https://hoonably.github.io/blog/sana</id><content type="html" xml:base="https://hoonably.github.io/blog/sana/"><![CDATA[<table class="simple-table" id="1b2451cf-7b79-80ff-ab8a-f57c4f2f327b"><tbody><tr id="1b2451cf-7b79-8083-bf78-d343f537ecac"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">ArXiv</th><td class="" id="L|H:" style="width:580.5px"><a href="https://arxiv.org/abs/2410.10629">https://arxiv.org/abs/2410.10629</a></td></tr><tr id="1b2451cf-7b79-801e-935d-e0aa93b0292b"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Project Page</th><td class="" id="L|H:" style="width:580.5px"><a href="https://nvlabs.github.io/Sana/">https://nvlabs.github.io/Sana/</a></td></tr><tr id="1b2451cf-7b79-806b-b5fa-da2d3db4b742"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Github Code</th><td class="" id="L|H:" style="width:580.5px"><a href="https://github.com/NVlabs/Sana">https://github.com/NVlabs/Sana</a></td></tr><tr id="241451cf-7b79-80ac-bce8-cde88241b838"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Affiliation</th><td class="" id="L|H:" style="width:580.5px">NVIDIA, MIT, Tsinghua University</td></tr></tbody></table> <figure class="block-color-teal_background callout" id="1f1451cf-7b79-80e5-8185-cf1698a2fcae" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%"> <strong>Key Differentiator</strong><ol class="numbered-list" id="1f1451cf-7b79-80d3-b805-edbbf636523d" start="1" type="1"><li>Efficient Linear DiT designReLU 기반 Linear Attention 도입<br/>Mix-FFN Block</li></ol><ol class="numbered-list" id="1f1451cf-7b79-8027-8574-dea4713ff7e4" start="2" type="1"><li>Deep Compression Autoencoder→ 이로 인한 32배 압축 가능으로 연산도 빨라짐</li></ol></div></figure> <p class="" id="230451cf-7b79-80e5-a367-fa118f4679a6"> </p> <figure class="image" id="1c0451cf-7b79-8009-b100-e7fde0ee7305"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image.webp" style="width:336px"/></picture></figure> <p class="" id="1e1451cf-7b79-8065-ba44-fffe93414c27"> </p> <p class="" id="1e1451cf-7b79-8017-b604-d5ac7746ae95">이번에는 SVDQuant의 저자인 Song Han이 또 일을 냈다.</p> <p class="" id="1e1451cf-7b79-80cd-8a35-c29149cbc47a">SANA 라는 Diffusion 모델을 NVIDIA에서 제작했는데, 역대급이다.</p> <p class="" id="1e1451cf-7b79-80d2-9a60-efd89be7917b">내가 하려던 On-device 4K Diffusion 연구에도 크게 도움될 것 같아서 읽어보았다.</p> <p class="" id="1e1451cf-7b79-8068-a57d-cdded33b9d3f"> </p> <p class="" id="1e1451cf-7b79-809c-8b6e-e89ac9a566b4"> </p> <h1 class="" id="1b9451cf-7b79-80c6-9476-ccc63742e7c3">1. Introduction</h1> <p class="" id="1b9451cf-7b79-80b6-bbc6-f714e85ebac1">지난 1년동안 Diffusion 모델은 text-to-image 연구에서 상당한 진전을 보임.</p> <p class="" id="1b9451cf-7b79-800c-801e-cf59e063ce7f">하지만, 아래와 같이 상업 모델은 파라미터가 매우 커짐 → 높은 학습 및 추론 비용을 초래하여 비용이 많이 들음.</p> <blockquote class="" id="1b9451cf-7b79-80c6-9a00-d8a6af96f4da">Industry models are becoming increasingly large, with parameter counts escalating from PixArt’s 0.6B parameters to SD3 at 8B, LiDiT at 10B, Flux at 12B, and Playground v3 at 24B.</blockquote> <p class="" id="1b9451cf-7b79-80c2-919a-f454fca1b6e7"> cloud 뿐만 아니라 edge devices에서도 빠르게 실행되는 고해상도 image generator를 개발할 수 없을까?</p> <p class="" id="1b9451cf-7b79-8074-ac62-cf738cb861d3"> </p> <figure class="image" id="1b9451cf-7b79-8055-beb8-cf3ac6c01b58"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%201.webp" style="width:709.9921875px"/></picture></figure> <p class="" id="1b9451cf-7b79-802d-8047-f54d18790de3">이 논문은 1024 × 1024 ~ 4096 × 4096 범위의 해상도에서 이미지를 효율적이고 비용 효율적으로 훈련하고 합성하도록 설계된 파이프 라인 인 SANA를 제안</p> <p class="block-color-orange_background" id="1b9451cf-7b79-8003-909f-fd18695a1fc9">Pixart-σ (Chen et al., 2024a)를 제외하고는 4K 해상도 이미지 생성을 직접 탐색하지 못했습니다. 그러나 Pixart-σ는 4K 해상도에 가까운 이미지를 생성하는 것으로 제한되며 (3840 × 2160) 이러한 고해상도 이미지를 생성 할 때 비교적 느립니다. 이 야심 찬 목표를 달성하기 위해 몇 가지 핵심 디자인을 제안합니다.</p> <p class="" id="1b9451cf-7b79-80bc-adeb-e4e3551f01c6"> </p> <h1 class="" id="1b9451cf-7b79-8047-8f49-d17177f41bab">2. METHODS</h1> <h2 class="" id="1bb451cf-7b79-8048-82a5-e0315876b9de">2.1 DEEP COMPRESSION AUTOENCODER</h2> <h3 class="" id="1bb451cf-7b79-80cb-ad09-f5479498ed54">2.1.1 PRELIMINARY</h3> <p class="" id="1bb451cf-7b79-804a-ac0a-eebc5d2259cb">원래 diffusion 모델은 이미지 픽셀 공간 (pixel space) 위에서 직접 작동 → 훈련, 추론 둘다 너무 느리고 무거움</p> <p class="" id="1e1451cf-7b79-80ad-aac2-cd93e0a517c4"> </p> <p class="" id="1e1451cf-7b79-8038-9550-f5738fafe434"> <strong>Latent Diffusion Models</strong></p> <p class="" id="1e1451cf-7b79-8093-bf1a-f9ff909ebe01">Autoencoder로 이미지 압축 후 압축된 latent 공간 위에서 diffusion을 돌리자!</p> <p class="" id="1e1451cf-7b79-80cb-9425-d0d88bebca42">→ 8배 압축 사용</p> <li style="list-style-type:disc">Pixel space: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>3</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbb{R}^{H \times W \times 3}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span></li> <li style="list-style-type:disc">Latent space: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><mn>8</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>8</mn></mfrac><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbb{R}^{\frac{H}{8} \times \frac{W}{8} \times C}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.9735em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9735em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span><br/>여기서 <br/><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span><span>﻿</span></span>는 latent 채널 수</li> <p class="" id="1e1451cf-7b79-8025-89a9-f25430858d86"> </p> <p class="" id="1e1451cf-7b79-80ff-9148-cfcd4f64f67e"> <strong>Diffusion Transformer (DiT)</strong></p> <p class="" id="1e1451cf-7b79-80f1-9e7d-d4ab130b2381">추가로 latent feature를 Patch 단위로 또 나눠서 처리</p> <p class="" id="1b9451cf-7b79-8098-9193-e586022348f2">패치크기가 PxP 라면 최종적으로 다루는 토큰 개수는 </p> <figure class="equation" id="230451cf-7b79-80d0-8c41-d7c0591f8341"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mrow><mi>P</mi><mi>F</mi></mrow></mfrac><mo>×</mo><mfrac><mi>W</mi><mrow><mi>P</mi><mi>F</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{PF} \times \frac{W}{PF}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">PF</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">PF</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></div></figure> <p class="" id="1e1451cf-7b79-80c0-8075-cc5ee94161f7">기존 latent diffusion 모델들(PixArt, SD3, Flux 등)은 보통 다음 세팅을 씀</p> <li style="list-style-type:disc"> <strong>AE-F8C4P2</strong> 또는  <strong>AE-F8C16P2</strong><li style="list-style-type:circle"> <strong>F8</strong>: Autoencoder가 8배 압축</li><li style="list-style-type:circle"> <strong>C4</strong> 또는  <strong>C16</strong>: latent 채널 수 (4개나 16개)</li><li style="list-style-type:circle"> <strong>P2</strong>: Patch 크기 2×2로 묶기</li></li> <p class="" id="1b9451cf-7b79-8061-b473-ca4c6cebf9ec"> </p> <p class="" id="1e1451cf-7b79-80c9-8b47-c9263e77a942">기존처럼 8배 압축만 하면 계산량이 여전히 너무 많음</p> <p class="" id="1e1451cf-7b79-80fb-ba54-e86186ec4dea">그래서 SANA는 과감하게  <strong>32배 압축(AE-F32)</strong>하고, 패치로는 묶지 않음.</p> <p class="" id="1e1451cf-7b79-80f8-a5b4-ccb66a1d1e24"> </p> <h3 class="" id="1e1451cf-7b79-8085-acf1-c48b62023c68">2.1.2 AUTOENCODER DESIGN PHILOSOPHY</h3> <table class="simple-table" id="1e1451cf-7b79-80c4-bc4e-e1bc262ed3ab"><tbody><tr id="1e1451cf-7b79-80e3-83ee-dffd0bf9e6d2"><td class="" id="`J=h" style="width:230px">구분</td><td class="" id="`bRS" style="width:230px">기존 (PixArt, Flux)</td><td class="" id="Ir}k" style="width:230px">SANA</td></tr><tr id="1e1451cf-7b79-80e2-a661-de1049a8f47a"><td class="" id="`J=h" style="width:230px">AE 압축비</td><td class="" id="`bRS" style="width:230px">8배 (F=8)</td><td class="" id="Ir}k" style="width:230px">32배 (F=32)</td></tr><tr id="1e1451cf-7b79-80f2-92b8-ee193e976609"><td class="" id="`J=h" style="width:230px">Patchify (P=2)</td><td class="" id="`bRS" style="width:230px">O (패치로 묶음)</td><td class="" id="Ir}k" style="width:230px">✖️ (패치 안 묶음)</td></tr><tr id="1e1451cf-7b79-8049-9e56-e39dfbc57552"><td class="" id="`J=h" style="width:230px">최종 Token 수</td><td class="" id="`bRS" style="width:230px">줄였지만 아직 많음</td><td class="" id="Ir}k" style="width:230px">훨씬 적음 (16배 감소)</td></tr></tbody></table> <figure class="image" id="1e1451cf-7b79-8045-a540-cda5274fd13c"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%202.webp" style="width:432px"/></picture></figure> <p class="" id="1e1451cf-7b79-80b0-ad98-dffcd03267c4">위의 표를 보면 알 수 있듯이 32배 압축하더라도 점수가 크게 떨어지지 않는 모습을 보임</p> <p class="" id="1e1451cf-7b79-8081-b043-db7b043be64a"> </p> <h3 class="" id="1e1451cf-7b79-8092-8255-d8e0b073f06d">2.1.3 ABLATION OF AUTOENCODER DESIGNS</h3> <li style="list-style-type:disc"> <strong>어디서 압축을 더 하는 게 좋은가? (AE vs DiT)</strong></li> <div class="column-list" id="1e1451cf-7b79-80cd-8673-ca56ffeba583"><div class="column" id="1e1451cf-7b79-8040-9327-e9af8f5fa806" style="width:50%"><figure class="image" id="1e1451cf-7b79-8013-9275-e07b37b17ec6"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%203.webp" style="width:384px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-800b-a3e1-d9b700437cab" style="width:50%"><table class="simple-table" id="1e1451cf-7b79-8065-800d-c5144119a97c"><tbody><tr id="1e1451cf-7b79-801c-9ad0-ca35952be937"><td class="" id="G`wd" style="width:125px">설정</td><td class="" id="GEiu" style="width:252px">설명</td></tr><tr id="1e1451cf-7b79-806f-bf4c-ce61d69ce563"><td class="" id="G`wd" style="width:125px">AE-F8C16P4</td><td class="" id="GEiu" style="width:252px">8배 압축 + 패치 크기 4</td></tr><tr id="1e1451cf-7b79-8076-9db3-e52d727bc6c6"><td class="" id="G`wd" style="width:125px">AE-F16C32P2</td><td class="" id="GEiu" style="width:252px">16배 압축 + 패치 크기 2</td></tr><tr id="1e1451cf-7b79-80c5-af81-e6bf4a0e97af"><td class="" id="G`wd" style="width:125px">AE-F32C32P1</td><td class="" id="GEiu" style="width:252px">32배 압축 + 패치 사용하지 않음 (SANA)</td></tr></tbody></table></div></div> <p class="" id="1e1451cf-7b79-804d-883e-cbead4e38a14">AE-F32C32P1 설정이 가장 뛰어난 성능(FID, CLIP Score)을 기록</p> <p class="" id="1e1451cf-7b79-8076-a4e1-dd378d999616">Autoencoder가 압축을 전적으로 담당하는 것이 성능 및 훈련 안정성 모두에서 가장 우수</p> <p class="" id="1e1451cf-7b79-80c1-8a75-c172c62ee7c6"> </p> <li style="list-style-type:disc"> <strong>Autoencoder latent 채널 수를 몇 개로 하는 게 좋은가?</strong></li> <div class="column-list" id="1e1451cf-7b79-808a-ba25-e8ce8eb7085a"><div class="column" id="1e1451cf-7b79-800a-85f2-e521ccbcff47" style="width:50%"><figure class="image" id="1e1451cf-7b79-80c7-a890-ddb81f6586fc"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%204.webp" style="width:709.9921875px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-80eb-837c-c09fe3a2a8c6" style="width:50%"><li style="list-style-type:disc">C=16, C=32, C=64 실험 수행</li><li style="list-style-type:disc">C=16은 정보 손실로 인해 품질 저하 발생</li><li style="list-style-type:disc">C=64는 복원 품질은 좋았으나 모델 복잡도가 급격히 증가하여 비효율적임</li><li style="list-style-type:disc">C=32가 성능과 효율 사이에서 최적 균형을 달성함</li><p class="" id="1e1451cf-7b79-80cf-92a7-eae55efd12c9"> </p></div></div> <p class="" id="1e1451cf-7b79-8077-8e8b-da06c8fd118a"> </p> <h2 class="" id="1e1451cf-7b79-8005-9906-fe8ee9f67931">2.2 EFFICIENT LINEAR DIT DESIGN</h2> <li style="list-style-type:disc">기존 diffusion transformer(예: DiT) 구조는  <strong>Self-Attention</strong>을 사용함.</li> <li style="list-style-type:disc">Self-Attention의 연산량은  <strong>O(N²)</strong> 에 비례함.<li style="list-style-type:circle">NNN은 입력 토큰 수</li><li style="list-style-type:circle">토큰 수가 많아지면 연산량이 급격히 커짐</li></li> <li style="list-style-type:disc">4K 해상도 이미지를 다루려면, latent token 수가 많아질 수밖에 없음.</li> <p class="" id="1e1451cf-7b79-80bb-9674-ec05fe71520b">→ 이때, 기존 연구들은 이 문제를 해결하려고 해상도 낮추거나 Token 수를 줄였음.</p> <p class="" id="1e1451cf-7b79-806c-a8f4-da4c638adbc7"> </p> <p class="" id="1e1451cf-7b79-808e-aed5-dee3bacf859a"> </p> <h3 class="" id="1e1451cf-7b79-8005-bbf9-ca3630372b5f">ReLU 기반 Linear Attention 도입</h3> <p class="" id="1e1451cf-7b79-80a5-bd1f-fe258c3e21d3">기존 Softmax 기반 Attention을 제거하고,  <strong>ReLU를 이용한 Linear Attention</strong>을 채택</p> <figure class="equation" id="230451cf-7b79-8016-b5cb-d5462c27e05d"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">A</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mo stretchy="false">(</mo><mi>Q</mi><msup><mi>K</mi><mi mathvariant="normal">⊤</mi></msup><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\mathrm{Attention}(Q, K, V) = \mathrm{softmax}(QK^\top) V</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">Attention</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">softmax</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></div></figure> <p class="" id="1e1451cf-7b79-804e-b8d2-cd2ce2a7b811">Softmax는 모든 Query-Token 조합을 다 계산하기 때문에 O(N²) 복잡도가 발생</p> <p class="" id="1e1451cf-7b79-80ef-a096-fe7b18a64df7"> </p> <div class="column-list" id="1e1451cf-7b79-8037-ab88-f625c0cce9d4"><div class="column" id="1e1451cf-7b79-8087-91f2-eda7b8ba45ee" style="width:31.25%"><figure class="image" id="1e1451cf-7b79-809b-b6ba-d5b13e8c53f3"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%205.webp" style="width:331.9921875px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-80c8-a5f7-e54f713aa754" style="width:68.75%"><li style="list-style-type:disc">SANA에서는 다음처럼 계산 구조를 변경:<ol class="numbered-list" id="1e1451cf-7b79-8075-939d-fdd44b7c9e75" start="1" type="1"><li>각 Key에 ReLU를 적용함:  <strong>ReLU(K)</strong></li></ol><ol class="numbered-list" id="1e1451cf-7b79-8090-8371-e394e722bbc9" start="2" type="1"><li>두 가지 공유 term을 미리 계산<li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><mi mathvariant="normal">R</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">U</mi></mrow><mo stretchy="false">(</mo><msub><mi>K</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{j=1}^N \mathrm{ReLU}(K_j)^T V_j</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.417em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">ReLU</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (dxd matrix)</li><li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><mi mathvariant="normal">R</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">U</mi></mrow><mo stretchy="false">(</mo><msub><mi>K</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\sum_{j=1}^N \mathrm{ReLU}(K_j)^T</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.417em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">ReLU</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (d×1 vector)</li></li></ol><ol class="numbered-list" id="1e1451cf-7b79-808e-b95f-c187fb75f285" start="3" type="1"><li>이후, 각 Query에 대해 이 pre-computed shared term을 재사용하여 Attention을 계산</li></ol></li><li style="list-style-type:disc">이 방식은 Query마다 개별적으로 연산할 필요가 없어서, 전체 Attention 계산이  <strong>O(N)</strong> 으로 줄어듦.</li><p class="" id="1e1451cf-7b79-801f-b21f-f85a6a1000cf"> </p></div></div> <p class="" id="1e1451cf-7b79-808f-b019-c49c74b52e7e"> </p> <p class="" id="1e1451cf-7b79-80e2-9406-f12f81268cad"> <strong>PixArt도 Linear이랬는데 다른점은?</strong></p> <p class="" id="1e1451cf-7b79-8062-8136-e2c8084383eb">PixArt에서는 Key와 Value 토큰을 압축하여 연산량을 줄여서 Engineering Optimization으로 O(N)과 비슷하게 하는 방식, SANA에서는 아예 수학적으로 계산량이 O(N)</p> <p class="" id="1e1451cf-7b79-8017-a3ee-f319d05ef866"> </p> <p class="" id="1e1451cf-7b79-80df-931b-ed23d48991ef"> </p> <p class="" id="1e1451cf-7b79-8064-a4e3-e31fc8cd4e4b"> </p> <p class="" id="1e1451cf-7b79-80ef-a40f-fde33951f7cf"> </p> <h3 class="" id="1e1451cf-7b79-8094-bd3c-c9de943dfcfa">Mix-FFN Block</h3> <div class="column-list" id="1e1451cf-7b79-8014-8b6b-e9dc846abe4b"><div class="column" id="1e1451cf-7b79-8057-94ea-e74d67472b3d" style="width:18.75%"><figure class="image" id="1e1451cf-7b79-80e5-9d1d-e73d7e7f40e8"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%206.webp" style="width:331.9921875px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-80ab-a302-fe2daa822bdd" style="width:81.25%"><p class="" id="1e1451cf-7b79-80a1-aa08-cea58de6dd01">기존 Transformer의 FFN (Feed-Forward Network)은 단순히 2개의 Linear Layer로 구성되어 있었음.</p><p class="" id="1e1451cf-7b79-80ef-b509-cc0b50e0f1c8">FFN은 전역적인 정보는 잘 처리하지만,  <strong>지역적인(local) 디테일</strong> 복원에는 약했음.</p><p class="" id="1e1451cf-7b79-805d-9466-db4c3916938c"> </p><p class="" id="1e1451cf-7b79-80ec-9f84-df19eb48f269">SANA의 해결책:</p><li style="list-style-type:disc">기존 MLP 사이에  <strong>3×3 Depthwise Convolution</strong>을 삽입</li><li style="list-style-type:disc">이를 통해 지역 구조(local structure) 학습을 강화</li><li style="list-style-type:disc">결과적으로  <strong>텍스처, 경계선</strong>, 이런 세밀한 부분 복원에 유리</li><p class="" id="1e1451cf-7b79-80c4-9e77-e9cabd2af50d"> </p></div></div> <p class="" id="1e1451cf-7b79-80b8-bb4c-e665e1580398"> </p> <p class="" id="1e1451cf-7b79-8006-a4dd-fe63c5ab7754"> </p> <p class="" id="1e1451cf-7b79-8044-ac8d-e8338b9be66e"> </p> <h3 class="" id="1e1451cf-7b79-80bb-890c-f14842ca751b">DiT without Positional Encoding (NoPE)</h3> <p class="" id="1e1451cf-7b79-80ce-891a-fb72b793fcff">기존 Transformer 구조는 입력 순서를 인식하도록  <strong>Positional Encoding</strong>을 사용했음.</p> <p class="" id="1e1451cf-7b79-8013-b598-c862c600b300">왜냐면 Transformer는 입력 순서를 구별할 수 없었기 때문에…</p> <p class="" id="1e1451cf-7b79-8049-a242-d023119ca191"> </p> <p class="" id="1e1451cf-7b79-8042-923b-c825f3c64f69">하지만 4K 고해상도 latent처럼 토큰 수가 많을 때, Positional Encoding을 계산하고 저장하는 데도 비용이 큼.</p> <p class="" id="1e1451cf-7b79-8089-b32d-e572fc9e9972"> </p> <p class="" id="1e1451cf-7b79-80d5-970e-fe47244c21e5">SANA에서는 아예 Positional Encoding을 제거함</p> <li style="list-style-type:disc"> <strong>3×3 Depthwise Convolution</strong>이 Mix-FFN에 추가되어서 지역적 위치 관계를 학습할 수 있음.</li> <li style="list-style-type:disc">Linear Attention은  <strong>전역 관계</strong>를 자연스럽게 포착할 수 있음.<p class="" id="1e1451cf-7b79-809e-bddb-d0eaf31cdb41">→ 별도로 위치 정보를 부여하지 않아도 충분히 패턴과 구조를 학습할 수 있음.</p></li> <p class="" id="1e1451cf-7b79-8026-909d-cdad368961c3"> </p> <p class="" id="1e1451cf-7b79-8019-8111-ce9a849dcee8">결과적으로 품질이 유지되면서 구조가 간단해지고 메모리 연산량이 감소함</p> <figure class="image" id="1e1451cf-7b79-8004-a692-db239ce26b72"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%207.webp" style="width:528px"/></picture></figure> <p class="" id="1e1451cf-7b79-8012-a554-e3dfe57ade45"> </p> <p class="" id="1e1451cf-7b79-8081-90cc-f566df8cef16"> </p> <p class="" id="1e1451cf-7b79-8099-beb2-e34547481389"> </p> <h3 class="" id="1e1451cf-7b79-8065-8dc2-eb244c9483b7">Triton Acceleration Training/Inference</h3> <p class="" id="1e1451cf-7b79-8009-8882-f72f1b0fb367">Appendix에 추가한다고 되어있는데 아직 관련 내용 없음.</p> <p class="" id="1e1451cf-7b79-80f2-a05f-d5ba351d6134"> </p> <p class="" id="1e1451cf-7b79-80a7-b828-dff44b07f9e3">GPT가 알려준 내용</p> <li style="list-style-type:disc">Linear Attention을 구현할 때, 단순히 알고리즘만 개선하는 것으로는 부족함.</li> <li style="list-style-type:disc">실제 연산 효율까지 극대화하려면,  <strong>GPU kernel 레벨 최적화</strong>가 필요함.</li> <li style="list-style-type:disc">SANA는  <strong>Triton</strong>을 사용하여 Linear Attention 연산을 직접 최적화함.<li style="list-style-type:circle">Triton은 NVIDIA가 지원하는  <strong>커스텀 GPU 커널 프로그래밍 프레임워크</strong>임.</li><li style="list-style-type:circle">CUDA보다 단순한 문법으로, 고성능 커널을 작성할 수 있음.</li></li> <p class="" id="1e1451cf-7b79-80f5-9cf8-f5152a0df3ab"> </p> <p class="" id="1e1451cf-7b79-8057-b111-cd1230ed2402">Triton으로 최적화한 결과:</p> <li style="list-style-type:disc">Matrix 곱 연산(GEMM)과 Memory Access를 줄임.</li> <li style="list-style-type:disc">실제 latency(지연 시간)와 memory bandwidth 소모를 크게 개선</li> <p class="" id="1e1451cf-7b79-8052-a8a6-d0f4815a7773"> </p> <p class="" id="1e1451cf-7b79-8088-8972-d06b7bf80def"> </p> <p class="" id="1e1451cf-7b79-808b-b041-d57e8f2a3049"> </p> <p class="" id="1e1451cf-7b79-80b5-8104-cba39f710b69"> </p> <p class="" id="1e1451cf-7b79-80c8-8171-c1fecf5a0d15"> </p> <h2 class="" id="1e1451cf-7b79-80bc-b5d2-de21611ef5ae">2.3 TEXT ENCODER DESIGN</h2> <p class="" id="1e1451cf-7b79-805e-9efe-c9aaa7c50acd"> </p> <h3 class="" id="1e1451cf-7b79-8096-9973-ccc984b429fa"> <strong>왜 T5 대신 Decoder-only LLM을 사용하는가?</strong></h3> <p class="" id="1e1451cf-7b79-80c0-880e-e483b616aa44"> </p> <p class="" id="1e1451cf-7b79-8004-b481-fb568212a13f">SANA는 Gemma를 Text Encoder로 사용하기로 채택</p> <table class="simple-table" id="1e1451cf-7b79-8033-bb10-eb08e0e4727d"><tbody><tr id="1e1451cf-7b79-8098-bd99-ca73ab8a0411"><td class="" id="XfwJ" style="width:230px">항목</td><td class="" id="sarK" style="width:230px">기존 (T5)</td><td class="" id="XAbw" style="width:230px">SANA (Gemma-2)</td></tr><tr id="1e1451cf-7b79-808a-8fb8-f7e1898d4ba8"><td class="" id="XfwJ" style="width:230px">모델 구조</td><td class="" id="sarK" style="width:230px">Encoder-Decoder</td><td class="" id="XAbw" style="width:230px">Decoder-only</td></tr><tr id="1e1451cf-7b79-801f-b975-c1b949f0870e"><td class="" id="XfwJ" style="width:230px">Reasoning 능력</td><td class="" id="sarK" style="width:230px">제한적</td><td class="" id="XAbw" style="width:230px">매우 강함 (CoT, ICL 가능)</td></tr><tr id="1e1451cf-7b79-8026-9d08-f5268410c1d3"><td class="" id="XfwJ" style="width:230px">추론 속도</td><td class="" id="sarK" style="width:230px">느림 (T5-XXL)</td><td class="" id="XAbw" style="width:230px">6배 빠름 (Gemma-2-2B)</td></tr></tbody></table> <p class="" id="1e1451cf-7b79-806c-9e64-eb2f6cbd4ea1"> </p> <figure class="image" id="1e1451cf-7b79-807b-a441-e7801ac0efe7"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%208.webp" style="width:2054px"/></picture></figure> <p class="" id="1e1451cf-7b79-8000-90b4-ec164b0bde2f">→ 빠른데도 불구하고, CLIP Score와 FID(이미지 품질 지표)에서는  <strong>성능이 비슷함</strong></p> <p class="" id="1e1451cf-7b79-809e-bd16-dc436c081112"> </p> <p class="" id="1e1451cf-7b79-809d-83d5-fde23e843e83"> </p> <h3 class="" id="1e1451cf-7b79-8050-936f-f4ceb386076a">Decoder-only LLM을 Text Encoder로 쓰면서 생긴 문제 해결</h3> <p class="" id="1e1451cf-7b79-80a5-9bd6-e070176ae4d8">Decoder-only LLM (Gemma, Qwen 등)의 텍스트 임베딩은 Variance가 훨씬 큼.</p> <li style="list-style-type:disc">큰 값이 텍스트 임베딩 안에 많이 포함되어 있음.</li> <li style="list-style-type:disc">Cross-Attention 연산 중 수치 폭발(NaN)로 이어짐.</li> <p class="" id="1e1451cf-7b79-8031-b690-d300317ceda6"> </p> <p class="" id="1e1451cf-7b79-804e-aef8-fdbb3efc4073"> </p> <p class="" id="1e1451cf-7b79-8001-8fd1-f5cc9669c842"> <strong>방법 1: RMSNorm 추가</strong></p> <p class="" id="1e1451cf-7b79-80b4-98ad-fe26f1b6d0ac">Gemma-2의 텍스트 임베딩 출력에  <strong>RMSNorm</strong>을 적용</p> <p class="" id="1e1451cf-7b79-8078-9787-eafb501d7fb3">RMSNorm?</p> <li style="list-style-type:disc">입력 벡터의 Variance를 1.0으로 정규화</li> <li style="list-style-type:disc">큰 값이나 작은 값들을 균일하게 만들어 수치 폭발 방지</li> <p class="" id="1e1451cf-7b79-80f0-b60a-c9e3b3af8af5"> </p> <p class="" id="1e1451cf-7b79-8048-8d2e-c64c9ae9f503"> <strong>방법 2: Learnable Scale Factor 추가</strong></p> <li style="list-style-type:disc">추가로, 텍스트 임베딩에  <strong>학습 가능한 작은 스케일 파라미터</strong>를 곱함</li> <li style="list-style-type:disc">초기 값은 매우 작게 설정함 (예: 0.01)</li> <li style="list-style-type:disc">이 파라미터가 학습을 통해 적절한 크기로 조정되면서 모델 수렴 속도가 빨라짐</li> <p class="" id="1e1451cf-7b79-802e-a6b5-c1b025bb65b8"> </p> <p class="" id="1e1451cf-7b79-804b-b578-d6cc57be261c">→ 훈련 안정성 확보 + 수렴 속도 향상</p> <figure class="image" id="1e1451cf-7b79-806c-bab4-dbe22b1d2d8a"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%209.webp" style="width:432px"/></picture></figure> <p class="" id="1e1451cf-7b79-80fa-b5f7-faf61ae8ad26"> </p> <p class="" id="1e1451cf-7b79-80cf-a529-de6e32ac4680"> </p> <h3 class="" id="1e1451cf-7b79-80cb-a7ce-cc817e85d83c">Complex Human Instruction Improves Text-Image Alignment</h3> <p class="" id="1e1451cf-7b79-80cc-a519-d914d84ec1e2">Gemma는 강력한 LLM이지만, 사용자가 짧거나 모호한 프롬프트를 입력하면 (예: "a cat")</p> <p class="" id="1e1451cf-7b79-808c-9e94-d9334e39607c">LLM이 초점을 잃고 엉뚱한 답변을 할 수도 있음.</p> <p class="" id="1e1451cf-7b79-803f-bd4d-f77b3a1d6d15">→ LLM이 프롬프트에만 집중하게 만드는 추가 지시문이 필요함.</p> <p class="" id="1e1451cf-7b79-8024-8c55-e16bff64d2de"> </p> <p class="" id="1e1451cf-7b79-80df-a6a3-cbe872cf84aa"> <strong>CHI가 그래서 뭔디?</strong></p> <p class="" id="1e1451cf-7b79-8099-bd13-cfd1ca105562">LLM의  <strong>In-Context Learning</strong> 능력을 활용하여 프롬프트를 주기 전에, </p> <p class="" id="1e1451cf-7b79-80cd-9d6b-d850e580600a">LLM에게 "색상, 크기, 위치 관계 같은 세부 묘사를 추가해라"와 같은  <strong>복잡한 명령 세트</strong>를 함께 제공하는 것</p> <p class="" id="1e1451cf-7b79-80cd-a1cb-ee60c69e658e"> </p> <p class="" id="1e1451cf-7b79-8040-85bf-ed8dd8f6f44a"> <strong>결과 1</strong></p> <div class="column-list" id="1e1451cf-7b79-8097-9a43-cfbef9f6121b"><div class="column" id="1e1451cf-7b79-80fc-98ed-c84ac075c157" style="width:37.5%"><figure class="image" id="1e1451cf-7b79-80e0-81d6-e22d8fd2e0e3"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%2010.webp" style="width:720px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-8010-8392-f60964428dc6" style="width:62.5%"><p class="" id="1e1451cf-7b79-80b5-93db-ed7bee07f91c">CHI를 적용했을 때, 학습을 처음부터 하든(fresh training)</p><p class="" id="1e1451cf-7b79-805d-afd8-fe29ade9f100">아니면 기존 모델을 미세 조정(fine-tuning)하든</p><p class="" id="1e1451cf-7b79-807f-bbf4-ff9345eef635"> <strong>텍스트-이미지 정렬 성능이 향상</strong></p></div></div> <p class="" id="1e1451cf-7b79-8062-bd1b-eaaca4714b77"> </p> <p class="" id="1e1451cf-7b79-8031-a545-d1b7666be5b2"> <strong>결과 2</strong></p> <div class="column-list" id="1e1451cf-7b79-80e6-aca7-dc6e49816ca7"><div class="column" id="1e1451cf-7b79-8051-bb91-e4e5def3544c" style="width:50%"><figure class="image" id="1e1451cf-7b79-8024-8875-f8fdfcbb933a"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%2011.webp" style="width:331.9921875px"/></picture></figure></div><div class="column" id="1e1451cf-7b79-8075-91ef-fee18cd122f8" style="width:50%"><p class="" id="1e1451cf-7b79-80c8-90d4-cd4bd6126a58">짧은 프롬프트(예: "a cat")를 입력했을 때,</p><p class="" id="1e1451cf-7b79-80da-8423-d573e7a5d20f"> </p><p class="" id="1e1451cf-7b79-80a6-a3f1-c0989f4cb298">CHI가 없으면, 모델이 엉뚱한 이미지를 생성하거나 품질이 불안정해짐.</p><p class="" id="1e1451cf-7b79-8069-8833-eec57a78702c"> </p><p class="" id="1e1451cf-7b79-8003-83a8-fa421069e30a">CHI가 있으면, 모델이  <strong>프롬프트에 정확히 맞는 안정적인 이미지</strong>를 생성</p><p class="" id="1e1451cf-7b79-80a9-8a48-d16a12f6e9d7"> </p></div></div> <p class="" id="1e1451cf-7b79-80c2-8eaa-d69f82999df9"> </p> <p class="" id="1e1451cf-7b79-80cf-be9f-fd35f11fe6f8"> </p> <p class="" id="1e1451cf-7b79-807d-93e8-dd3ef8b78aad"> </p> <p class="" id="1e1451cf-7b79-8042-8caa-cbb23bed9adf"> </p> <p class="" id="1e1451cf-7b79-80c0-b0b3-e6b1bae0e301"> </p> <h1 class="" id="1e1451cf-7b79-800b-9684-f23c46215e94">3 EFFICIENT TRAINING/INFERENCE</h1> <h2 class="" id="1e1451cf-7b79-80c9-a061-c5455d8655d4">3.1 DATA CURATION AND BLENDING</h2> <h3 class="" id="1e1451cf-7b79-80a3-8afc-e633623249c6">1. Multi-Caption Auto-labelling Pipeline</h3> <p class="" id="1e1451cf-7b79-8085-a059-cdd9d0d17de5"> </p> <p class="" id="1e1451cf-7b79-80ca-939b-cd45e6a4ae32"> <strong>이미지 하나당 4개의 VLM(Vision-Language Models) 을 이용해 캡션을 생성함.</strong></p> <li style="list-style-type:disc"> <strong>VILA-3B</strong></li> <li style="list-style-type:disc"> <strong>VILA-13B</strong></li> <li style="list-style-type:disc"> <strong>InternVL-28B</strong></li> <li style="list-style-type:disc"> <strong>InternVL-26B</strong></li> <p class="" id="1e1451cf-7b79-80b8-85c7-c591d1067a22"> </p> <p class="" id="1e1451cf-7b79-804f-9bbe-c8bcb1f2c8e8"> <strong>→ 정확한 캡션</strong> 생성 (하나만 쓰는 것보다 오류 줄임)</p> <p class="" id="1e1451cf-7b79-8027-8b9b-e6d1373614f5"> <strong>→ 다양한 표현</strong> 확보 (같은 이미지를 여러 관점에서 묘사 가능)</p> <hr id="1e1451cf-7b79-8045-bc0d-c14849aa4cea"/> <h3 class="" id="1e1451cf-7b79-806c-b075-cc590274effc">2. CLIP-Score-based Caption Sampler</h3> <p class="" id="1e1451cf-7b79-8063-a310-d7dfdf81a3d6"> <strong>문제 상황</strong></p> <li style="list-style-type:disc">캡션을 여러 개 만들었는데,<p class="" id="1e1451cf-7b79-803c-9511-e555a8e2e77c">훈련할 때 어떤 캡션을 선택할지가 문제임.</p></li> <li style="list-style-type:disc">무작위로(random) 하나 고르면:<li style="list-style-type:circle">품질이 낮은 문장을 뽑을 위험이 있음</li><li style="list-style-type:circle">그러면 훈련이 느려지거나 모델 품질이 떨어짐</li></li> <p class="" id="1e1451cf-7b79-8033-994d-c2063d8231da"> <strong>해결 방법</strong></p> <li style="list-style-type:disc"> <strong>CLIP score</strong>를 활용해 품질 높은 캡션을 뽑는 방식 사용<li style="list-style-type:circle">CLIP은 이미지-텍스트 매칭 정도를 점수로 계산해줌.</li></li> <li style="list-style-type:disc">과정:<ol class="numbered-list" id="1e1451cf-7b79-8043-a7e4-f032f1e74436" start="1" type="1"><li>이미지에 대해 생성된 각 캡션의 CLIP 점수(cic_ici)를 계산</li></ol><ol class="numbered-list" id="1e1451cf-7b79-8025-b743-d57f63576136" start="2" type="1"><li>점수가 높은 캡션일수록 뽑힐 확률이 높게 설정</li></ol><ol class="numbered-list" id="1e1451cf-7b79-8054-b3c3-f5be9f794345" start="3" type="1"><li>Sampling 확률 공식:</li></ol><figure class="equation" id="230451cf-7b79-80f7-aace-cf3753ca613c"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><mrow><msub><mi>c</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><mi>τ</mi></mrow></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><mrow><msub><mi>c</mi><mi>j</mi></msub><mi mathvariant="normal">/</mi><mi>τ</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(c_i) = \frac{e^{c_i / \tau}}{\sum_{j=1}^N e^{c_j / \tau}}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.872em;vertical-align:-1.307em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8301em;"><span style="top:-3.0051em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.307em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></div></figure></li> <p class="" id="1e1451cf-7b79-80aa-b764-e9b1e0adae90">여기</p> <li style="list-style-type:disc">τ는 "temperature"라는 하이퍼파라미터임.</li> <li style="list-style-type:disc"> <strong>Temperature 조정으로 뽑는 강도를 조절</strong>할 수 있음:<li style="list-style-type:circle">τ가 작으면: 점수 가장 높은 캡션만 거의 항상 선택</li><li style="list-style-type:circle">τ가 크면: 다양한 캡션이 고르게 선택됨</li></li> <hr id="1e1451cf-7b79-808f-b710-c6a09165c830"/> <h3 class="" id="1e1451cf-7b79-8032-a178-e8ad6f17eeb0">실험 결과</h3> <li style="list-style-type:disc">Table 4 결과에 따르면:<li style="list-style-type:circle">캡션을 다양하게 골라도 이미지 품질(FID)은 거의 변하지 않음</li><li style="list-style-type:circle">하지만  <strong>훈련 중 텍스트-이미지 정렬</strong>(semantic alignment)은 훨씬 좋아짐</li></li> <hr id="1e1451cf-7b79-80ed-9c5d-c6e329e8175d"/> <h3 class="" id="1e1451cf-7b79-804a-90b0-ea6fe1d64f93"> <strong>3. Cascade Resolution Training</strong></h3> <h3 class="" id="1e1451cf-7b79-803c-983b-fa1297a848b9">기존 방식</h3> <li style="list-style-type:disc">대부분의 diffusion 모델은 해상도 256px짜리 이미지로 먼저 pre-training을 함.</li> <li style="list-style-type:disc">이유는 연산 비용(cost)을 줄이기 위해서임.</li> <h3 class="" id="1e1451cf-7b79-8058-8a3c-e9acdce89ac6">문제점</h3> <li style="list-style-type:disc">256px 이미지는 디테일(detail) 손실이 심함.</li> <li style="list-style-type:disc">따라서, 작은 해상도에서 학습을 시작하면:<li style="list-style-type:circle">모델이 fine한 구조나 텍스처를 배우기 어려움</li><li style="list-style-type:circle">결국 큰 해상도로 갈 때 더 느리게 학습함.</li></li> <hr id="1e1451cf-7b79-8027-b3fb-ee5d3d187009"/> <h3 class="" id="1e1451cf-7b79-800a-b78e-f05f748bbfbc">SANA 방식</h3> <li style="list-style-type:disc">SANA는  <strong>AE-F32C32P1 구조</strong>를 사용하기 때문에<p class="" id="1e1451cf-7b79-8073-8a98-ed24f26e3315">latent 공간이 매우 작음 → 연산 부담이 적음.</p></li> <li style="list-style-type:disc">그래서 굳이 256px에서 시작할 필요 없이 바로  <strong>512px</strong>에서 학습 시작함.</li> <li style="list-style-type:disc">학습 순서:<li style="list-style-type:circle">512px → 1024px → 2K → 4K 순서로 점진적(fine-tuning)으로 해상도를 올림.</li></li> <p class="" id="1e1451cf-7b79-80ca-b57e-d4c35d9bcd24"> </p> <p class="" id="1e6451cf-7b79-80d0-b860-dab650825d1a"> </p> <p class="" id="1e3451cf-7b79-8000-adb6-fc4a81565262"> </p> <h2 class="" id="1e1451cf-7b79-804f-9d03-e62702ab06fa">3.2 FLOW-BASED TRAINING / INFERENCE</h2> <p class="" id="1e1451cf-7b79-80fa-82f7-f963983f45e1"> </p> <h3 class="" id="1e1451cf-7b79-80ab-be37-cb2192fcc930">Flow-based Training</h3> <p class="" id="1e5451cf-7b79-804f-8779-d781983a6267">기존 방식 : noise prediction</p> <div class="column-list" id="230451cf-7b79-805a-ad56-fd46460b72cb"><div class="column" id="230451cf-7b79-80d4-8675-e0f238f1ee3a" style="width:50%"><figure class="equation" id="230451cf-7b79-8042-995d-e22fb6ec73c1"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>α</mi><mi>t</mi></msub><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>σ</mi><mi>t</mi></msub><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">x_t = \alpha_t x_0 + \sigma_t \epsilon</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">ϵ</span></span></span></span></span></div></figure></div><div class="column" id="230451cf-7b79-8012-915f-d7cb51353602" style="width:50%"><figure class="equation" id="230451cf-7b79-8026-879c-c822e5e2faee"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ϵ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon_\theta(x_t, t) = \epsilon</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></span></div></figure></div></div> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>: 원본 이미지</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></span><span>﻿</span></span>: 랜덤 노이즈</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>σ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_t, \sigma_t</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>: diffusion 과정의 하이퍼파라미터</li> <p class="" id="230451cf-7b79-8021-ab57-c5538df22571"> </p> <p class="" id="1e5451cf-7b79-80b0-898e-db75c71747be">→ 노이즈를 맞추는 것이 학습 목표</p> <p class="" id="1e5451cf-7b79-804c-82b1-ffb745ac961d"> </p> <p class="" id="1e5451cf-7b79-80ab-9f70-c8a0439c09cb">문제점 : t가 커지면 (Diffusion 마지막 단계에 가까우면) 노이즈가 커져서 예측 불안정</p> <p class="" id="1e5451cf-7b79-80cb-8a6b-df9d90b66f35"> </p> <p class="" id="1e5451cf-7b79-803f-bf2e-f524126a0398">새 방식 : EDM ,RF</p> <p class="" id="1e5451cf-7b79-80c6-9622-c597c20dfde8">noise 대신 data나 velocity(노이즈와 원본 이미지 차이) 예측</p> <p class="" id="230451cf-7b79-80e8-aeff-f4e12bdcff9e">EDM : <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_\theta(x_t, t) = x_0</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (원본 데이터 예측)</p> <p class="" id="230451cf-7b79-80ce-ae27-f7f21a6ec58f">RF : <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_\theta(x_t, t) = \epsilon - x_0</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (velocity 예측)</p> <p class="" id="230451cf-7b79-80a0-bb37-e68463f48935"> </p> <figure class="equation" id="230451cf-7b79-805e-839a-e10cfc11b775"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_\theta(x_t, t) = \epsilon - x_0</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></div></figure> <figure class="equation" id="230451cf-7b79-80e5-9d14-e9e3b00ec272"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><msub><mi>x</mi><mi>T</mi></msub><mo>−</mo><msub><mi>σ</mi><mi>T</mi></msub><mo>⋅</mo><msub><mi>v</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>T</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_0 = x_T - \sigma_T \cdot v_\theta(x_T, t_T)</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></div></figure> <p class="" id="1e5451cf-7b79-80af-97b5-d73c0e96d93b">결국 RF를 사용하여 cumulative(누적) error를 줄일 수 있음</p> <p class="" id="1e6451cf-7b79-807e-a4ea-f65080c9559c"> </p> <p class="" id="1e6451cf-7b79-80b2-bef3-c2194b8546c9"> </p> <p class="" id="1e5451cf-7b79-806c-870d-c391be81758d"> </p> <h3 class="" id="1e5451cf-7b79-8036-ba46-cbbfa2cd97b2">Flow-based Inference</h3> <p class="" id="1e5451cf-7b79-8017-a15d-d2b8eff3bc51">기존 : DPM-Solver++</p> <p class="" id="1e6451cf-7b79-803f-b892-f7f4c4a2208b">→ required 28-50 steps for high-quality samples</p> <p class="" id="1e6451cf-7b79-806e-8a45-d018707854fc"> </p> <p class="" id="1e6451cf-7b79-8015-a23d-d46d8851693a"> 현재 :  <strong>Flow-DPM-Solver</strong></p> <p class="" id="1e6451cf-7b79-8011-88e9-d7e4bc9bfb8c">1.Not predict original data, but velocity</p> <p class="" id="1e6451cf-7b79-8094-ae9d-f9050732e663">2.substituting the scaling factor αt with 1 − σt</p> <p class="" id="1e6451cf-7b79-801a-8033-fde7491c65f8">3.time-steps are redefined over the range [0, 1] instead of [1, 1000]</p> <p class="" id="1e6451cf-7b79-80cb-8be1-e320f8d3b905">→Generate high-quality samples in 14-20 steps</p> <p class="" id="1e5451cf-7b79-806a-bd87-e21ae51b6fa9"> </p> <p class="" id="1e5451cf-7b79-80e0-bd0f-f95736d6ae1c"> </p> <p class="" id="1e5451cf-7b79-80a0-9e03-d6cb39962f0d"> </p> <h1 class="" id="1e6451cf-7b79-80a9-9d46-f7c599357922">5. Experiments</h1> <h2 class="" id="1e6451cf-7b79-8054-85ef-e51382a8fb29">1. Model Details</h2> <h3 class="" id="1e6451cf-7b79-8019-aa5f-cb30db3bba2c">Sana-0.6B</h3> <li style="list-style-type:disc">파라미터 수:  <strong>590M</strong></li> <li style="list-style-type:disc">구조:  <strong>DiT-XL</strong> 및  <strong>PixArt-Σ</strong>와 거의 동일한 레이어 수와 채널 수 사용</li> <li style="list-style-type:disc">목적: 소형 모델로도 효율성과 품질을 동시에 확보</li> <h3 class="" id="1e6451cf-7b79-8099-ac27-c712a80f2758">Sana-1.6B</h3> <li style="list-style-type:disc">파라미터 수:  <strong>1.6B</strong></li> <li style="list-style-type:disc">구조:<li style="list-style-type:circle"> <strong>20개의 Transformer 레이어</strong></li><li style="list-style-type:circle">각 레이어마다  <strong>2240개의 채널</strong></li><li style="list-style-type:circle">FFN 내부 채널 수는  <strong>5600</strong></li></li> <li style="list-style-type:disc">이 구성은 학습 효율성과 생성 품질 사이의 균형을 고려한 것임</li> <p class="" id="1e6451cf-7b79-80a1-9bdc-c7840f63e9df"> </p> <h2 class="" id="1e6451cf-7b79-80eb-94d0-db1f98b81984">2. Evaluation Details</h2> <p class="" id="1e6451cf-7b79-8048-9a9a-cf8bd861ea15">SANA는 총  <strong>5가지 대표적인 평가 지표</strong>를 사용하여 성능을 평가함.</p> <table class="simple-table" id="1e6451cf-7b79-80b0-8b7a-c4f3b4a27170"><tbody><tr id="1e6451cf-7b79-8082-8e8b-ef3a667a8a5d"><td class="" id="Mhcv" style="width:266px">지표</td><td class="" id="wmxf" style="width:415px">설명</td></tr><tr id="1e6451cf-7b79-80cc-92aa-d4be06f0c402"><td class="" id="Mhcv" style="width:266px"> <strong>FID (Fréchet Inception Distance)</strong></td><td class="" id="wmxf" style="width:415px">이미지 품질을 수치로 측정. 낮을수록 좋음</td></tr><tr id="1e6451cf-7b79-807b-87e1-dfe7d1e388d7"><td class="" id="Mhcv" style="width:266px"> <strong>CLIP Score</strong></td><td class="" id="wmxf" style="width:415px">이미지와 텍스트 간 의미적 정렬 정도 평가. 높을수록 좋음</td></tr><tr id="1e6451cf-7b79-803d-8b45-c1d540707549"><td class="" id="Mhcv" style="width:266px"> <strong>GenEval</strong> (Ghosh et al., 2024)</td><td class="" id="wmxf" style="width:415px">텍스트-이미지 정렬 평가. 총 533개의 프롬프트 사용</td></tr><tr id="1e6451cf-7b79-804e-a3dd-fb860ac5b556"><td class="" id="Mhcv" style="width:266px"> <strong>DPG-Bench</strong> (Hu et al., 2024)</td><td class="" id="wmxf" style="width:415px">텍스트-이미지 정렬 정밀도 테스트. 1065개의 프롬프트 사용</td></tr><tr id="1e6451cf-7b79-80ba-861c-ec42cb02e2bf"><td class="" id="Mhcv" style="width:266px"> <strong>ImageReward</strong> (Xu et al., 2024)</td><td class="" id="wmxf" style="width:415px">인간의 주관적 선호도를 반영한 점수. 100개 프롬프트로 측정</td></tr></tbody></table> <h2 class="" id="1e6451cf-7b79-8055-96ff-f1858372d0d3">3. 평가 데이터셋</h2> <li style="list-style-type:disc"> <strong>MJHQ-30K (Li et al., 2024a)</strong><li style="list-style-type:circle">Midjourney에서 수집한  <strong>30,000개 고품질 이미지</strong> 포함</li><li style="list-style-type:circle">FID, CLIP Score 측정에 사용됨</li></li> <p class="" id="1e6451cf-7b79-8013-9261-c400f8d75156"> </p> <p class="" id="1e6451cf-7b79-807e-bffa-c3bd8d38d021"> </p> <p class="" id="1e6451cf-7b79-8073-97b9-e661905a16b8"> </p> <figure class="image" id="1e6451cf-7b79-80a1-ab7f-debea7e735cc"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%2012.webp" style="width:2106px"/></picture></figure> <p class="" id="1e6451cf-7b79-803a-aabd-d0693c398975"> </p> <figure class="image" id="1e6451cf-7b79-8068-b7bf-e8694a7eef26"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%2013.webp" style="width:2066px"/></picture></figure> <p class="" id="1e5451cf-7b79-80d7-b735-cf98c5cf027c"> </p> <h1 class="" id="1b2451cf-7b79-80c7-9286-cdd226e72d91">Limitation </h1> <div class="column-list" id="1b4451cf-7b79-8041-9a12-e857f944912f"><div class="column" id="1b4451cf-7b79-8086-b547-df4cad250355" style="width:50%"><figure class="image" id="1b4451cf-7b79-80df-8ac8-e6b0c048fdef"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-05-12-sana/image%2014.webp" style="width:384px"/></picture></figure></div><div class="column" id="1b4451cf-7b79-8029-a1b0-e5670ac40c91" style="width:50%"><p class="" id="1b4451cf-7b79-8091-be4f-e77e937baefd"><a href="https://x.com/cloneofsimo/status/1864309440356470894?s=46">https://x.com/cloneofsimo/status/1864309440356470894?s=46</a></p><p class="" id="1b4451cf-7b79-80ea-80cf-def1f0eca2b0">코드가 전반적으로 NVIDIA칩만을 위해 설계되어</p><p class="" id="1b4451cf-7b79-80d5-86d5-e8b9b61541b8">다른 GPU 장비는 물론이고,</p><p class="" id="1b4451cf-7b79-8017-b4b9-f4b9b6596a9e">Mobile Device에서는 당연히 불가능함.</p><p class="" id="1e1451cf-7b79-8060-991b-d4e643bec45e"> </p><p class="" id="1e1451cf-7b79-806a-9a6e-d51a61ba56ab">아무래도 NVIDIA에서 낸 논문이기 때문에 Blackwell chip 홍보 겸 NVIDIA chip에서만 가능하도록 한듯.</p><p class="" id="1b4451cf-7b79-8027-a7db-c8f0b55f4d83"> </p></div></div> <p class="" id="1e6451cf-7b79-80a2-b6c4-c6e8aa0fa870"> </p> <p class="" id="1e6451cf-7b79-80ea-aa53-c9c054e1998c"> </p> <p><span class="sans" style="font-size:14px;padding-top:2em"></span></p>]]></content><author><name></name></author><category term="Paper"/><category term="AI"/><summary type="html"><![CDATA[ArXivhttps://arxiv.org/abs/2410.10629Project Pagehttps://nvlabs.github.io/Sana/Github Codehttps://github.com/NVlabs/SanaAffiliationNVIDIA, MIT, Tsinghua University 💡 Key DifferentiatorEfficient Linear DiT designReLU 기반 Linear Attention 도입Mix-FFN BlockDeep Compression Autoencoder→ 이로 인한 32배 압축 가능으로 연산도 빨라짐 이번에는 SVDQuant의 저자인 Song Han이 또 일을 냈다. SANA 라는 Diffusion 모델을 NVIDIA에서 제작했는데, 역대급이다. 내가 하려던 On-device 4K Diffusion 연구에도 크게 도움될 것 같아서 읽어보았다. 1. Introduction 지난 1년동안 Diffusion 모델은 text-to-image 연구에서 상당한 진전을 보임. 하지만, 아래와 같이 상업 모델은 파라미터가 매우 커짐 → 높은 학습 및 추론 비용을 초래하여 비용이 많이 들음. Industry models are becoming increasingly large, with parameter counts escalating from PixArt’s 0.6B parameters to SD3 at 8B, LiDiT at 10B, Flux at 12B, and Playground v3 at 24B. cloud 뿐만 아니라 edge devices에서도 빠르게 실행되는 고해상도 image generator를 개발할 수 없을까? 이 논문은 1024 × 1024 ~ 4096 × 4096 범위의 해상도에서 이미지를 효율적이고 비용 효율적으로 훈련하고 합성하도록 설계된 파이프 라인 인 SANA를 제안 Pixart-σ (Chen et al., 2024a)를 제외하고는 4K 해상도 이미지 생성을 직접 탐색하지 못했습니다. 그러나 Pixart-σ는 4K 해상도에 가까운 이미지를 생성하는 것으로 제한되며 (3840 × 2160) 이러한 고해상도 이미지를 생성 할 때 비교적 느립니다. 이 야심 찬 목표를 달성하기 위해 몇 가지 핵심 디자인을 제안합니다. 2. METHODS 2.1 DEEP COMPRESSION AUTOENCODER 2.1.1 PRELIMINARY 원래 diffusion 모델은 이미지 픽셀 공간 (pixel space) 위에서 직접 작동 → 훈련, 추론 둘다 너무 느리고 무거움  Latent Diffusion Models Autoencoder로 이미지 압축 후 압축된 latent 공간 위에서 diffusion을 돌리자! → 8배 압축 사용 Pixel space: RH×W×3\mathbb{R}^{H \times W \times 3}RH×W×3﻿ Latent space: RH8×W8×C\mathbb{R}^{\frac{H}{8} \times \frac{W}{8} \times C}R8H​×8W​×C﻿여기서 CCC﻿는 latent 채널 수  Diffusion Transformer (DiT) 추가로 latent feature를 Patch 단위로 또 나눠서 처리 패치크기가 PxP 라면 최종적으로 다루는 토큰 개수는 HPF×WPF\frac{H}{PF} \times \frac{W}{PF}PFH​×PFW​ 기존 latent diffusion 모델들(PixArt, SD3, Flux 등)은 보통 다음 세팅을 씀  AE-F8C4P2 또는  AE-F8C16P2 F8: Autoencoder가 8배 압축 C4 또는  C16: latent 채널 수 (4개나 16개) P2: Patch 크기 2×2로 묶기 기존처럼 8배 압축만 하면 계산량이 여전히 너무 많음 그래서 SANA는 과감하게  32배 압축(AE-F32)하고, 패치로는 묶지 않음. 2.1.2 AUTOENCODER DESIGN PHILOSOPHY 구분기존 (PixArt, Flux)SANAAE 압축비8배 (F=8)32배 (F=32)Patchify (P=2)O (패치로 묶음)✖️ (패치 안 묶음)최종 Token 수줄였지만 아직 많음훨씬 적음 (16배 감소) 위의 표를 보면 알 수 있듯이 32배 압축하더라도 점수가 크게 떨어지지 않는 모습을 보임 2.1.3 ABLATION OF AUTOENCODER DESIGNS  어디서 압축을 더 하는 게 좋은가? (AE vs DiT) 설정설명AE-F8C16P48배 압축 + 패치 크기 4AE-F16C32P216배 압축 + 패치 크기 2AE-F32C32P132배 압축 + 패치 사용하지 않음 (SANA) AE-F32C32P1 설정이 가장 뛰어난 성능(FID, CLIP Score)을 기록 Autoencoder가 압축을 전적으로 담당하는 것이 성능 및 훈련 안정성 모두에서 가장 우수  Autoencoder latent 채널 수를 몇 개로 하는 게 좋은가? C=16, C=32, C=64 실험 수행C=16은 정보 손실로 인해 품질 저하 발생C=64는 복원 품질은 좋았으나 모델 복잡도가 급격히 증가하여 비효율적임C=32가 성능과 효율 사이에서 최적 균형을 달성함 2.2 EFFICIENT LINEAR DIT DESIGN 기존 diffusion transformer(예: DiT) 구조는  Self-Attention을 사용함. Self-Attention의 연산량은  O(N²) 에 비례함.NNN은 입력 토큰 수토큰 수가 많아지면 연산량이 급격히 커짐 4K 해상도 이미지를 다루려면, latent token 수가 많아질 수밖에 없음. → 이때, 기존 연구들은 이 문제를 해결하려고 해상도 낮추거나 Token 수를 줄였음. ReLU 기반 Linear Attention 도입 기존 Softmax 기반 Attention을 제거하고,  ReLU를 이용한 Linear Attention을 채택 Attention(Q,K,V)=softmax(QK⊤)V\mathrm{Attention}(Q, K, V) = \mathrm{softmax}(QK^\top) VAttention(Q,K,V)=softmax(QK⊤)V Softmax는 모든 Query-Token 조합을 다 계산하기 때문에 O(N²) 복잡도가 발생 SANA에서는 다음처럼 계산 구조를 변경:각 Key에 ReLU를 적용함:  ReLU(K)두 가지 공유 term을 미리 계산∑j=1NReLU(Kj)TVj\sum_{j=1}^N \mathrm{ReLU}(K_j)^T V_j∑j=1N​ReLU(Kj​)TVj​﻿ (dxd matrix)∑j=1NReLU(Kj)T\sum_{j=1}^N \mathrm{ReLU}(K_j)^T∑j=1N​ReLU(Kj​)T﻿ (d×1 vector)이후, 각 Query에 대해 이 pre-computed shared term을 재사용하여 Attention을 계산이 방식은 Query마다 개별적으로 연산할 필요가 없어서, 전체 Attention 계산이  O(N) 으로 줄어듦.  PixArt도 Linear이랬는데 다른점은? PixArt에서는 Key와 Value 토큰을 압축하여 연산량을 줄여서 Engineering Optimization으로 O(N)과 비슷하게 하는 방식, SANA에서는 아예 수학적으로 계산량이 O(N) Mix-FFN Block 기존 Transformer의 FFN (Feed-Forward Network)은 단순히 2개의 Linear Layer로 구성되어 있었음.FFN은 전역적인 정보는 잘 처리하지만,  지역적인(local) 디테일 복원에는 약했음. SANA의 해결책:기존 MLP 사이에  3×3 Depthwise Convolution을 삽입이를 통해 지역 구조(local structure) 학습을 강화결과적으로  텍스처, 경계선, 이런 세밀한 부분 복원에 유리 DiT without Positional Encoding (NoPE) 기존 Transformer 구조는 입력 순서를 인식하도록  Positional Encoding을 사용했음. 왜냐면 Transformer는 입력 순서를 구별할 수 없었기 때문에… 하지만 4K 고해상도 latent처럼 토큰 수가 많을 때, Positional Encoding을 계산하고 저장하는 데도 비용이 큼. SANA에서는 아예 Positional Encoding을 제거함  3×3 Depthwise Convolution이 Mix-FFN에 추가되어서 지역적 위치 관계를 학습할 수 있음. Linear Attention은  전역 관계를 자연스럽게 포착할 수 있음.→ 별도로 위치 정보를 부여하지 않아도 충분히 패턴과 구조를 학습할 수 있음. 결과적으로 품질이 유지되면서 구조가 간단해지고 메모리 연산량이 감소함 Triton Acceleration Training/Inference Appendix에 추가한다고 되어있는데 아직 관련 내용 없음. GPT가 알려준 내용 Linear Attention을 구현할 때, 단순히 알고리즘만 개선하는 것으로는 부족함. 실제 연산 효율까지 극대화하려면,  GPU kernel 레벨 최적화가 필요함. SANA는  Triton을 사용하여 Linear Attention 연산을 직접 최적화함.Triton은 NVIDIA가 지원하는  커스텀 GPU 커널 프로그래밍 프레임워크임.CUDA보다 단순한 문법으로, 고성능 커널을 작성할 수 있음. Triton으로 최적화한 결과: Matrix 곱 연산(GEMM)과 Memory Access를 줄임. 실제 latency(지연 시간)와 memory bandwidth 소모를 크게 개선 2.3 TEXT ENCODER DESIGN  왜 T5 대신 Decoder-only LLM을 사용하는가? SANA는 Gemma를 Text Encoder로 사용하기로 채택 항목기존 (T5)SANA (Gemma-2)모델 구조Encoder-DecoderDecoder-onlyReasoning 능력제한적매우 강함 (CoT, ICL 가능)추론 속도느림 (T5-XXL)6배 빠름 (Gemma-2-2B) → 빠른데도 불구하고, CLIP Score와 FID(이미지 품질 지표)에서는  성능이 비슷함 Decoder-only LLM을 Text Encoder로 쓰면서 생긴 문제 해결 Decoder-only LLM (Gemma, Qwen 등)의 텍스트 임베딩은 Variance가 훨씬 큼. 큰 값이 텍스트 임베딩 안에 많이 포함되어 있음. Cross-Attention 연산 중 수치 폭발(NaN)로 이어짐.  방법 1: RMSNorm 추가 Gemma-2의 텍스트 임베딩 출력에  RMSNorm을 적용 RMSNorm? 입력 벡터의 Variance를 1.0으로 정규화 큰 값이나 작은 값들을 균일하게 만들어 수치 폭발 방지  방법 2: Learnable Scale Factor 추가 추가로, 텍스트 임베딩에  학습 가능한 작은 스케일 파라미터를 곱함 초기 값은 매우 작게 설정함 (예: 0.01) 이 파라미터가 학습을 통해 적절한 크기로 조정되면서 모델 수렴 속도가 빨라짐 → 훈련 안정성 확보 + 수렴 속도 향상 Complex Human Instruction Improves Text-Image Alignment Gemma는 강력한 LLM이지만, 사용자가 짧거나 모호한 프롬프트를 입력하면 (예: "a cat") LLM이 초점을 잃고 엉뚱한 답변을 할 수도 있음. → LLM이 프롬프트에만 집중하게 만드는 추가 지시문이 필요함.  CHI가 그래서 뭔디? LLM의  In-Context Learning 능력을 활용하여 프롬프트를 주기 전에, LLM에게 "색상, 크기, 위치 관계 같은 세부 묘사를 추가해라"와 같은  복잡한 명령 세트를 함께 제공하는 것  결과 1 CHI를 적용했을 때, 학습을 처음부터 하든(fresh training)아니면 기존 모델을 미세 조정(fine-tuning)하든 텍스트-이미지 정렬 성능이 향상  결과 2 짧은 프롬프트(예: "a cat")를 입력했을 때, CHI가 없으면, 모델이 엉뚱한 이미지를 생성하거나 품질이 불안정해짐. CHI가 있으면, 모델이  프롬프트에 정확히 맞는 안정적인 이미지를 생성 3 EFFICIENT TRAINING/INFERENCE 3.1 DATA CURATION AND BLENDING 1. Multi-Caption Auto-labelling Pipeline  이미지 하나당 4개의 VLM(Vision-Language Models) 을 이용해 캡션을 생성함.  VILA-3B  VILA-13B  InternVL-28B  InternVL-26B  → 정확한 캡션 생성 (하나만 쓰는 것보다 오류 줄임)  → 다양한 표현 확보 (같은 이미지를 여러 관점에서 묘사 가능) 2. CLIP-Score-based Caption Sampler  문제 상황 캡션을 여러 개 만들었는데,훈련할 때 어떤 캡션을 선택할지가 문제임. 무작위로(random) 하나 고르면:품질이 낮은 문장을 뽑을 위험이 있음그러면 훈련이 느려지거나 모델 품질이 떨어짐  해결 방법  CLIP score를 활용해 품질 높은 캡션을 뽑는 방식 사용CLIP은 이미지-텍스트 매칭 정도를 점수로 계산해줌. 과정:이미지에 대해 생성된 각 캡션의 CLIP 점수(cic_ici)를 계산점수가 높은 캡션일수록 뽑힐 확률이 높게 설정Sampling 확률 공식:P(ci)=eci/τ∑j=1Necj/τP(c_i) = \frac{e^{c_i / \tau}}{\sum_{j=1}^N e^{c_j / \tau}}P(ci​)=∑j=1N​ecj​/τeci​/τ​ 여기 τ는 "temperature"라는 하이퍼파라미터임.  Temperature 조정으로 뽑는 강도를 조절할 수 있음:τ가 작으면: 점수 가장 높은 캡션만 거의 항상 선택τ가 크면: 다양한 캡션이 고르게 선택됨 실험 결과 Table 4 결과에 따르면:캡션을 다양하게 골라도 이미지 품질(FID)은 거의 변하지 않음하지만  훈련 중 텍스트-이미지 정렬(semantic alignment)은 훨씬 좋아짐  3. Cascade Resolution Training 기존 방식 대부분의 diffusion 모델은 해상도 256px짜리 이미지로 먼저 pre-training을 함. 이유는 연산 비용(cost)을 줄이기 위해서임. 문제점 256px 이미지는 디테일(detail) 손실이 심함. 따라서, 작은 해상도에서 학습을 시작하면:모델이 fine한 구조나 텍스처를 배우기 어려움결국 큰 해상도로 갈 때 더 느리게 학습함. SANA 방식 SANA는  AE-F32C32P1 구조를 사용하기 때문에latent 공간이 매우 작음 → 연산 부담이 적음. 그래서 굳이 256px에서 시작할 필요 없이 바로  512px에서 학습 시작함. 학습 순서:512px → 1024px → 2K → 4K 순서로 점진적(fine-tuning)으로 해상도를 올림. 3.2 FLOW-BASED TRAINING / INFERENCE Flow-based Training 기존 방식 : noise prediction xt=αtx0+σtϵx_t = \alpha_t x_0 + \sigma_t \epsilonxt​=αt​x0​+σt​ϵϵθ(xt,t)=ϵ\epsilon_\theta(x_t, t) = \epsilonϵθ​(xt​,t)=ϵ x0x_0x0​﻿: 원본 이미지 ϵ\epsilonϵ﻿: 랜덤 노이즈 αt,σt\alpha_t, \sigma_tαt​,σt​﻿: diffusion 과정의 하이퍼파라미터 → 노이즈를 맞추는 것이 학습 목표 문제점 : t가 커지면 (Diffusion 마지막 단계에 가까우면) 노이즈가 커져서 예측 불안정 새 방식 : EDM ,RF noise 대신 data나 velocity(노이즈와 원본 이미지 차이) 예측 EDM : xθ(xt,t)=x0x_\theta(x_t, t) = x_0xθ​(xt​,t)=x0​﻿ (원본 데이터 예측) RF : vθ(xt,t)=ϵ−x0v_\theta(x_t, t) = \epsilon - x_0vθ​(xt​,t)=ϵ−x0​﻿ (velocity 예측) vθ(xt,t)=ϵ−x0v_\theta(x_t, t) = \epsilon - x_0vθ​(xt​,t)=ϵ−x0​ x0=xT−σT⋅vθ(xT,tT)x_0 = x_T - \sigma_T \cdot v_\theta(x_T, t_T)x0​=xT​−σT​⋅vθ​(xT​,tT​) 결국 RF를 사용하여 cumulative(누적) error를 줄일 수 있음 Flow-based Inference 기존 : DPM-Solver++ → required 28-50 steps for high-quality samples 현재 :  Flow-DPM-Solver 1.Not predict original data, but velocity 2.substituting the scaling factor αt with 1 − σt 3.time-steps are redefined over the range [0, 1] instead of [1, 1000] →Generate high-quality samples in 14-20 steps 5. Experiments 1. Model Details Sana-0.6B 파라미터 수:  590M 구조:  DiT-XL 및  PixArt-Σ와 거의 동일한 레이어 수와 채널 수 사용 목적: 소형 모델로도 효율성과 품질을 동시에 확보 Sana-1.6B 파라미터 수:  1.6B 구조: 20개의 Transformer 레이어각 레이어마다  2240개의 채널FFN 내부 채널 수는  5600 이 구성은 학습 효율성과 생성 품질 사이의 균형을 고려한 것임 2. Evaluation Details SANA는 총  5가지 대표적인 평가 지표를 사용하여 성능을 평가함. 지표설명 FID (Fréchet Inception Distance)이미지 품질을 수치로 측정. 낮을수록 좋음 CLIP Score이미지와 텍스트 간 의미적 정렬 정도 평가. 높을수록 좋음 GenEval (Ghosh et al., 2024)텍스트-이미지 정렬 평가. 총 533개의 프롬프트 사용 DPG-Bench (Hu et al., 2024)텍스트-이미지 정렬 정밀도 테스트. 1065개의 프롬프트 사용 ImageReward (Xu et al., 2024)인간의 주관적 선호도를 반영한 점수. 100개 프롬프트로 측정 3. 평가 데이터셋  MJHQ-30K (Li et al., 2024a)Midjourney에서 수집한  30,000개 고품질 이미지 포함FID, CLIP Score 측정에 사용됨 Limitation https://x.com/cloneofsimo/status/1864309440356470894?s=46코드가 전반적으로 NVIDIA칩만을 위해 설계되어다른 GPU 장비는 물론이고,Mobile Device에서는 당연히 불가능함. 아무래도 NVIDIA에서 낸 논문이기 때문에 Blackwell chip 홍보 겸 NVIDIA chip에서만 가능하도록 한듯.]]></summary></entry><entry><title type="html">Mac 초기설정 + 유용한 프로그램</title><link href="https://hoonably.github.io/blog/mac-setting/" rel="alternate" type="text/html" title="Mac 초기설정 + 유용한 프로그램"/><published>2025-04-13T14:54:20+00:00</published><updated>2025-04-13T14:54:20+00:00</updated><id>https://hoonably.github.io/blog/mac-setting</id><content type="html" xml:base="https://hoonably.github.io/blog/mac-setting/"><![CDATA[<figure class="block-color-gray_background callout" id="1a2451cf-7b79-80f2-99b0-ce8743380395" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%">MacBook Pro 14 inch M2 Pro (2023)<br/><code>Sequoia 15.3.1</code> Version<br/>버전이 다르다면 다를 수 있음<br/>어플 내 상세 설정은 내가 선호하는 대로 기록하려고 캡쳐해두었다.<br/>어느정도 컴퓨터를 다룰 줄 아는 사람이라는 전제 하에 작성했다.<br/>(ex. Github 오픈소스니까 링크 들어가서 최신 버전 다운받기)<br/>Homebrew 등 다루는것도 있는데 궁금하면 알아서 GPT gogo</div></figure> <figure class="block-color-teal_background callout" id="230451cf-7b79-80ba-be02-f8895fb480e4" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%">모두 다 따라하기보단, 읽어보고 자신이 필요할것 같으면 따라해보자.<br/>단, ⭐️ 5개짜리는 적극 추천한다.</div></figure> <hr id="1c0451cf-7b79-805e-ad75-e047c007edeb"/> <h1 class="" id="1a3451cf-7b79-8051-a83d-e8618aca2da1">⭐️ [필독] 프로그램 다운로드 종류</h1> <p class="" id="22c451cf-7b79-8074-824f-e66108afa3e9">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="1c0451cf-7b79-8070-9d8a-f0640b53dd10">설정과 좋은 어플을 소개하기 전에 맥 기본 프로그램 다운로드 종류를 알려주겠다.</p> <p class="" id="22c451cf-7b79-8082-b3c7-c7ca8157f949"><strong>제발 모르면 이거부터 정독하자.</strong></p> <p class="" id="1c0451cf-7b79-806b-8ed9-e8c7e469bc3c"> </p> <p class="" id="1a3451cf-7b79-80fb-93cb-ffe1fbca7ff6">앱스토어로 다운은 생각보다 별로 없으니까 일단 넘기고,</p> <p class="" id="1a3451cf-7b79-801a-8f56-f1cfefd85b74">맥은 소프트웨어를 다운받았을 경우, 직접 <code>응용 프로그램</code> 폴더에 넣어줘야한다.</p> <p class="" id="1a3451cf-7b79-80e6-8bc7-f1396e401e12">프로그램별로 보통 세가지 방식이 있다.</p> <ol class="numbered-list" id="1a3451cf-7b79-8084-8f38-c15840731c8e" start="1" type="1"><li><code>.pkg</code> 파일 : 우리가 아는 평범한 설치 프로그램. <p class="" id="1a8451cf-7b79-801b-9318-f09b32807849">근데 맥에서는 은근 잘 안쓰인다.</p></li></ol> <div class="column-list" id="1a3451cf-7b79-80b8-8180-ffc4715fb5e4"><div class="column" id="1a3451cf-7b79-80f1-ac0a-e92b08f59a66" style="width:50%"><figure class="image" id="1a3451cf-7b79-80aa-8b9f-f5016da65568"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image.webp" style="width:2064px"/></picture></figure><p class="" id="1a8451cf-7b79-8008-ace8-ea57549e4c07"> </p></div><div class="column" id="1a3451cf-7b79-8040-b7c9-e464147a0c17" style="width:50%"><figure class="image" id="1a3451cf-7b79-80cb-932f-fa8871d1fb59"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%201.webp" style="width:332px"/></picture></figure></div></div> <ol class="numbered-list" id="1a3451cf-7b79-804b-9f23-cc6205b7c3d9" start="2" type="1"><li><code>.dmg</code> 파일 : 친절하게 넣도록 유도<p class="" id="1a3451cf-7b79-8016-b39e-cc070fcfb3f5">→ 다음처럼 친절하게 드래그드롭으로 넣도록 유도해준다.</p></li></ol> <div class="column-list" id="1a3451cf-7b79-8002-b8eb-d60bcaf4da49"><div class="column" id="1a3451cf-7b79-80f4-8478-ecb7405e1826" style="width:50%"><figure class="image" id="1a3451cf-7b79-8066-809f-d53ad5c623a5"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%202.webp" style="width:694.984375px"/></picture></figure></div><div class="column" id="1a3451cf-7b79-80a7-bb06-f15a5bb0ad01" style="width:50%"><figure class="image" id="1a3451cf-7b79-808e-8d52-dde009d2dded"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%203.webp" style="width:332px"/></picture></figure></div></div> <ol class="numbered-list" id="1a3451cf-7b79-807d-9d25-ca2298c279d5" start="3" type="1"><li><code>.zip</code> 파일 : 알아서 넣기<p class="" id="1a3451cf-7b79-8007-89ca-fc9bebb865a0">→ 다음과같이 zip 파일만 딸랑 있을때, 압축을 풀었는데 바로 응용 프로그램이 나온다면</p><p class="" id="1a3451cf-7b79-801e-b86a-ea98e93ff59f">→ 직접 <code>응용 프로그램</code> 폴더에 드래그드랍 해주자.</p></li></ol> <div class="column-list" id="1a3451cf-7b79-80d6-8c55-c341fa0d95b7"><div class="column" id="1a3451cf-7b79-8003-8bd1-eefa4cd6c6c0" style="width:50%"><figure class="image" id="1a3451cf-7b79-80fe-a155-d2f463769049"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%204.webp" style="width:2064px"/></picture></figure></div><div class="column" id="1a3451cf-7b79-8017-b176-fa370bc06986" style="width:50%"><figure class="image" id="1a3451cf-7b79-8088-8d48-dcfb52266dcb"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%205.webp" style="width:2064px"/></picture></figure></div></div> <p class="" id="1a3451cf-7b79-80a8-8011-c2bfd9e958db">다음과 같이 <code>응용 프로그램</code> 폴더에 들어가면 <code>LaunchPad</code>에 보인다.</p> <div class="column-list" id="1a3451cf-7b79-80bd-93d1-f9ed51a466eb"><div class="column" id="1a3451cf-7b79-808f-b0e4-ca70ee215b14" style="width:56.25%"><figure class="image" id="1a3451cf-7b79-806a-a5d8-c7278b9ab4eb"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%206.webp" style="width:2064px"/></picture></figure></div><div class="column" id="1a3451cf-7b79-80a3-8a94-d7c684f68736" style="width:43.75000000000001%"><figure class="image" id="1a3451cf-7b79-801d-b1c0-c9727d0e5907"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%207.webp" style="width:3600px"/></picture></figure></div></div> <p class="" id="1bf451cf-7b79-80c4-844e-f9574e9fd03c"> </p> <p class="" id="1bf451cf-7b79-80dc-ad59-d4c5dcb016aa"> </p> <hr id="1bf451cf-7b79-80b6-b244-fe1e34e59352"/> <p class="" id="1bf451cf-7b79-8086-b8e8-e9b559e6c8dd"> </p> <p class="" id="1bf451cf-7b79-802e-99d6-eae4529c9bf5"> </p> <h1 class="" id="1a2451cf-7b79-80f7-8a61-f5205f5394ec">⬇️ Software Update</h1> <p class="" id="1a2451cf-7b79-800e-bccc-f24b38974eba">업데이트 일부러 안하는 사람도 있는데, 개인적으로는 추천한다.</p> <p class="" id="1a3451cf-7b79-804d-83b0-cb64445fdf63">계속 안하고 버티면 안돌아가는 어플들이 꽤 있다.</p> <p class="" id="22c451cf-7b79-8078-86df-f63aeecbf424">그리고 마이그레이션 하려면 양쪽 다 이거 최신으로 업데이트 해줘야한다.</p> <p class="" id="1a4451cf-7b79-8091-8d1f-e06be342ce89">오래걸릴 수 있으니 미리 다운로드 시작하고 아래 진행</p> <figure class="image" id="1a2451cf-7b79-80c2-8330-d86c90e22040"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%208.webp" style="width:576px"/></picture></figure> <p class="" id="1bf451cf-7b79-80d4-9af2-d17e7407e638"> </p> <p class="" id="1bf451cf-7b79-8073-9e1f-f468926d9857"> </p> <hr id="1bf451cf-7b79-80be-bf68-e1ba03596f32"/> <p class="" id="1bf451cf-7b79-80c6-9f7b-d1cd25ed8aba"> </p> <p class="" id="1bf451cf-7b79-80d1-adc9-e7ee17ad20dd"> </p> <h1 class="" id="1a2451cf-7b79-80f1-b2d8-c804e3c9734c">⚙️ 설정</h1> <p class="" id="22c451cf-7b79-8069-877a-f24e2c6be45f">⭐️⭐️</p> <ul class="bulleted-list" id="1a2451cf-7b79-80d6-8510-fe648da74011"><li style="list-style-type:disc">Apple Login<p class="" id="1c0451cf-7b79-8028-9a95-e3ee78872da3">이거부터 하고 시작하자.</p></li></ul> <figure class="image" id="1a2451cf-7b79-8022-84e3-fc091ea69518"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2025-02-22_%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE_5.44.03.webp" style="width:576px"/></picture></figure> <ul class="bulleted-list" id="1a2451cf-7b79-80a2-bfa9-cd49daaf746e"><li style="list-style-type:disc">시동음 제거<p class="" id="1c0451cf-7b79-8080-8f28-cb5cfe09dca6">노트북 켰을때 이거 안해놓으면 밖에서 관종처럼 시끄럽게 킬 수 있다.</p></li></ul> <figure class="image" id="1a2451cf-7b79-80e9-ad2f-ee450d083355"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%209.webp" style="width:576px"/></picture></figure> <ul class="bulleted-list" id="1a2451cf-7b79-801f-96a9-c6bcb64a1984"><li style="list-style-type:disc">키보드 → 키보드 단축키<p class="" id="1c0451cf-7b79-807a-bad4-cb6f176a31dd">이건 내 나름대로 선호하는 설정이다.</p></li></ul> <div class="column-list" id="1a2451cf-7b79-804a-b822-d4c8330440ee"><div class="column" id="1a2451cf-7b79-80f7-b68f-d57ccf53844f" style="width:50%"><figure class="image" id="1a2451cf-7b79-8044-9ba4-ebe91af51fbf"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2010.webp" style="width:709.9921875px"/></picture></figure><figure class="image" id="1a2451cf-7b79-80af-aed2-fb62005fefc1"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2011.webp" style="width:332px"/></picture></figure></div><div class="column" id="1a2451cf-7b79-80c7-8dd1-c8fb0a441299" style="width:50%"><figure class="image" id="1a2451cf-7b79-80be-8771-d844332860f9"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2012.webp" style="width:332px"/></picture></figure><p class="" id="1a2451cf-7b79-8095-9cec-fb39af82737e"> </p></div></div> <ul class="bulleted-list" id="1a2451cf-7b79-8075-8594-ddfc3c848dbb"><li style="list-style-type:disc">핫 코너 단축키<p class="" id="1c0451cf-7b79-80a3-b87d-dcc4ffde2a3a">마우스로 코너를 찍어서 Mission Control이나 데스크탑 보기를 할 수 있는데, 정말 유용하다.</p></li></ul> <figure class="image" id="1a2451cf-7b79-80bc-967b-c78f6882c080"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2013.webp" style="width:576px"/></picture></figure> <ul class="bulleted-list" id="1c0451cf-7b79-80c2-9363-fd45784ef876"><li style="list-style-type:disc">앱스토어 암호 없이 다운로드<p class="" id="1c0451cf-7b79-8023-996b-e456680cd939">이 과정을 해줘야 앱스토어에서 앱 설치시 귀찮게 자꾸 암호를 입력하는 일이 없다.</p><p class="" id="1c0451cf-7b79-80d9-a7b3-c3b4d1f1f390">미디어 및 구입 항목 → 무료 다운로드 → 입력 안함</p></li></ul> <figure class="image" id="1c0451cf-7b79-80cf-b250-e56fce1fe463"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2014.webp" style="width:576px"/></picture></figure> <ul class="bulleted-list" id="1c0451cf-7b79-80f1-9fcb-c2ad77dccb8e"><li style="list-style-type:disc"><strong>문서(PDF) 탭으로 열기</strong><p class="" id="1c0451cf-7b79-805e-9395-c5d7eb2db65b">PDF를 열때 윈도우는 자동으로 하나의 창에 여러 탭으로 열리는데,</p><p class="" id="1c0451cf-7b79-801a-9d4f-ee4c3693d8e7">맥은 이 설정을 안해주면 각각 다른 창으로 열린다.</p><figure class="image" id="196451cf-7b79-8085-9067-f522805b09a9"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2015.webp" style="width:624px"/></picture></figure></li></ul> <p class="" id="196451cf-7b79-80cd-9b67-ff811b257da6"> </p> <p class="" id="1bf451cf-7b79-8069-8a2a-fe87c30e81cb"> </p> <hr id="1bf451cf-7b79-80b5-aea6-feef3e84693a"/> <p class="" id="1bf451cf-7b79-80fb-b28c-cebdc3d5313a"> </p> <p class="" id="1bf451cf-7b79-8078-b68f-c47961a34a6f"> </p> <h1 class="" id="1a2451cf-7b79-80dd-b703-f09ca76267c8">🖱️ Scroll Reverser 설치</h1> <p class="" id="22c451cf-7b79-8001-9fdd-e5cee702af57">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="22c451cf-7b79-8073-b0d2-c9b2cec07c7c"> </p> <p class="" id="22c451cf-7b79-80c5-8fe5-edfac9ad62fd">맥 쓰면 마우스 휠이 반대인데, 이게 은근 불편하다.</p> <p class="" id="22c451cf-7b79-806f-b4cd-f9ecf8be6da3">나만 적응하면 끝이다 싶을 수 있는데,</p> <p class="" id="22c451cf-7b79-806f-8a8a-d10b60fce21b">남이 내 맥을 잠깐 만지거나, 내가 오랜만에 윈도우 쓸 일 있으면 자꾸 헷갈린다.</p> <p class="" id="22c451cf-7b79-80a6-a542-ea13d2a2d765"> </p> <p class="" id="1a2451cf-7b79-80ff-86da-c1fbd3695f06">트랙패드 스크롤은 그대로 두고 마우스 휠만 반전시켜서 윈도우랑 일치하도록 할 수 있음</p> <p class="" id="1a2451cf-7b79-8039-a2fb-cf9221182812">Mac 소프트웨어 버전 낮으면 실행 안됨 13.xx 에서 안됐음</p> <p class="" id="1a2451cf-7b79-803e-980f-e966dcded30b"><a href="https://pilotmoon.com/scrollreverser/">https://pilotmoon.com/scrollreverser/</a></p> <div class="column-list" id="1a2451cf-7b79-80c1-be74-f5a1269e84ed"><div class="column" id="1a2451cf-7b79-80e1-908d-d32330ee102d" style="width:50%"><figure class="image" id="1a2451cf-7b79-8080-8acd-c038d965d124"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2016.webp" style="width:710px"/></picture></figure></div><div class="column" id="1a2451cf-7b79-804d-b977-c629f3aceb21" style="width:50%"><figure class="image" id="1a2451cf-7b79-808d-96fb-e606856e15a5"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2017.webp" style="width:332px"/></picture></figure></div></div> <p class="" id="1bf451cf-7b79-809b-bc0e-e94c0ef78c4e"> </p> <p class="" id="1bf451cf-7b79-800c-8621-ec3749df570e"> </p> <hr id="1bf451cf-7b79-8088-a4c8-f1d9c0489a46"/> <p class="" id="1bf451cf-7b79-8046-aa7d-fdf00f77f275"> </p> <p class="" id="1bf451cf-7b79-8021-b968-c622e77086dc"> </p> <h1 class="" id="1a2451cf-7b79-80dd-9aa7-e4877b2710f8"> ⌨️ 우command → 한영키로</h1> <p class="" id="22c451cf-7b79-80f9-b720-ed81bf297cb4">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="22c451cf-7b79-807a-8c30-fc5759a71231"> </p> <p class="" id="22c451cf-7b79-8044-9236-dba54578bd3d">맥 쓰면 capslock 자리에 있는 한영키 적응해야하는데, 불편하다.</p> <p class="" id="22c451cf-7b79-8025-a57f-f8a4535b950c">나만 적응하면 끝이다 싶을 수 있는데,</p> <p class="" id="22c451cf-7b79-8046-8848-f1cd1f6cbe88">남이 내 맥을 잠깐 만지거나, 내가 오랜만에 윈도우 쓸 일 있으면 자꾸 헷갈린다.</p> <p class="" id="22c451cf-7b79-8099-b8bf-c540dc217ce1">오른쪽 command를 한영키로 바꾸면 서로 편하고 좋다.</p> <p class="" id="22c451cf-7b79-805d-b3f7-c16e56282824"> </p> <ul class="bulleted-list" id="1a2451cf-7b79-8026-bb59-e8d49073ffbd"><li style="list-style-type:disc">Karabiner 버전에 맞게 다운로드<p class="" id="1a2451cf-7b79-8038-9ee4-e35dcf380f51"><a href="https://karabiner-elements.pqrs.org/">https://karabiner-elements.pqrs.org/</a></p></li></ul> <ul class="bulleted-list" id="1a2451cf-7b79-80d7-9957-e10892fc6fc3"><li style="list-style-type:disc">여러 권한 부여 작업</li></ul> <div class="column-list" id="1a2451cf-7b79-8078-9fc4-fb776f3e9b66"><div class="column" id="1a2451cf-7b79-80a2-8b04-ed9b39372932" style="width:50%"><figure class="image" id="1a2451cf-7b79-805c-b74f-c39fce4f164f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2018.webp" style="width:432px"/></picture></figure></div><div class="column" id="1a2451cf-7b79-8059-b300-fa9731f6a7f0" style="width:50%"><figure class="image" id="1a2451cf-7b79-8024-b188-dab18008dc8c"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2019.webp" style="width:332px"/></picture></figure></div></div> <ul class="bulleted-list" id="1a2451cf-7b79-8032-9f2e-d9ada035e265"><li style="list-style-type:disc">다음과 같이 설정</li></ul> <figure class="image" id="1a2451cf-7b79-808c-8a32-ce4e4fe889cf"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2020.webp" style="width:2px"/></picture></figure> <figure class="image" id="1a2451cf-7b79-80f1-acb8-cd0064007c71"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2021.webp" style="width:2px"/></picture></figure> <ul class="block-color-orange_background bulleted-list" id="1a8451cf-7b79-808a-9a46-ff78625fdf02"><li style="list-style-type:disc">참고로 몇몇 키보드는 바로 허용이 안되서 직접 Device에 들어가서 <code>Modify events</code> 해줘야함!!<figure class="image" id="1a8451cf-7b79-80c2-9acf-eb2ae0c6c3bb"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2022.webp" style="width:2424px"/></picture></figure></li></ul> <ul class="bulleted-list" id="1a2451cf-7b79-804e-a641-f673edc44553"><li style="list-style-type:disc">설정 → 키보드 → 키보드 단축키</li></ul> <div class="column-list" id="1a2451cf-7b79-8006-ab4e-e58a986f01de"><div class="column" id="1a2451cf-7b79-8070-85fb-c5c381ce1e26" style="width:50%"><figure class="image" id="1a2451cf-7b79-809d-a0a6-ccc95fadc897"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2023.webp" style="width:709.9921875px"/></picture><figcaption><code>F18</code> 하는 방법 : 위에서 설정했던 <code>우커맨드</code> 누르면 됨</figcaption></figure><p class="" id="1a5451cf-7b79-808c-a968-d73e4f98000d"> </p></div><div class="column" id="1a2451cf-7b79-80b7-8511-efb19f6a7d18" style="width:50%"><figure class="image" id="1a2451cf-7b79-80b8-837a-de6775e34e2d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2024.webp" style="width:332px"/></picture></figure><p class="" id="1a2451cf-7b79-80f4-bd5e-e00ab84f74d5"> </p></div></div> <ul class="bulleted-list" id="1a2451cf-7b79-80a0-8da9-e0d5eb01054d"><li style="list-style-type:disc">키보드 → 입력 소스 → 편집</li></ul> <p class="" id="1a2451cf-7b79-808c-a236-f224f2080c88">한영키 우커맨드로만 쓸거면 캡스락 자리를 Caps Lock 쓸 수 있음</p> <figure class="image" id="1a2451cf-7b79-80c9-aaa0-dc493c2439e2"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2025.webp" style="width:709.9921875px"/></picture></figure> <h1 class="" id="1a2451cf-7b79-800c-8a53-ea0966ebf9d6">📁 Finder</h1> <p class="" id="22c451cf-7b79-8092-b745-c792dffffc94">⭐️⭐️⭐️</p> <ul class="bulleted-list" id="1a2451cf-7b79-80b5-b3f9-cd814e27f61d"><li style="list-style-type:disc">도구 막대 사용자화</li></ul> <figure class="image" id="1a2451cf-7b79-8013-8049-f4dfba02887e"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2026.webp" style="width:624px"/></picture></figure> <div class="column-list" id="1a2451cf-7b79-80db-a0d7-fe7861ab387a"><div class="column" id="1a2451cf-7b79-800f-bf11-cdd8922ade65" style="width:37.5%"><figure class="image" id="1a2451cf-7b79-80bc-81be-d764dc0dc400"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2027.webp" style="width:709.9921875px"/></picture></figure></div><div class="column" id="1a2451cf-7b79-805f-9738-eed858bd5daa" style="width:62.5%"><figure class="image" id="1a2451cf-7b79-8082-b6cd-eb4c1651a569"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2028.webp" style="width:331.9921875px"/></picture></figure></div></div> <div class="column-list" id="230451cf-7b79-8018-94fd-d4073a1a947f"><div class="column" id="230451cf-7b79-80a4-81d8-f1e1d31b7f6a" style="width:31.25%"><figure class="image" id="1a2451cf-7b79-80c9-9c09-edc5ecec788a"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2029.webp" style="width:240px"/></picture></figure></div><div class="column" id="230451cf-7b79-80b8-858a-c47c7e8a0467" style="width:68.75%"><ul class="bulleted-list" id="1a2451cf-7b79-8067-884e-f1f4eef87a52"><li style="list-style-type:disc">경로 막대 보기, 상태막대 보기로 변경 → 아래 경로랑 용량 나옴</li></ul><p class="" id="1a2451cf-7b79-8000-ad89-ebea0a72f5e7">왼쪽 위의 메뉴바에 보기 누르면 저렇게 나옴</p></div></div> <div class="column-list" id="230451cf-7b79-8077-867b-f2b4cf3a3de4"><div class="column" id="230451cf-7b79-804d-af4e-cecd8ad79815" style="width:31.25%"><figure class="image" id="1a2451cf-7b79-807d-8998-f2a2c3b7876f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2030.webp" style="width:192px"/></picture></figure></div><div class="column" id="230451cf-7b79-80c2-8329-edcfe031d245" style="width:68.75%"><ul class="bulleted-list" id="1a2451cf-7b79-80a7-88ab-d61ccca3cb6a"><li style="list-style-type:disc">항상 자동으로 정렬</li></ul><p class="" id="1a2451cf-7b79-80a7-a439-f3be7700deb3">우클릭 → 보기 옵션 → 정렬 → 이름 등 원하는 걸로</p><p class="" id="1a2451cf-7b79-8041-adcd-c6fb14e233ec">→ 아래 <code>기본값으로 사용</code> 누르기</p><p class="" id="230451cf-7b79-8008-bf0c-f9d085116102"> </p><p class="" id="230451cf-7b79-80f1-8c07-deb0b8200c80"> </p></div></div> <ul class="bulleted-list" id="1bf451cf-7b79-80d2-8b73-f9576a4d400e"><li style="list-style-type:disc">파인더에서 단축키로 바로 그 경로의 터미널 열기 (컴공이면 Good)</li></ul> <figure class="image" id="1c6451cf-7b79-8021-9daa-ff4e002f37a7"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2031.webp" style="width:528px"/></picture></figure> <figure class="image" id="1c6451cf-7b79-8013-aba4-ff0286374d5d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2032.webp" style="width:528px"/></picture></figure> <p class="" id="1c6451cf-7b79-8064-bc86-ea32a923d9c1">반드시 먼저 설정한 항목을 글자 그래도 옮겨적어야한다.</p> <pre><code class="language-plain">폴더에서 새로운 터미널 탭 열기
</code></pre> <div class="column-list" id="1c6451cf-7b79-8075-a4cc-dd707f1d6f80"><div class="column" id="1c6451cf-7b79-80c2-a0b4-d9359845fa25" style="width:50%"><figure class="image" id="1c6451cf-7b79-8000-8011-c4721eef7d28"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2033.webp" style="width:2064px"/></picture></figure></div><div class="column" id="1c6451cf-7b79-801a-b5fe-f2f1ed919470" style="width:50%"><figure class="image" id="1c6451cf-7b79-800d-bad3-cceb388a09f2"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2034.webp" style="width:709.9921875px"/></picture></figure></div></div> <p class="" id="1c6451cf-7b79-80bf-a2e9-d62854ae44b4">위처럼 폴더를 누른 후 설정한 단축어를 사용하면 바로 터미널이 열린다.</p> <p class="" id="1c6451cf-7b79-803c-a82b-f6899b6c77f4"> </p> <p class="" id="1c6451cf-7b79-8046-ad91-f2eacb014582"> </p> <p class="" id="1c6451cf-7b79-8004-8e13-d6f922cea525"> </p> <hr id="1bf451cf-7b79-80dd-b578-c5afa1bba061"/> <p class="" id="1bf451cf-7b79-80f7-a2ec-d8e8eb568c42"> </p> <p class="" id="1bf451cf-7b79-803d-81e0-e21d54f21f79"> </p> <h1 class="" id="1a2451cf-7b79-805b-a23f-c85a7a56ced3">⬛️ Rectangle</h1> <p class="" id="22c451cf-7b79-80a2-ac8f-f149f89de114">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="1a3451cf-7b79-8026-85a8-d355bbb1489b">맥 소프트웨어 업데이트하면서 기본 설정에서도 있는데, 이 어플이 더 최적화가 부드럽고 기능이 많음</p> <p class="" id="1a2451cf-7b79-80c6-9fe7-f42c78633d80"><a href="https://rectangleapp.com/">https://rectangleapp.com/</a></p> <figure class="image" id="1a2451cf-7b79-80c0-84d1-f985e032fdc1"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2035.webp" style="width:709.984375px"/></picture></figure> <div class="column-list" id="1a2451cf-7b79-80fa-bcc7-cdeaf081f100"><div class="column" id="1a2451cf-7b79-803f-9ee4-e07a3997ad5e" style="width:62.5%"><figure class="image" id="1a2451cf-7b79-80b6-bd4f-dc21a2d72c4d"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2036.webp" style="width:415px"/></picture></figure></div><div class="column" id="1a2451cf-7b79-80c1-b2c9-f118e4ae5469" style="width:37.5%"><figure class="image" id="1a2451cf-7b79-8061-a3e2-d16de39b5497"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2037.webp" style="width:709.9921875px"/></picture></figure></div></div> <p class="" id="1bf451cf-7b79-8014-8334-c65c2bf9fc6b"> </p> <p class="" id="1bf451cf-7b79-80c5-a168-d744d11d29df"> </p> <hr id="1bf451cf-7b79-80b0-81a1-f963e88628cf"/> <p class="" id="1bf451cf-7b79-802a-b9df-e8034a69535f"> </p> <p class="" id="1bf451cf-7b79-80e1-8edb-e6102c923b5d"> </p> <h1 class="" id="1a2451cf-7b79-80ef-9d7a-d4b5e4820a2d">⌨️ KeyBoardCleanTool</h1> <p class="" id="22c451cf-7b79-80fa-85c6-c6b24fcc8064">⭐️⭐️</p> <p class="" id="1a2451cf-7b79-80ab-a2aa-df23178003fd">맥북은 키보드를 누르기만 하면 노트북을 꺼도 노트북이 켜져버리기 때문에 키보드 청소하기가 불편하다.</p> <p class="" id="1a2451cf-7b79-8032-8648-f3ca3daad314">키보드를 아예 꺼버리고 물티슈 등으로 청소할 수 있다.</p> <p class="" id="1a2451cf-7b79-807b-9588-d9460457b893">(전원키는 이거 실행해도 눌리는듯 하니까 조심)</p> <p class="" id="1a2451cf-7b79-80ab-8d38-ec83802425fa"><a href="https://folivora.ai/keyboardcleantool">https://folivora.ai/keyboardcleantool</a></p> <p class="" id="1a2451cf-7b79-80e1-a60b-d7d3875e3e0e">다운로드 후 압축풀면 바로 어플리케이션인데, 경로를 ‘응용 프로그램’으로 옮겨주면 된다.</p> <figure class="image" id="1a2451cf-7b79-8031-9564-eaa7e1d5e96f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2038.webp" style="width:624px"/></picture></figure> <p class="" id="1bf451cf-7b79-804d-9cf7-e54241d8d27b"> </p> <p class="" id="1bf451cf-7b79-8040-a40f-c5cb1c69d058"> </p> <hr id="1bf451cf-7b79-80bf-9dac-d2d29faa0ed2"/> <p class="" id="1bf451cf-7b79-8089-b29b-c10ac897844e"> </p> <p class="" id="1bf451cf-7b79-80c7-b43a-f7bd6d0e294b"> </p> <h1 class="" id="1a2451cf-7b79-80f4-a74f-f3846456f8e9">🐨 Grey</h1> <p class="" id="22c451cf-7b79-80d3-a962-efc7477a33d5">⭐️</p> <p class="" id="1a3451cf-7b79-806d-9d64-c9014e912b30">어플들은 대부분 기본 설정으로 시스템이 다크모드면 다크모드를 따라가도록 되어있고, 설정에서 라이트/다크 모드를 고정할 수도 있다.</p> <figure class="image" id="1a3451cf-7b79-80cf-a1be-fe93aeff9823"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2039.webp" style="width:710px"/></picture></figure> <p class="" id="1a3451cf-7b79-8011-80b9-d69a514d0b65">하지만, 인기가 없는 앱은 무조건 시스템 설정을 따라가는 경우가 있다. (ex. QTSpim)</p> <p class="" id="1a3451cf-7b79-8006-9b5d-c9f5bef6eb09">컴구 과제때문에 QTSpim을 깔아서 하는데, 다크모드를 항상 쓰는 나에게는 코드 보기가 눈이 너무 아팠고, 이거 하나때문에 다크모드를 끄자니 싫었다.</p> <p class="" id="1a3451cf-7b79-80a8-a59f-dc157189d574"> </p> <p class="" id="1a3451cf-7b79-8037-824a-e95cff5407ec">이를 해결하는 각 어플마다 시스템 설정을 다르게 설정해주는 어플이다.</p> <ul class="bulleted-list" id="1a3451cf-7b79-8029-93dd-feca26083bf7"><li style="list-style-type:disc">다운로드</li></ul> <p class="" id="1a3451cf-7b79-80ae-beda-d8930646b821"><a href="https://github.com/zenangst/Gray?tab=readme-ov-file">https://github.com/zenangst/Gray?tab=readme-ov-file</a></p> <p class="" id="1bf451cf-7b79-8001-b180-fd253b2c4aa4"> </p> <p class="" id="1bf451cf-7b79-80f3-9fe2-f5920e1a571a"> </p> <hr id="1bf451cf-7b79-8048-a319-ee10ac5224c7"/> <p class="" id="1bf451cf-7b79-807a-9840-f7327ea2e0ea"> </p> <p class="" id="1bf451cf-7b79-8050-a5f0-d6414fda280e"> </p> <h1 class="" id="1a3451cf-7b79-80f1-b858-ff4f4b2ee061">🧹 AppCleaner</h1> <p class="" id="22c451cf-7b79-80a5-b905-cef7c7e78820">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="1a3451cf-7b79-808c-ace0-cbf6c3eadac5">앱만 드래그로 지우면 앱 파일을 자동으로 못지우는 경우가 많아 많은 용량을 차지할 수 있다. </p> <p class="" id="22c451cf-7b79-80c1-bec7-e0789cd22433">자동으로 찾아서 지우도록 도와주는 어플</p> <p class="" id="22c451cf-7b79-80d1-adba-cfcab5e08091">앱 지우는 법 : application 폴더에서 휴지통으로 드래그해서 넣으면 됨</p> <p class="" id="22c451cf-7b79-8000-a9b8-cef393c2b357">이 어플 굳이 킬 필요 없이 설치만 되어있으면 위 방법대로 휴지통에 삭제하면 알아서 팝업 뜨면서 지울거냐고 물어보니까 간편하다.</p> <p class="" id="1a3451cf-7b79-8050-8401-e6f774a314b2"><a href="https://freemacsoft.net/appcleaner/">https://freemacsoft.net/appcleaner/</a></p> <p class="" id="1bf451cf-7b79-8028-83e7-fb8528a104f3"> </p> <p class="" id="1bf451cf-7b79-801f-9bfe-fad08a08df1c"> </p> <hr id="1bf451cf-7b79-80b6-9be5-d78fb610150c"/> <p class="" id="1bf451cf-7b79-80e2-b777-c7a6acd32719"> </p> <p class="" id="1bf451cf-7b79-802f-98b7-d07e757e3e34"> </p> <h1 class="" id="1a4451cf-7b79-8011-a0a2-faf1ea7d2f82">🔋 AlDente</h1> <p class="" id="22c451cf-7b79-8001-bf20-ebf0b94b181b">⭐️⭐️</p> <p class="" id="1a4451cf-7b79-8097-97b4-f3839082bfdd">맥북 필수 배터리 관리 앱</p> <p class="" id="22c451cf-7b79-808b-953a-f0543ddc1d23">충전기를 꽂아놔도 알아서 지정한 한도까지만 충전하고, 딱 사용하는 전력만큼만 충전기에서 받아온다.</p> <p class="" id="22c451cf-7b79-80d1-9618-e3de558c7a6e">만약 외출 전이라 100% 까지 충전하고 싶다면 충전 버튼 한번 누르면 된다.</p> <p class="" id="1a4451cf-7b79-8089-94c9-dce13c4ef6bf"><a href="https://apphousekitchen.com/">https://apphousekitchen.com/</a></p> <p class="" id="1a4451cf-7b79-8041-b8e9-fa081351a4c4">난 클램쉘로 쓰니까 편하게 하려고 결제도 하고 사용중</p> <div class="column-list" id="1a4451cf-7b79-80a9-93b2-d16927c6c79d"><div class="column" id="1a4451cf-7b79-803f-98b3-e652c48937a2" style="width:56.25%"><figure class="image" id="1a4451cf-7b79-80e7-87f1-c3075a862910"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2040.webp" style="width:709.9921875px"/></picture></figure><p class="" id="1bf451cf-7b79-8051-a689-d9708d30257a"> </p></div><div class="column" id="1a4451cf-7b79-805e-8cea-eb390d5f3b23" style="width:43.75%"><figure class="image" id="1a4451cf-7b79-809d-a80e-d4e98b4b9e3f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2041.webp" style="width:709.9921875px"/></picture></figure></div></div> <p class="" id="1bf451cf-7b79-80e4-a0ae-c98a1d020302"> </p> <p class="" id="1bf451cf-7b79-805c-9db1-f0e611939db6"> </p> <hr id="1bf451cf-7b79-80f9-89e0-eb1b940485b4"/> <p class="" id="1bf451cf-7b79-8026-9ca7-df3a853f2a3e"> </p> <p class="" id="1bf451cf-7b79-8096-b022-ddd2a107948b"> </p> <h1 class="" id="1a4451cf-7b79-803b-ba6f-e1e298faa2b3">💊 Amphetamine</h1> <ul class="bulleted-list" id="1a4451cf-7b79-80cc-b8f1-d06e8fbbc8bc"><li style="list-style-type:disc">Download</li></ul> <p class="" id="1a4451cf-7b79-8084-8eaf-fc4eeb16d2c2"><a href="https://apps.apple.com/kr/app/amphetamine/id937984704?mt=12">https://apps.apple.com/kr/app/amphetamine/id937984704?mt=12</a></p> <ul class="bulleted-list" id="1a4451cf-7b79-80e3-8352-fa12f653e351"><li style="list-style-type:disc">Power Protect</li></ul> <p class="" id="1a4451cf-7b79-8096-83ee-c5cd9acbbecd"><a href="https://x74353.github.io/Amphetamine-Power-Protect/">https://x74353.github.io/Amphetamine-Power-Protect/</a></p> <ul class="bulleted-list" id="1a4451cf-7b79-80ed-b144-d04b261846f5"><li style="list-style-type:disc">위 링크에서 Power Protect도 설치</li></ul> <ul class="bulleted-list" id="1a4451cf-7b79-8007-abce-d349aa403c63"><li style="list-style-type:disc">설치 후 암호 입력 없이 가능하도록 실행</li></ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>pmset <span class="nt">-a</span> disablesleep 1
</code></pre></div></div> <ul class="bulleted-list" id="1a4451cf-7b79-8003-ab2c-ed140dc8b32a"><li style="list-style-type:disc">비활성화한다면?</li></ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>pmset <span class="nt">-a</span> disablesleep 0
</code></pre></div></div> <p class="" id="1bf451cf-7b79-8051-a8b6-e52190a2d352"> </p> <p class="" id="1bf451cf-7b79-8046-8c9d-e856ac22ec36"> </p> <hr id="1bf451cf-7b79-8049-bcc4-e2e9d90d12da"/> <p class="" id="1bf451cf-7b79-806e-bfed-e608af638138"> </p> <p class="" id="1bf451cf-7b79-80a7-92a9-dc2a53acbe4a"> </p> <h1 class="" id="1a3451cf-7b79-80dd-928c-e732e5d8774a">🖥️ MonitorControl</h1> <p class="" id="22c451cf-7b79-80cb-a331-db174a23fc7b">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="1a4451cf-7b79-80f1-88bd-c878f7573369">외장모니터의 밝기를 편하게 컨트롤 하는 툴</p> <p class="" id="1a4451cf-7b79-8070-bf00-fad09980b0b7">외장 모니터들이 보통 밝기를 직접 모니터 버튼 눌러서 설정해야하는데, 이걸 가능하게 해줌</p> <p class="" id="1c0451cf-7b79-809f-966d-df2e0cd7e86b"><strong>외장 모니터 있으면 있으면 무조건 쓰는거 강추!</strong></p> <div class="column-list" id="1a4451cf-7b79-80c6-b840-e3f4c3666856"><div class="column" id="1a4451cf-7b79-80e7-8d92-def312120866" style="width:50%"><ul class="bulleted-list" id="1a4451cf-7b79-8014-9a4f-d99ece317c9a"><li style="list-style-type:disc">기존 모니터 설정→ 직접 컨트롤 불가능.</li></ul><figure class="image" id="1a4451cf-7b79-80e6-ad22-fd3b9849a649"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2042.webp" style="width:331.9921875px"/></picture></figure></div><div class="column" id="1a4451cf-7b79-80d6-bc7d-d810c1cd4d4b" style="width:50%"><ul class="bulleted-list" id="1a4451cf-7b79-8027-8936-f10103c771e1"><li style="list-style-type:disc">직접 컨트롤 가능 + 키보드로도 가능</li></ul><figure class="image" id="1a4451cf-7b79-809e-910e-ec53ddeb303f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2043.webp" style="width:331.9921875px"/></picture></figure></div></div> <ul class="bulleted-list" id="1a4451cf-7b79-80c0-ae5d-e44282c0374d"><li style="list-style-type:disc">Homebrew 통해 설치</li></ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install</span> <span class="nt">--cask</span> monitorcontrol
</code></pre></div></div> <ul class="bulleted-list" id="1a4451cf-7b79-80ec-a8c7-fe72b94ef4b2"><li style="list-style-type:disc">웹으로 설치<p class="" id="1a4451cf-7b79-80fb-9b19-eba0487b6776"><a href="https://github.com/MonitorControl/MonitorControl/releases">https://github.com/MonitorControl/MonitorControl/releases</a> 에서 최신버전 dmg 파일 다운로드</p></li></ul> <div class="column-list" id="1a4451cf-7b79-80cb-b690-c871d83431c1"><div class="column" id="1a4451cf-7b79-80f3-8e26-c3b638359117" style="width:50%"><figure class="image" id="1a4451cf-7b79-8085-9da7-e744a0daa3fd"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2044.webp" style="width:709.984375px"/></picture></figure></div><div class="column" id="1a4451cf-7b79-80a1-a50d-cbb0ebd96b22" style="width:50%"><figure class="image" id="1a4451cf-7b79-8007-86ff-f96fbd8beffe"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2045.webp" style="width:709.9921875px"/></picture></figure></div></div> <p class="" id="1bf451cf-7b79-80b1-94f0-ddd9780c6da7"> </p> <p class="" id="1bf451cf-7b79-80b4-842c-e559478d11d1"> </p> <hr id="1bf451cf-7b79-80aa-beb9-c483884b8ab6"/> <p class="" id="1bf451cf-7b79-8033-a6de-d1967b3aefb4"> </p> <p class="" id="1bf451cf-7b79-80fa-8c59-d1516f6d0989"> </p> <h1 class="" id="1a3451cf-7b79-807c-8aa3-d94c5f6821d9">📎 Maccy</h1> <p class="" id="22c451cf-7b79-80ca-9808-c946d0b4756f">⭐️</p> <p class="" id="1a3451cf-7b79-80d1-b8d2-f18dc9c07c96">클립보드를 여러개 할 수 있고 저장시켜서 꺼내쓸 수 있는 도구다.</p> <p class="" id="1c0451cf-7b79-8049-be14-d84a1070af16">막상 나는 잘 안쓴다.</p> <ul class="bulleted-list" id="1a3451cf-7b79-8003-8ba6-f23fb4595dcc"><li style="list-style-type:disc">Homebrew로 설치</li></ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install</span> <span class="nt">--cask</span> maccy
</code></pre></div></div> <p class="" id="1a3451cf-7b79-8004-a981-ce1655943479"><a href="https://maccy.app/">https://maccy.app/</a></p> <p class="" id="1a3451cf-7b79-8005-a30f-dda85d069ca6"><a href="https://blog.naver.com/finway/223487330217">https://blog.naver.com/finway/223487330217</a></p> <p class="" id="1bf451cf-7b79-80af-a1f3-e786d1d47f44"> </p> <p class="" id="1bf451cf-7b79-8099-9aa3-e083f5ca4962"> </p> <hr id="1bf451cf-7b79-80ba-bf5f-d5a910c31685"/> <p class="" id="1bf451cf-7b79-806c-be13-ec496816ff61"> </p> <p class="" id="1bf451cf-7b79-80a8-8bbb-f45bd8d730c2"> </p> <h1 class="" id="1a3451cf-7b79-801f-b820-ec2317acccce">🎨 Top Notch (메뉴바 검은색으로)</h1> <p class="" id="22c451cf-7b79-805a-b954-d37ce81b0212">⭐️</p> <p class="" id="1c2451cf-7b79-80f1-a0c9-e27bb1ef0fea"><a href="https://topnotch.app/">https://topnotch.app/</a></p> <p class="" id="1c2451cf-7b79-808b-9f39-fae2a6ba9282">무조건 메뉴바를 검정색으로 바꿔서 M자 탈모 모양을 없애주는 것</p> <p class="" id="210451cf-7b79-8034-9eeb-c52fae435159"> </p> <p class="" id="1a4451cf-7b79-8061-a4fd-d562a2fae20a">원래 메뉴바 색은 배경화면에 맞게 설정되는데, 색이 맘에 안들면 검정색으로 바꿀 수 있다.</p> <p class="" id="210451cf-7b79-80cc-8fe8-cd92cfefd69a">단점 : 바꿔보니까 맥이 프로그램 끝을 둥글게 만들어서 작은 틈이 보여서 색이 바탕화면과 많이 차이나면 창을 최대화해도 틈이 살짝 보인다. <strong>생각보다 별로임</strong></p> <figure class="image" id="1c2451cf-7b79-80ff-89ca-eb54b44016b1"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2046.webp" style="width:709.984375px"/></picture></figure> <p class="" id="1c2451cf-7b79-8024-b6be-dbfa29af33b4"> </p> <p class="" id="1bf451cf-7b79-807c-b17d-c207f1b2fbc9"> </p> <p class="" id="1bf451cf-7b79-80fd-8aa9-f5310d108bc4"> </p> <hr id="1bf451cf-7b79-8023-afe1-e53dbdbe3492"/> <p class="" id="1bf451cf-7b79-80e8-8f1f-e2fbe152a79b"> </p> <p class="" id="1bf451cf-7b79-8008-9c1b-e189d894f32e"> </p> <h1 class="" id="1af451cf-7b79-80c8-b3a1-ee5320c5c4c1">🎥 화면녹화시 소리 녹화 방법</h1> <p class="" id="22c451cf-7b79-8095-bc73-f0cd75f6664e">⭐️⭐️⭐️⭐️</p> <p class="" id="1af451cf-7b79-8071-bff0-fe77a0960d63">기본적으로 <code>cmd + shift + 5</code> 를 사용해서 녹화할 수 있는데, 소리 녹화가 동시에 안된다.</p> <p class="" id="1af451cf-7b79-8009-bb92-edbfd9896243">Blackhole을 설치하면 소리도 동시에 녹화할 수 있다.</p> <p class="" id="1c0451cf-7b79-80c0-8289-d851fb1d0329"> </p> <p class="" id="1c0451cf-7b79-803f-8653-d5523cab8952"><strong>설치</strong></p> <p class="" id="1c0451cf-7b79-80bf-996f-c2faa93faa66">2ch로도 충분하다는거 같음. (ch이 뭘 의미하는지 사실 잘 모름)</p> <p class="" id="22c451cf-7b79-80dc-ba7a-f422ffa73302"> </p> <p class="" id="1af451cf-7b79-80e5-8573-c7764673399c"><strong>Option 1: Download Installer</strong></p> <ol class="numbered-list" id="1af451cf-7b79-8036-9bbd-ca51d6a38ee7" start="1" type="1"><li><a href="https://existential.audio/blackhole">Download the latest installer</a></li></ol> <ol class="numbered-list" id="1c0451cf-7b79-801c-ab32-e2776c02823c" start="2" type="1"><li>Donate 하지말고 I can’t afford to donate</li></ol> <ol class="numbered-list" id="1c0451cf-7b79-80db-b4a8-fab7033bac9c" start="3" type="1"><li>이메일 적고 대충 이름 적으면 이메일로 다운링크 줌</li></ol> <p class="" id="22c451cf-7b79-80fb-8478-d605df2647d9"> </p> <p class="" id="1af451cf-7b79-80d0-9835-ec721be5c1eb"><strong>Option 2: Install via Homebrew</strong></p> <p class="" id="1c0451cf-7b79-807f-8e00-f5c45c067fb6">맥좀 써보고 컴공이라면 Homebrew 무조건 있을텐데 이걸로 깔면 바로 깔아짐</p> <ul class="bulleted-list" id="1af451cf-7b79-80a1-b397-e6d3af54fd66"><li style="list-style-type:disc">2ch: <code>brew install blackhole-2ch</code></li></ul> <p class="" id="1c0451cf-7b79-802a-bfcc-d5224208ffef"> </p> <p class="" id="1bf451cf-7b79-8047-b368-f0de1370fb68"><strong>설정</strong></p> <ul class="bulleted-list" id="1c0451cf-7b79-8095-a908-d38aa4380b8d"><li style="list-style-type:disc">오디오 MIDI 설정 → + 버튼 → 다중 출력 기기 생성</li></ul> <ul class="bulleted-list" id="1c0451cf-7b79-80a2-8497-ca8cc477ba33"><li style="list-style-type:disc">아래 사진과 같이 실제로 들을 오디오 기기와 BlackHole2ch을 체크<p class="" id="1c0451cf-7b79-80a2-bfbd-d4a51d0d971f">(동시에 두 기기가 출력기기라는거임)</p></li></ul> <ul class="bulleted-list" id="1c0451cf-7b79-804f-aaed-dbb40b9ad177"><li style="list-style-type:disc">이름은 왼쪽에 있는 이름을 직접 클릭하면 바꿀 수 있음</li></ul> <figure class="image" id="1c0451cf-7b79-8014-8418-f6acdbe03542"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2047.webp" style="width:548.9921875px"/></picture></figure> <p class="" id="1c0451cf-7b79-8052-a086-f63441adcdec"> </p> <p class="block-color-default_background" id="1bf451cf-7b79-80cb-8051-dfccf5e1d9fe"><strong>사용법</strong></p> <ul class="bulleted-list" id="1bf451cf-7b79-8062-ab33-dfa989012991"><li style="list-style-type:disc">출력 (스피커) : [기존 스피커]+blackhole2ch</li></ul> <ul class="bulleted-list" id="1bf451cf-7b79-8060-ac63-d3354927c4af"><li style="list-style-type:disc">입력 (마이크) : blackhole2ch</li></ul> <figure class="image" id="1c0451cf-7b79-8086-b038-e384815c4aeb"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2048.webp" style="width:522.9921875px"/></picture></figure> <figure class="image" id="1c0451cf-7b79-8003-960c-c2f1b8fdc4dc"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2049.webp" style="width:522.9921875px"/></picture></figure> <p class="" id="1bf451cf-7b79-809b-a8e4-cbf3dc4632e5">스피커에 blackhole이 있어서 내 컴퓨터 소리를 blackhole로 넘기고,</p> <p class="" id="1bf451cf-7b79-8029-b4fe-e950c4d4614c">마이크가 blackhole이라서 내 컴퓨터 소리가 녹화됨 !</p> <p class="" id="1bf451cf-7b79-801c-a77e-f458adbd17c1"> </p> <p class="" id="1bf451cf-7b79-804e-87ff-efa2a42f3065"> </p> <hr id="1bf451cf-7b79-80ab-b3a5-f724ed4ece0b"/> <p class="" id="1bf451cf-7b79-8036-bf37-e32ff03368c3"> </p> <p class="" id="1bf451cf-7b79-8087-bc42-df261d289327"> </p> <h1 class="" id="1a4451cf-7b79-8076-9105-dcb7f5e1535c">Chrome 앱을 사용하자</h1> <p class="" id="22c451cf-7b79-8097-ac98-dd6c3250cdc0">⭐️⭐️</p> <p class="" id="1a4451cf-7b79-8052-8f27-f0c47cc59564">대부분의 프로그램에서 웹 &gt; 앱 이다.</p> <p class="" id="1a4451cf-7b79-8091-9e0e-ea210d2ea9c2">대부분이 웹개발 먼저 이루어지고, 운영체제에 맞게 앱개발이 이루어지기 때문에, 웹이 더 클린한 경우가 많다.</p> <p class="" id="1a4451cf-7b79-8096-a6c7-cdfdf381cb44">GPT는 특히 데스크탑 앱을 사용하면 표가 애매하게 잘리는 문제, 프로젝트에서 파일을 첨부하지 못하는 문제 등이 발생한다. </p> <p class="" id="1a4451cf-7b79-80e2-b9a9-eb140d2ca7c6">하지만, 웹에서 쓰기에는 GPT만큼은 크롬에서 다른 탭이랑 같이 쓴는것 보다는 따로 창을 쓰는게 좋을 것 같기 때문에, 크롬에서 자체로 앱처럼 웹을 따로 만들어서 사용할 수 있다. (+ 난 인스타도 만들어놨다.)</p> <figure class="image" id="1a4451cf-7b79-80e5-ab47-d7ff4f707a9f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2050.webp" style="width:709.9921875px"/></picture></figure> <p class="" id="1a4451cf-7b79-809d-8f42-db802b62c497"><code>전송, 저장, 공유</code></p> <p class="" id="1a4451cf-7b79-803f-a437-da63c194f4ff"><code>페이지를 앱으로 설치(…</code></p> <p class="" id="1a4451cf-7b79-8068-b02a-e63cb89d6926">웹인데 따로 창을 앱처럼 사용하고, 깔끔하게 따로 빼서 사용할 수 있다.</p> <p class="" id="1a4451cf-7b79-8045-9504-eef04b9ed10a">대부분의 기능에서 웹이 더 좋은 것 같다.</p> <p class="" id="1bf451cf-7b79-80ca-9d63-fad8198883dc"> </p> <p class="" id="1bf451cf-7b79-804f-92f5-d7b526b3f41a"> </p> <hr id="1bf451cf-7b79-80aa-9b38-cdcb805c89cc"/> <p class="" id="1bf451cf-7b79-8002-a8ce-c2fcd4abc287"> </p> <p class="" id="1bf451cf-7b79-801b-865c-c1d69899a79f"> </p> <h1 class="" id="1a3451cf-7b79-8072-85ee-c3b1724947af">🥃 Whisky</h1> <p class="" id="22c451cf-7b79-80c5-8deb-dce3faa4cd17">⭐️</p> <p class="" id="1a3451cf-7b79-8092-b8bd-fba52b2c6089">.exe 파일을 실행시킬 수 있는 도구다. 게임도 지원이된다. (안되는것도있음)</p> <p class="" id="1a3451cf-7b79-8044-98f2-f2f407a02d61">다만, USB 연결은 안되는것같다.</p> <p class="" id="1a3451cf-7b79-8098-9581-f76810246011"><a href="https://getwhisky.app/ko/">https://getwhisky.app/ko/</a></p> <p class="" id="1bf451cf-7b79-80fe-ac62-c26f8a97e75f"> </p> <p class="" id="1bf451cf-7b79-80a8-8db3-d7c689b02e65"> </p> <hr id="1bf451cf-7b79-80f9-8612-e4eb6eb7ff77"/> <p class="" id="1bf451cf-7b79-8057-9c60-dcd34a0f7146"> </p> <p class="" id="1bf451cf-7b79-800a-8665-df3f767ab3c5"> </p> <h1 class="" id="1a3451cf-7b79-80a9-a665-db6d572d02cf">💽 UTM</h1> <p class="" id="22c451cf-7b79-8033-ba48-e4e1567c2cff">⭐️</p> <p class="" id="1a3451cf-7b79-8093-9f6c-df77eba24826">무료 가상머신이다. 대신 설치는 살짝 복잡하다. 굳이 안써도 됨. 용량 많이 차지함.</p> <figure class="image" id="230451cf-7b79-80ac-8f49-cb363cfe6976"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-04-13-mac-setting/image%2051.webp" style="width:528px"/></picture></figure> <p class="" id="1aa451cf-7b79-8032-8046-ed3cee1fb990">추천 설정: 실제 메모리 크기와 CPU 코어 개수의 절반 이하로</p> <p class="" id="1aa451cf-7b79-80a3-bab6-d1ae99830cbc"><strong>Window 11</strong></p> <p class="" id="1a4451cf-7b79-80b0-981e-d719e188c74d">난 NFC RFID Reader가 .exe 파일인데, Whisky로는 USB 연결이 안되서 깔았다.</p> <p class="" id="1a3451cf-7b79-8028-a600-dd83bd296250">USB연결도 물론 되고, 그냥 윈도우도 쓰는 느낌이다. </p> <p class="" id="1aa451cf-7b79-801f-894e-f3193c5eb0de">램 8GB하고 싱글 카트라이더 돌려보니까 렉걸리더라</p> <p class="" id="1a4451cf-7b79-808c-996a-cce07d2e8ab1">유료보다는 렉걸리지만, 유료는 너무 비싼듯?</p> <p class="" id="1a7451cf-7b79-8024-82be-f7561feb8350"><a href="https://xanzhu.com/ko/blog/windows-on-apple-silicon">https://xanzhu.com/ko/blog/windows-on-apple-silicon</a></p> <p class="" id="1aa451cf-7b79-80c7-9be7-ea12c234c7db"> </p> <p class="" id="1a7451cf-7b79-8010-95c1-c1e12552b6a6">다운르도 링크 (윈도우 10,11 둘다있는데 10은 자꾸 오류뜸)</p> <p class="" id="1a7451cf-7b79-802f-8e42-f8a48abaf061"><a href="https://mac.getutm.app/">https://mac.getutm.app/</a></p> <p class="" id="1a7451cf-7b79-80ad-8259-fd4d618e1ad3"><a href="https://apps.apple.com/us/app/crystalfetch-iso-downloader/id6454431289?mt=12">https://apps.apple.com/us/app/crystalfetch-iso-downloader/id6454431289?mt=12</a></p> <p class="" id="1aa451cf-7b79-80f1-978b-e0c64ab52c9d"> </p> <p class="" id="1aa451cf-7b79-80d4-9de9-dfd9ee0964c0"><strong>Ubuntu</strong></p> <p class="" id="1a7451cf-7b79-8026-9f82-f7b368ca9b1a">아래 링크에서 ARM 버전 다운로드</p> <p class="" id="1aa451cf-7b79-80ed-a998-c12036d62a29"><a href="https://cdimage.ubuntu.com/releases/22.04/release/">https://cdimage.ubuntu.com/releases/22.04/release/</a></p> <p class="" id="1aa451cf-7b79-80b0-86e4-c5655213fa7c"> </p> <p class="" id="1aa451cf-7b79-80d0-b908-e957f8f0feab">참고 링크 :</p> <p class="" id="1a7451cf-7b79-8037-9ee9-fce767f46c04"><a href="https://solearn.tistory.com/275">https://solearn.tistory.com/275</a></p> <p class="" id="1aa451cf-7b79-8053-ac54-f0aa34ad62dd"> </p> <p class="" id="223451cf-7b79-8011-8fe0-ee26bad0ce77"> </p> <hr id="1aa451cf-7b79-80eb-ad19-d0c165a22f1c"/> <p class="" id="223451cf-7b79-802b-b68c-fb3b6c424b70"> </p> <h1 class="" id="223451cf-7b79-8095-a711-df5a8abb8cc8">🍯 꿀 단축키</h1> <p class="" id="22c451cf-7b79-80e3-b841-d2008036b9c3">⭐️⭐️⭐️⭐️⭐️</p> <p class="" id="22c451cf-7b79-80b2-b592-d7d3e8324813"> </p> <p class="" id="223451cf-7b79-802f-af50-c711163002fd"><code>Cmd + Shift + . </code> : 파인더에서 .으로 시작하는 숨겨진 파일, 디렉토리 보이게 / 안보이게</p> <p class="" id="223451cf-7b79-80d4-90ab-c8810dd7df9f"> </p> <p class="" id="223451cf-7b79-8085-8602-ee5a547faf88"> </p> <p class="" id="223451cf-7b79-8050-89d4-d8459789a1db"><code>Cmd + Shift + 5 </code>: 여러가지 캡쳐기능</p> <p class="" id="223451cf-7b79-8018-9ba4-c91b6f5d4d08">중요!!! : 여기서 옵션 누르고 설정해놓으면 다음 단축키들에도 적용됨.</p> <p class="" id="223451cf-7b79-8039-936e-e3218d282484">데스크탑 → 데스크탑에 저장됨</p> <p class="" id="223451cf-7b79-80fa-9e7e-fdff5dc1e06a"><strong>클립보드 → 바로 클립보드에 저장되어 따로 파일저장 안하고 복붙 가능</strong></p> <p class="" id="223451cf-7b79-80ad-a15e-d1db297d490f"> </p> <p class="" id="223451cf-7b79-803e-8d2d-cc94a74e7b09"><code>Cmd + Shift + 3</code> : 전체 화면 캡쳐</p> <p class="" id="223451cf-7b79-8076-a97a-e569e4f15682"><code>Cmd + Shift + 4</code> : 전체 화면 캡쳐</p> <p class="" id="22c451cf-7b79-802b-a128-e41983ac2aee"> </p> <p class="" id="22c451cf-7b79-80ee-836e-ef6e59b80fe5"> </p> <p class="" id="22c451cf-7b79-8087-9239-e4ba2d827afe"><code>Cmd + R</code> : F5처럼 새로고침</p> <p><span class="sans" style="font-size:14px;padding-top:2em"></span></p>]]></content><author><name></name></author><category term="Tip"/><summary type="html"><![CDATA[💡MacBook Pro 14 inch M2 Pro (2023)Sequoia 15.3.1 Version버전이 다르다면 다를 수 있음어플 내 상세 설정은 내가 선호하는 대로 기록하려고 캡쳐해두었다.어느정도 컴퓨터를 다룰 줄 아는 사람이라는 전제 하에 작성했다.(ex. Github 오픈소스니까 링크 들어가서 최신 버전 다운받기)Homebrew 등 다루는것도 있는데 궁금하면 알아서 GPT gogo 💡모두 다 따라하기보단, 읽어보고 자신이 필요할것 같으면 따라해보자.단, ⭐️ 5개짜리는 적극 추천한다. ⭐️ [필독] 프로그램 다운로드 종류 ⭐️⭐️⭐️⭐️⭐️ 설정과 좋은 어플을 소개하기 전에 맥 기본 프로그램 다운로드 종류를 알려주겠다. 제발 모르면 이거부터 정독하자. 앱스토어로 다운은 생각보다 별로 없으니까 일단 넘기고, 맥은 소프트웨어를 다운받았을 경우, 직접 응용 프로그램 폴더에 넣어줘야한다. 프로그램별로 보통 세가지 방식이 있다. .pkg 파일 : 우리가 아는 평범한 설치 프로그램. 근데 맥에서는 은근 잘 안쓰인다. .dmg 파일 : 친절하게 넣도록 유도→ 다음처럼 친절하게 드래그드롭으로 넣도록 유도해준다. .zip 파일 : 알아서 넣기→ 다음과같이 zip 파일만 딸랑 있을때, 압축을 풀었는데 바로 응용 프로그램이 나온다면→ 직접 응용 프로그램 폴더에 드래그드랍 해주자. 다음과 같이 응용 프로그램 폴더에 들어가면 LaunchPad에 보인다. ⬇️ Software Update 업데이트 일부러 안하는 사람도 있는데, 개인적으로는 추천한다. 계속 안하고 버티면 안돌아가는 어플들이 꽤 있다. 그리고 마이그레이션 하려면 양쪽 다 이거 최신으로 업데이트 해줘야한다. 오래걸릴 수 있으니 미리 다운로드 시작하고 아래 진행 ⚙️ 설정 ⭐️⭐️ Apple Login이거부터 하고 시작하자. 시동음 제거노트북 켰을때 이거 안해놓으면 밖에서 관종처럼 시끄럽게 킬 수 있다. 키보드 → 키보드 단축키이건 내 나름대로 선호하는 설정이다. 핫 코너 단축키마우스로 코너를 찍어서 Mission Control이나 데스크탑 보기를 할 수 있는데, 정말 유용하다. 앱스토어 암호 없이 다운로드이 과정을 해줘야 앱스토어에서 앱 설치시 귀찮게 자꾸 암호를 입력하는 일이 없다.미디어 및 구입 항목 → 무료 다운로드 → 입력 안함 문서(PDF) 탭으로 열기PDF를 열때 윈도우는 자동으로 하나의 창에 여러 탭으로 열리는데,맥은 이 설정을 안해주면 각각 다른 창으로 열린다. 🖱️ Scroll Reverser 설치 ⭐️⭐️⭐️⭐️⭐️ 맥 쓰면 마우스 휠이 반대인데, 이게 은근 불편하다. 나만 적응하면 끝이다 싶을 수 있는데, 남이 내 맥을 잠깐 만지거나, 내가 오랜만에 윈도우 쓸 일 있으면 자꾸 헷갈린다. 트랙패드 스크롤은 그대로 두고 마우스 휠만 반전시켜서 윈도우랑 일치하도록 할 수 있음 Mac 소프트웨어 버전 낮으면 실행 안됨 13.xx 에서 안됐음 https://pilotmoon.com/scrollreverser/ ⌨️ 우command → 한영키로 ⭐️⭐️⭐️⭐️⭐️ 맥 쓰면 capslock 자리에 있는 한영키 적응해야하는데, 불편하다. 나만 적응하면 끝이다 싶을 수 있는데, 남이 내 맥을 잠깐 만지거나, 내가 오랜만에 윈도우 쓸 일 있으면 자꾸 헷갈린다. 오른쪽 command를 한영키로 바꾸면 서로 편하고 좋다. Karabiner 버전에 맞게 다운로드https://karabiner-elements.pqrs.org/ 여러 권한 부여 작업 다음과 같이 설정 참고로 몇몇 키보드는 바로 허용이 안되서 직접 Device에 들어가서 Modify events 해줘야함!! 설정 → 키보드 → 키보드 단축키 F18 하는 방법 : 위에서 설정했던 우커맨드 누르면 됨 키보드 → 입력 소스 → 편집 한영키 우커맨드로만 쓸거면 캡스락 자리를 Caps Lock 쓸 수 있음 📁 Finder ⭐️⭐️⭐️ 도구 막대 사용자화 경로 막대 보기, 상태막대 보기로 변경 → 아래 경로랑 용량 나옴왼쪽 위의 메뉴바에 보기 누르면 저렇게 나옴 항상 자동으로 정렬우클릭 → 보기 옵션 → 정렬 → 이름 등 원하는 걸로→ 아래 기본값으로 사용 누르기 파인더에서 단축키로 바로 그 경로의 터미널 열기 (컴공이면 Good) 반드시 먼저 설정한 항목을 글자 그래도 옮겨적어야한다. 폴더에서 새로운 터미널 탭 열기 위처럼 폴더를 누른 후 설정한 단축어를 사용하면 바로 터미널이 열린다. ⬛️ Rectangle ⭐️⭐️⭐️⭐️⭐️ 맥 소프트웨어 업데이트하면서 기본 설정에서도 있는데, 이 어플이 더 최적화가 부드럽고 기능이 많음 https://rectangleapp.com/ ⌨️ KeyBoardCleanTool ⭐️⭐️ 맥북은 키보드를 누르기만 하면 노트북을 꺼도 노트북이 켜져버리기 때문에 키보드 청소하기가 불편하다. 키보드를 아예 꺼버리고 물티슈 등으로 청소할 수 있다. (전원키는 이거 실행해도 눌리는듯 하니까 조심) https://folivora.ai/keyboardcleantool 다운로드 후 압축풀면 바로 어플리케이션인데, 경로를 ‘응용 프로그램’으로 옮겨주면 된다. 🐨 Grey ⭐️ 어플들은 대부분 기본 설정으로 시스템이 다크모드면 다크모드를 따라가도록 되어있고, 설정에서 라이트/다크 모드를 고정할 수도 있다. 하지만, 인기가 없는 앱은 무조건 시스템 설정을 따라가는 경우가 있다. (ex. QTSpim) 컴구 과제때문에 QTSpim을 깔아서 하는데, 다크모드를 항상 쓰는 나에게는 코드 보기가 눈이 너무 아팠고, 이거 하나때문에 다크모드를 끄자니 싫었다. 이를 해결하는 각 어플마다 시스템 설정을 다르게 설정해주는 어플이다. 다운로드 https://github.com/zenangst/Gray?tab=readme-ov-file 🧹 AppCleaner ⭐️⭐️⭐️⭐️⭐️ 앱만 드래그로 지우면 앱 파일을 자동으로 못지우는 경우가 많아 많은 용량을 차지할 수 있다. 자동으로 찾아서 지우도록 도와주는 어플 앱 지우는 법 : application 폴더에서 휴지통으로 드래그해서 넣으면 됨 이 어플 굳이 킬 필요 없이 설치만 되어있으면 위 방법대로 휴지통에 삭제하면 알아서 팝업 뜨면서 지울거냐고 물어보니까 간편하다. https://freemacsoft.net/appcleaner/ 🔋 AlDente ⭐️⭐️ 맥북 필수 배터리 관리 앱 충전기를 꽂아놔도 알아서 지정한 한도까지만 충전하고, 딱 사용하는 전력만큼만 충전기에서 받아온다. 만약 외출 전이라 100% 까지 충전하고 싶다면 충전 버튼 한번 누르면 된다. https://apphousekitchen.com/ 난 클램쉘로 쓰니까 편하게 하려고 결제도 하고 사용중 💊 Amphetamine Download https://apps.apple.com/kr/app/amphetamine/id937984704?mt=12 Power Protect https://x74353.github.io/Amphetamine-Power-Protect/ 위 링크에서 Power Protect도 설치 설치 후 암호 입력 없이 가능하도록 실행 sudo pmset -a disablesleep 1 비활성화한다면? sudo pmset -a disablesleep 0 🖥️ MonitorControl ⭐️⭐️⭐️⭐️⭐️ 외장모니터의 밝기를 편하게 컨트롤 하는 툴 외장 모니터들이 보통 밝기를 직접 모니터 버튼 눌러서 설정해야하는데, 이걸 가능하게 해줌 외장 모니터 있으면 있으면 무조건 쓰는거 강추! 기존 모니터 설정→ 직접 컨트롤 불가능.직접 컨트롤 가능 + 키보드로도 가능 Homebrew 통해 설치 brew install --cask monitorcontrol 웹으로 설치https://github.com/MonitorControl/MonitorControl/releases 에서 최신버전 dmg 파일 다운로드 📎 Maccy ⭐️ 클립보드를 여러개 할 수 있고 저장시켜서 꺼내쓸 수 있는 도구다. 막상 나는 잘 안쓴다. Homebrew로 설치 brew install --cask maccy https://maccy.app/ https://blog.naver.com/finway/223487330217 🎨 Top Notch (메뉴바 검은색으로) ⭐️ https://topnotch.app/ 무조건 메뉴바를 검정색으로 바꿔서 M자 탈모 모양을 없애주는 것 원래 메뉴바 색은 배경화면에 맞게 설정되는데, 색이 맘에 안들면 검정색으로 바꿀 수 있다. 단점 : 바꿔보니까 맥이 프로그램 끝을 둥글게 만들어서 작은 틈이 보여서 색이 바탕화면과 많이 차이나면 창을 최대화해도 틈이 살짝 보인다. 생각보다 별로임 🎥 화면녹화시 소리 녹화 방법 ⭐️⭐️⭐️⭐️ 기본적으로 cmd + shift + 5 를 사용해서 녹화할 수 있는데, 소리 녹화가 동시에 안된다. Blackhole을 설치하면 소리도 동시에 녹화할 수 있다. 설치 2ch로도 충분하다는거 같음. (ch이 뭘 의미하는지 사실 잘 모름) Option 1: Download Installer Download the latest installer Donate 하지말고 I can’t afford to donate 이메일 적고 대충 이름 적으면 이메일로 다운링크 줌 Option 2: Install via Homebrew 맥좀 써보고 컴공이라면 Homebrew 무조건 있을텐데 이걸로 깔면 바로 깔아짐 2ch: brew install blackhole-2ch 설정 오디오 MIDI 설정 → + 버튼 → 다중 출력 기기 생성 아래 사진과 같이 실제로 들을 오디오 기기와 BlackHole2ch을 체크(동시에 두 기기가 출력기기라는거임) 이름은 왼쪽에 있는 이름을 직접 클릭하면 바꿀 수 있음 사용법 출력 (스피커) : [기존 스피커]+blackhole2ch 입력 (마이크) : blackhole2ch 스피커에 blackhole이 있어서 내 컴퓨터 소리를 blackhole로 넘기고, 마이크가 blackhole이라서 내 컴퓨터 소리가 녹화됨 ! Chrome 앱을 사용하자 ⭐️⭐️ 대부분의 프로그램에서 웹 &gt; 앱 이다. 대부분이 웹개발 먼저 이루어지고, 운영체제에 맞게 앱개발이 이루어지기 때문에, 웹이 더 클린한 경우가 많다. GPT는 특히 데스크탑 앱을 사용하면 표가 애매하게 잘리는 문제, 프로젝트에서 파일을 첨부하지 못하는 문제 등이 발생한다. 하지만, 웹에서 쓰기에는 GPT만큼은 크롬에서 다른 탭이랑 같이 쓴는것 보다는 따로 창을 쓰는게 좋을 것 같기 때문에, 크롬에서 자체로 앱처럼 웹을 따로 만들어서 사용할 수 있다. (+ 난 인스타도 만들어놨다.) 전송, 저장, 공유 페이지를 앱으로 설치(… 웹인데 따로 창을 앱처럼 사용하고, 깔끔하게 따로 빼서 사용할 수 있다. 대부분의 기능에서 웹이 더 좋은 것 같다. 🥃 Whisky ⭐️ .exe 파일을 실행시킬 수 있는 도구다. 게임도 지원이된다. (안되는것도있음) 다만, USB 연결은 안되는것같다. https://getwhisky.app/ko/ 💽 UTM ⭐️ 무료 가상머신이다. 대신 설치는 살짝 복잡하다. 굳이 안써도 됨. 용량 많이 차지함. 추천 설정: 실제 메모리 크기와 CPU 코어 개수의 절반 이하로 Window 11 난 NFC RFID Reader가 .exe 파일인데, Whisky로는 USB 연결이 안되서 깔았다. USB연결도 물론 되고, 그냥 윈도우도 쓰는 느낌이다. 램 8GB하고 싱글 카트라이더 돌려보니까 렉걸리더라 유료보다는 렉걸리지만, 유료는 너무 비싼듯? https://xanzhu.com/ko/blog/windows-on-apple-silicon 다운르도 링크 (윈도우 10,11 둘다있는데 10은 자꾸 오류뜸) https://mac.getutm.app/ https://apps.apple.com/us/app/crystalfetch-iso-downloader/id6454431289?mt=12 Ubuntu 아래 링크에서 ARM 버전 다운로드 https://cdimage.ubuntu.com/releases/22.04/release/ 참고 링크 : https://solearn.tistory.com/275 🍯 꿀 단축키 ⭐️⭐️⭐️⭐️⭐️ Cmd + Shift + . : 파인더에서 .으로 시작하는 숨겨진 파일, 디렉토리 보이게 / 안보이게 Cmd + Shift + 5 : 여러가지 캡쳐기능 중요!!! : 여기서 옵션 누르고 설정해놓으면 다음 단축키들에도 적용됨. 데스크탑 → 데스크탑에 저장됨 클립보드 → 바로 클립보드에 저장되어 따로 파일저장 안하고 복붙 가능 Cmd + Shift + 3 : 전체 화면 캡쳐 Cmd + Shift + 4 : 전체 화면 캡쳐 Cmd + R : F5처럼 새로고침]]></summary></entry><entry><title type="html">연구실 안전교육 스킵</title><link href="https://hoonably.github.io/blog/lab-safety/" rel="alternate" type="text/html" title="연구실 안전교육 스킵"/><published>2025-04-04T07:25:31+00:00</published><updated>2025-04-04T07:25:31+00:00</updated><id>https://hoonably.github.io/blog/lab-safety</id><content type="html" xml:base="https://hoonably.github.io/blog/lab-safety/"><![CDATA[<p>국가 돈낭비 중 하나인 연구실 안전교육을 아마 매학기 해야하는데 정말 귀찮다.</p> <p>특히 컴공은 정말 쓸데없는 듯 하다.</p> <p>알 사람은 알지만 스킵하는 방법이 있다.</p> <h3 id="1-동영상-틀기">1. 동영상 틀기</h3> <figure> <picture> <img src="/files/2025-04-04-lab-safety/image.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="2-개발자-모드-진입">2. 개발자 모드 진입</h3> <p>Window : <code class="language-plaintext highlighter-rouge">F12</code></p> <p>Mac : <code class="language-plaintext highlighter-rouge">cmd+opt+I</code></p> <h3 id="3-console-창-진입">3. Console 창 진입</h3> <figure> <picture> <img src="/files/2025-04-04-lab-safety/image%201.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>이제 Console 창에 다음 내용을 붙여넣기 하고 <code class="language-plaintext highlighter-rouge">Enter</code> 누르면 된다.</p> <ul> <li> <p>만약 Console에 붙여넣기가 불가능하다고 뜬다면?</p> <p>다음을 직접 영어로 입력 후 Enter</p> <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nx">allow</span> <span class="nx">pasting</span>
</code></pre></div> </div> </li> </ul> <h3 id="4-1-progresscheck-바로-종료">4-1. ProgressCheck (바로 종료)</h3> <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">progressCheck</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
</code></pre></div></div> <h3 id="4-2-6000초-건너뛰기-바로-종료">4-2. 6000초 건너뛰기 (바로 종료)</h3> <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">video</span><span class="dl">'</span><span class="p">).</span><span class="nx">currentTime</span><span class="o">+=</span><span class="mi">6000</span><span class="p">;</span>
</code></pre></div></div> <h3 id="4-3-16배속-위-건너뛰기-방법이-안된다면">4-3. 16배속 (위 건너뛰기 방법이 안된다면)</h3> <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">video</span><span class="dl">'</span><span class="p">).</span><span class="nx">playbackRate</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span>
</code></pre></div></div> <h3 id="5-퀴즈-정답">5. 퀴즈 정답</h3> <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for </span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
<span class="nx">answer</span> <span class="o">=</span> <span class="nf">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#qustionCorrectNo_</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">i</span><span class="p">).</span><span class="nf">val</span><span class="p">();</span>
<span class="nf">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">input[name='qustionAnswerList[</span><span class="dl">"</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="dl">"</span><span class="s2">].Answer']:radio[value=</span><span class="dl">"</span><span class="o">+</span><span class="nx">answer</span><span class="o">+</span><span class="dl">"</span><span class="s2">]</span><span class="dl">"</span><span class="p">).</span><span class="nf">attr</span><span class="p">(</span><span class="dl">"</span><span class="s2">checked</span><span class="dl">"</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <figure> <picture> <img src="/files/2025-04-04-lab-safety/image%202.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <img src="/files/2025-04-04-lab-safety/image%203.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <img src="/files/2025-04-04-lab-safety/image%204.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>]]></content><author><name></name></author><category term="Tip"/><summary type="html"><![CDATA[국가 돈낭비 중 하나인 연구실 안전교육을 아마 매학기 해야하는데 정말 귀찮다.]]></summary></entry><entry><title type="html">Pintos Setting</title><link href="https://hoonably.github.io/blog/pintos-setting/" rel="alternate" type="text/html" title="Pintos Setting"/><published>2025-03-20T07:26:04+00:00</published><updated>2025-03-20T07:26:04+00:00</updated><id>https://hoonably.github.io/blog/pintos-setting</id><content type="html" xml:base="https://hoonably.github.io/blog/pintos-setting/"><![CDATA[<p>메모: docker start -ai pintos</p> <blockquote> <p>Welcome to Pintos. Pintos is a simple operating system framework for the 80x86 architecture.</p> </blockquote> <h1 id="docker-build">Docker Build</h1> <p><a href="https://github.com/NamJeongseok/PintOS-Docker-UNIST">https://github.com/NamJeongseok/PintOS-Docker-UNIST</a></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>FROM ubuntu:12.04

RUN <span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-e</span> <span class="s1">'s/archive.ubuntu.com/old-releases.ubuntu.com/g'</span> /etc/apt/sources.list
RUN <span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-e</span> <span class="s1">'s/security.ubuntu.com/old-releases.ubuntu.com/g'</span> /etc/apt/sources.list

RUN apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nb">install</span> <span class="nt">-y</span> <span class="se">\</span>
	bash <span class="se">\</span>
	vim <span class="se">\</span>
	build-essential <span class="se">\</span>
	gcc-4.4 <span class="se">\</span>
	gcc-multilib <span class="se">\</span>
	g++-4.4 <span class="se">\</span>
	perl <span class="se">\</span>
	wget <span class="se">\</span>
	patch <span class="se">\</span>
	libncurses5-dev <span class="se">\</span>
	libx11-dev libxrandr-dev xorg-dev <span class="se">\</span>
	make

RUN <span class="nb">mv</span> /usr/bin/gcc-4.4 /usr/bin/gcc
RUN <span class="nb">mv</span> /usr/bin/g++-4.4 /usr/bin/g++
COPY ./bochs-2.2.6.tar.gz /root/
RUN <span class="nb">mkdir</span> /root/pintos 
RUN <span class="nb">echo</span> <span class="s1">'export PATH="$PATH:/root/pintos/src/utils"'</span> <span class="o">&gt;&gt;</span> ~/.bashrc

CMD <span class="o">[</span><span class="s2">"/bin/bash"</span><span class="o">]</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone git@github.com:NamJeongseok/PintOS-Docker-UNIST.git
<span class="nb">cd </span>PintOS-Docker-UNIST
</code></pre></div></div> <ul> <li>amd64 (x86_64) (Window)</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker build <span class="nt">-t</span> pintos <span class="nb">.</span>
</code></pre></div></div> <ul> <li>ARM64 (Silicon Mac)</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker build <span class="nt">--platform</span><span class="o">=</span>linux/amd64 <span class="nt">-t</span> pintos <span class="nb">.</span>
</code></pre></div></div> <h1 id="error">Error</h1> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>➜  PintOS-Docker-UNIST git:<span class="o">(</span>main<span class="o">)</span> <span class="nb">sudo </span>docker build <span class="nt">-t</span> pintos <span class="nb">.</span>                  
Password:
<span class="o">[</span>+] Building 1.8s <span class="o">(</span>9/14<span class="o">)</span>                                                          docker:desktop-linux
 <span class="o">=&gt;</span> <span class="o">[</span>internal] load build definition from Dockerfile                                              0.0s
 <span class="o">=&gt;</span> <span class="o">=&gt;</span> transferring dockerfile: 696B                                                              0.0s
 <span class="o">=&gt;</span> <span class="o">[</span>internal] load metadata <span class="k">for </span>docker.io/library/ubuntu:12.04                                   1.5s
 <span class="o">=&gt;</span> <span class="o">[</span>auth] library/ubuntu:pull token <span class="k">for </span>registry-1.docker.io                                     0.0s
 <span class="o">=&gt;</span> <span class="o">[</span>internal] load .dockerignore                                                                 0.0s
 <span class="o">=&gt;</span> <span class="o">=&gt;</span> transferring context: 2B                                                                   0.0s
 <span class="o">=&gt;</span> <span class="o">[</span>1/9] FROM docker.io/library/ubuntu:12.04@sha256:18305429afa14ea462f810146ba44d4363ae76e4c8d  0.0s
 <span class="o">=&gt;</span> <span class="o">=&gt;</span> resolve docker.io/library/ubuntu:12.04@sha256:18305429afa14ea462f810146ba44d4363ae76e4c8d  0.0s
 <span class="o">=&gt;</span> <span class="o">[</span>internal] load build context                                                                 0.0s
 <span class="o">=&gt;</span> <span class="o">=&gt;</span> transferring context: 42B                                                                  0.0s
 <span class="o">=&gt;</span> CACHED <span class="o">[</span>2/9] RUN <span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-e</span> <span class="s1">'s/archive.ubuntu.com/old-releases.ubuntu.com/g'</span> /etc/apt/sources  0.0s
 <span class="o">=&gt;</span> CACHED <span class="o">[</span>3/9] RUN <span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-e</span> <span class="s1">'s/security.ubuntu.com/old-releases.ubuntu.com/g'</span> /etc/apt/source  0.0s
 <span class="o">=&gt;</span> ERROR <span class="o">[</span>4/9] RUN apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nb">install</span> <span class="nt">-y</span>  bash  vim  build-essential  gcc-4.4  g  0.2s
<span class="nt">------</span>                                                                                                 
 <span class="o">&gt;</span> <span class="o">[</span>4/9] RUN apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nb">install</span> <span class="nt">-y</span> 	bash 	vim 	build-essential 	gcc-4.4 	gcc-multilib 	g++-4.4 	perl 	wget 	patch 	libncurses5-dev 	libx11-dev libxrandr-dev xorg-dev 	make:
0.202 qemu: uncaught target signal 11 <span class="o">(</span>Segmentation fault<span class="o">)</span> - core dumped
0.206 E: Method http has died unexpectedly!
0.207 E: Sub-process http received a segmentation fault.
<span class="nt">------</span>

 1 warning found <span class="o">(</span>use docker <span class="nt">--debug</span> to <span class="nb">expand</span><span class="o">)</span>:
 - InvalidBaseImagePlatform: Base image ubuntu:12.04 was pulled with platform <span class="s2">"linux/amd64"</span>, expected <span class="s2">"linux/arm64"</span> <span class="k">for </span>current build <span class="o">(</span>line 1<span class="o">)</span>
Dockerfile:6
<span class="nt">--------------------</span>
   5 |     
   6 | <span class="o">&gt;&gt;&gt;</span> RUN apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nb">install</span> <span class="nt">-y</span> <span class="se">\</span>
   7 | <span class="o">&gt;&gt;&gt;</span> 	bash <span class="se">\</span>
   8 | <span class="o">&gt;&gt;&gt;</span> 	vim <span class="se">\</span>
   9 | <span class="o">&gt;&gt;&gt;</span> 	build-essential <span class="se">\</span>
  10 | <span class="o">&gt;&gt;&gt;</span> 	gcc-4.4 <span class="se">\</span>
  11 | <span class="o">&gt;&gt;&gt;</span> 	gcc-multilib <span class="se">\</span>
  12 | <span class="o">&gt;&gt;&gt;</span> 	g++-4.4 <span class="se">\</span>
  13 | <span class="o">&gt;&gt;&gt;</span> 	perl <span class="se">\</span>
  14 | <span class="o">&gt;&gt;&gt;</span> 	wget <span class="se">\</span>
  15 | <span class="o">&gt;&gt;&gt;</span> 	patch <span class="se">\</span>
  16 | <span class="o">&gt;&gt;&gt;</span> 	libncurses5-dev <span class="se">\</span>
  17 | <span class="o">&gt;&gt;&gt;</span> 	libx11-dev libxrandr-dev xorg-dev <span class="se">\</span>
  18 | <span class="o">&gt;&gt;&gt;</span> 	make
  19 |     
<span class="nt">--------------------</span>
ERROR: failed to solve: process <span class="s2">"/bin/sh -c apt-get update &amp;&amp; apt-get install -y </span><span class="se">\t</span><span class="s2">bash </span><span class="se">\t</span><span class="s2">vim </span><span class="se">\t</span><span class="s2">build-essential </span><span class="se">\t</span><span class="s2">gcc-4.4 </span><span class="se">\t</span><span class="s2">gcc-multilib </span><span class="se">\t</span><span class="s2">g++-4.4 </span><span class="se">\t</span><span class="s2">perl </span><span class="se">\t</span><span class="s2">wget </span><span class="se">\t</span><span class="s2">patch </span><span class="se">\t</span><span class="s2">libncurses5-dev </span><span class="se">\t</span><span class="s2">libx11-dev libxrandr-dev xorg-dev </span><span class="se">\t</span><span class="s2">make"</span> did not <span class="nb">complete </span>successfully: <span class="nb">exit </span>code: 100

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/307xpyqphklv4cd5fc8tmb1eg
</code></pre></div></div> <h3 id="rosetta-키기">Rosetta 키기</h3> <p>내가 전에 핀토스 미리 해보려고 블로그 찾아보다가 이 설정을 꺼야 x86으로 확실하게 돌아간다고 해서 꺼놨었는데, 이거 키니까 잘 된다.</p> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>이전에 핀토스 미리 해보려고 할때, 어떤 블로그 보고</p> <p>저걸 꺼야 x86으로 정확히 작동한다고 해서 꺼놨었는데, 이게 문제였다.</p> <blockquote> <p>Docker에서는 <code class="language-plaintext highlighter-rouge">--platform=linux/amd64</code> 옵션으로 x86 이미지를 실행할 때, 내부적으로 QEMU를 이용해 에뮬레이션함.</p> <p>이때 Rosetta를 활성화하면 QEMU가 더 안정적이고 빠르게 동작함. 특히 오래된 리눅스 이미지(Ubuntu 12.04 같은 거)에서 apt-get이 죽거나 세그폴트 나는 경우, 대부분 Rosetta 꺼져 있어서 생기는 문제임.</p> </blockquote> <h3 id="빌드-성공">빌드 성공</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker build <span class="nt">--platform</span><span class="o">=</span>linux/amd64 <span class="nt">-t</span> pintos <span class="nb">.</span>
</code></pre></div></div> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%201.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="start">Start</h1> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="o">[</span>http://www.stanford.edu/class/cs140/projects/pintos/pintos.tar.gz]<span class="o">(</span>http://www.stanford.edu/class/cs140/projects/pintos/pintos.tar.gz<span class="o">)</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">tar </span>xvf pintos.tar.
</code></pre></div></div> <h3 id="파일-권한-에러-해결">파일 권한 에러 해결</h3> <p>진짜 이거때문에 개고생했음…</p> <p>Stanford에서 받은 파일이 권한이 없는 채로 주는데,</p> <p>윈도우에서는 원래 상관이 없어서 괜찮은데,</p> <p>맥에서는 실행 불가능한채로 압축이 풀어져서 문제가 발생함.</p> <p>근데 이게 또 이 상태로 Docker로 옮겨서 그냥 Permission Denied 해버리니까</p> <p>이게 도대체 왜 그런지 GPT 써도 잘 몰랐음.</p> <p>Docker 넘어가기 전부터 원본 파일 권한이 부족해서 그런건데 Docker 파일 공유 방식때문인줄알고 삽질함</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xattr <span class="nt">-rc</span> pintos/
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> <span class="nt">-R</span> u+rwX,go+rX pintos/
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find pintos/ <span class="nt">-type</span> f <span class="nt">-exec</span> <span class="nb">ls</span> <span class="nt">-l</span> <span class="o">{}</span> <span class="se">\;</span>
</code></pre></div></div> <p>위 명령어 하면 아래처럼 file permission이 뜸</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-rw-r--r--</span>@ 1 hoon  staff  333  9 27  2012 pintos//src/Makefile.kernel
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  1486  9 27  2012 pintos//src/misc/bochs-2.2.6-build.sh
<span class="nt">-rw-r--r--</span>@ 1 hoon  staff  511  9 27  2012 pintos//src/misc/bochs-2.2.6-solaris-link.patch
</code></pre></div></div> <p>여기 보면 실행 가능한 파일 (.sh) 파일 등에 x 표시가 생길것임.</p> <p>또는 실행 가능한 파일만 권한 보려면</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find pintos/ <span class="nt">-type</span> f <span class="nt">-perm</span> <span class="nt">-111</span> <span class="nt">-exec</span> <span class="nb">ls</span> <span class="nt">-l</span> <span class="o">{}</span> <span class="se">\;</span>
</code></pre></div></div> <p>아래처럼 됐다면 성공</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  1486  9 27  2012 pintos//src/misc/bochs-2.2.6-build.sh
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  4096  9 27  2012 pintos//src/tests/make-grade
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  2951  9 27  2012 pintos//src/utils/backtrace
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  4563  9 27  2012 pintos//src/utils/pintos-mkdisk
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  429  9 27  2012 pintos//src/utils/pintos-gdb
<span class="nt">-rwxr-xr-x</span>@ 1 hoon  staff  29821  9 27  2012 pintos//src/utils/pintos
</code></pre></div></div> <h3 id="컨테이너-들어가기-전에-로컬에서-편하게-bochs-파일-수정">컨테이너 들어가기 전에 로컬에서 편하게 <code class="language-plaintext highlighter-rouge">bochs</code> 파일 수정</h3> <p><code class="language-plaintext highlighter-rouge">pintos/src/misc/bochs-2.2.6-build.sh</code></p> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%202.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>다음 내용으로 수정</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">CFGOPTS</span><span class="o">=</span><span class="s2">"--enable-cpu-level=6 --with-x --with-x11 --with-term --with-nogui --prefix=</span><span class="nv">$DSTDIR</span><span class="s2">"</span>
</code></pre></div></div> <h1 id="docker-run">docker run</h1> <p>드디어 제대로 실행해보자.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">--platform</span><span class="o">=</span>linux/amd64 <span class="nt">-it</span> <span class="nt">-p</span> 80:80 <span class="se">\</span>
	<span class="nt">-v</span> /Users/hoon/github/os20201118_20201032/pintos:/root/pintos <span class="se">\</span>
	<span class="nt">--name</span> pintos pintos
</code></pre></div></div> <h1 id="boch-266-설치">boch 2.6.6 설치</h1> <ul> <li> <p>위에서 VSCode로 bochs 수정 안했다면</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">cd </span>pintos/src/misc
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  vi bochs-2.2.6-build.sh
</code></pre></div> </div> <blockquote> <p>i : 수정 모드 수정… ESC : 수정 모드 나가기 :wq : 저장 후 종료</p> <ul> <li>다음 내용으로 수정</li> </ul> </blockquote> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nv">CFGOPTS</span><span class="o">=</span><span class="s2">"--enable-cpu-level=6 --with-x --with-x11 --with-term --with-nogui --prefix=</span><span class="nv">$DSTDIR</span><span class="s2">"</span>
</code></pre></div> </div> </li> </ul> <blockquote class="block-warning"> <p>📢</p> <p>만약 Container를 삭제해서 다시 Run한다면 이 과정을 다시 해줘야한다.</p> </blockquote> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /root/pintos/src/misc
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">env </span><span class="nv">SRCDIR</span><span class="o">=</span>/root/ <span class="nv">PINTOSDIR</span><span class="o">=</span>/root/pintos/ <span class="nv">DSTDIR</span><span class="o">=</span>/usr/local ./bochs-2.2.6-build.sh
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which bochs
bochs <span class="nt">-v</span>
</code></pre></div></div> <h1 id="test">Test</h1> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /root/pintos/src/threads
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>build
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pintos <span class="nt">-q</span> run alarm-multiple
</code></pre></div></div> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%203.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="github-repo-생성">github repo 생성</h1> <p><a href="https://github.com/hoonably/os20201118_20201032">[https://github.com/hoonably/os20201118_20201032](https://github.com/hoonably/os20201118_20201032)</a></p> <h1 id="rootpintossrc-에서-시작하기">root/pintos/src 에서 시작하기</h1> <p>할때마다 root 폴더에서 시작하는방법</p> <p>한번 쳐주면 항상 적용됨.</p> <p>도커파일에 다음 줄을 넣어도 되긴 함.</p> <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WORKDIR</span><span class="s"> /root/pintos/src</span>
</code></pre></div></div> <p>근데 이미 빌드했으니 아래 명령어를 컨테이너 내부에서 치면 됨</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'cd /root/pintos/src'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
</code></pre></div></div> <ul> <li> <p>이후 bashrc 상황</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">cat</span> ~/.bashrc
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ... 맨 아래줄에 다음 두줄이 있으면 성공
  <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$PATH</span><span class="s2">:/root/pintos/src/utils"</span>
  <span class="nb">cd</span> /root/pintos/src
    
</code></pre></div> </div> </li> </ul> <h1 id="한번-run-이후-container-시작">한번 Run 이후 Container 시작</h1> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%204.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>컨테이너에서 <code class="language-plaintext highlighter-rouge">exit</code> 를 했다면,</p> <p>위처럼 Container는 남아있고, 중지되어있을 것이다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker start <span class="nt">-ai</span> pintos
</code></pre></div></div> <p>나중에 또 같은 방식으로 <code class="language-plaintext highlighter-rouge">exit</code> 하고 반복하면 된다.</p> <h1 id="branch">Branch</h1> <h2 id="브랜치-생성">브랜치 생성</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout <span class="nt">-b</span> <span class="o">[</span>your-branch-name]
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout <span class="nt">-b</span> feat/alarm-clock
</code></pre></div></div> <hr/> <h3 id="-만든-브랜치를-github에-푸시">📤 만든 브랜치를 GitHub에 푸시</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git push <span class="nt">-u</span> origin <span class="o">[</span>your-branch-name]
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git push <span class="nt">-u</span> origin feat/alarm-clock
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">u</code> 옵션은 이후 <code class="language-plaintext highlighter-rouge">git push</code>/<code class="language-plaintext highlighter-rouge">pull</code> 시 브랜치 이름 생략 가능하게 연결해줌</li> <li> <p>다음부터 그냥 push 해도 됨.</p> </li> <li> <p>왜 <code class="language-plaintext highlighter-rouge">feat/</code> 를 쓰는가?</p> <p>✅ 브랜치 이름 패턴</p> <table> <thead> <tr> <th>Prefix</th> <th>의미</th> <th>예시 브랜치명</th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">feat/</code></td> <td>새로운 기능 추가</td> <td><code class="language-plaintext highlighter-rouge">feat/alarm-clock</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">fix/</code></td> <td>버그 수정</td> <td><code class="language-plaintext highlighter-rouge">fix/overflow-bug</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">refactor/</code></td> <td>코드 리팩토링 (기능 변화 X)</td> <td><code class="language-plaintext highlighter-rouge">refactor/thread-init</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">test/</code></td> <td>테스트 코드 추가/수정</td> <td><code class="language-plaintext highlighter-rouge">test/userprog-tests</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">doc/</code></td> <td>문서, README 수정</td> <td><code class="language-plaintext highlighter-rouge">doc/setup-instructions</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">chore/</code></td> <td>빌드, 설정 변경 등 잡일</td> <td><code class="language-plaintext highlighter-rouge">chore/dockerfile-update</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">hotfix/</code></td> <td>급한 버그 수정 (배포 후)</td> <td><code class="language-plaintext highlighter-rouge">hotfix/build-crash</code></td> </tr> </tbody> </table> <hr/> <p>✅ 왜 이렇게 쓰나?</p> <ul> <li>협업 중에 브랜치가 많아질 때 → <strong>이름만 보고 용도 파악 가능</strong></li> <li>GitHub Pull Request에서 <strong>자동 정렬이나 필터도 편리함</strong></li> <li>팀 내부에서 <strong>일관된 스타일 유지 가능</strong></li> <li>일부 자동화 도구(CI/CD, Release notes)와도 잘 호환됨</li> </ul> </li> <li>VSCode에서 한다면 이렇게 커밋 어디에 하는건지 확인해 볼 수 있음</li> </ul> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%205.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="github-pull-이후-error">Github Pull 이후 Error</h1> <p>이건 맥에서 발생한 것은 아니고, 팀원 윈도우에서 git pull 해온 후 .sh 파일을 실행했을 때 나는 문제다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@04fedab3f530:~/pintos/src/misc# <span class="nb">env </span><span class="nv">SRCDIR</span><span class="o">=</span>/root/ <span class="nv">PINTOSDIR</span><span class="o">=</span>/root/pintos/ <span class="nv">DSTDIR</span><span class="o">=</span>/usr/local bash ./bochs-2.2.6-build.sh

./bochs-2.2.6-build.sh: line 2: <span class="s1">$'</span><span class="se">\r</span><span class="s1">'</span>: <span class="nb">command </span>not found
./bochs-2.2.6-build.sh: line 41: syntax error: unexpected end of file
</code></pre></div></div> <ol> <li> <p><strong><code class="language-plaintext highlighter-rouge">$'\r': command not found</code></strong></p> <p>이 메시지는 파일이 <strong>Windows 스타일 줄바꿈 (CRLF)</strong> 으로 저장되어 있어서 발생하는 것입니다. 유닉스/리눅스에서는 <strong>LF (\n)</strong> 줄바꿈만 사용해야 하므로, 이 스크립트는 리눅스에서 직접 실행되기 전에 포맷을 변환해야 합니다.</p> </li> <li> <p><strong><code class="language-plaintext highlighter-rouge">syntax error: unexpected end of file</code></strong></p> <p>줄바꿈 문제로 인해 쉘이 스크립트의 구조를 제대로 해석하지 못해 끝부분에서 문법 오류가 발생한 것입니다.</p> </li> </ol> <ul> <li>윈도우에서 git을 설치하면 기본적으로 다음 설정인데, 이게 문제다.</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>core.autocrlf<span class="o">=</span><span class="nb">true</span>
</code></pre></div></div> <p>이 설정은:</p> <ul> <li><strong>clone/pull 할 때 → CRLF로 변환</strong></li> <li>commit/push 할 때 → LF로 되돌림</li> </ul> <p>즉, 친구가 pull할 때 <code class="language-plaintext highlighter-rouge">.sh</code> 파일이 CRLF로 바뀌어버린 것이다.</p> <p>Docker 우분투 컨테이너는 리눅스니까 CRLF 해석 못 함 → 에러 발생</p> <h3 id="해결방법-️">해결방법 ⭐️</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> core.autocrlf  <span class="c"># 현재 설정 확인</span>
</code></pre></div></div> <table> <thead> <tr> <th>결과</th> <th>의미</th> <th> </th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">true</code></td> <td>윈도우용: pull할 때 CRLF, push할 때 LF</td> <td> </td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">input</code></td> <td>맥/리눅스용: pull할 때 LF 유지, push할 때 LF</td> <td> </td> </tr> <tr> <td>(아무것도 없음)</td> <td>기본값 사용 중 (보통 OS에 따라 다르게 작동)</td> <td><br/>- <code class="language-plaintext highlighter-rouge">input</code> 으로 변경하기</td> </tr> </tbody> </table> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> core.autocrlf input
</code></pre></div></div> <h3 id="이미-받은-파일-고치기">이미 받은 파일 고치기</h3> <p>그냥 직접 줄바꿈 스타일을 바꿔주는거다.</p> <p>근데 .sh파일 다른것도 많고 이건 그냥 임시방편이니 다시 pull하는걸 추천.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/\r$//'</span> bochs-2.2.6-build.sh
</code></pre></div></div> <h1 id="ff">FF?</h1> <p>VSCode로 보면 다음과 같이 FF가 들어간 신기한 문자가 있다.</p> <figure> <picture> <img src="/files/2025-03-20-pintos-setting/image%206.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>이 <code class="language-plaintext highlighter-rouge">FF</code>는 <strong>Form Feed (줄 바꿈 명령 중 하나)</strong></p> <p>ASCII 코드로는 <code class="language-plaintext highlighter-rouge">0x0C</code> (또는 <code class="language-plaintext highlighter-rouge">^L</code>) 이고,</p> <p>터미널에서는 <strong>페이지 넘김</strong> 역할을 하던 예전 문자</p> <hr/> <ul> <li>예전 교재/에디터에서 복붙한 코드</li> <li>누군가 <code class="language-plaintext highlighter-rouge">.c</code> 파일에 <code class="language-plaintext highlighter-rouge">^L</code> 넣어서 구분자처럼 쓰던 습관</li> <li>핀토스나 오래된 유닉스 기반 코드에서 가끔 보임.</li> <li>VS Code가 특별히 보여주는 거고, <strong>오류는 아님</strong></li> </ul>]]></content><author><name></name></author><category term="Study"/><category term="CS"/><summary type="html"><![CDATA[메모: docker start -ai pintos]]></summary></entry><entry><title type="html">SVDQuant: Absorbing Outliers by Low-Rank Components for 4-Bit Diffusion Models</title><link href="https://hoonably.github.io/blog/svdquant/" rel="alternate" type="text/html" title="SVDQuant: Absorbing Outliers by Low-Rank Components for 4-Bit Diffusion Models"/><published>2025-03-05T16:28:23+00:00</published><updated>2025-03-05T16:28:23+00:00</updated><id>https://hoonably.github.io/blog/svdquant</id><content type="html" xml:base="https://hoonably.github.io/blog/svdquant/"><![CDATA[<table class="simple-table" id="1ae451cf-7b79-805c-93cd-e196dc0bdeb9"><tbody><tr id="1ae451cf-7b79-808c-943f-eac9eb5f2eba"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">ArXiv</th><td class="" id="L|H:" style="width:580.5px"><a href="https://arxiv.org/abs/2411.05007">https://arxiv.org/abs/2411.05007</a></td></tr><tr id="1ae451cf-7b79-8003-aee0-df288cea6508"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Project Page</th><td class="" id="L|H:" style="width:580.5px"><a href="https://hanlab.mit.edu/projects/svdquant">https://hanlab.mit.edu/projects/svdquant</a></td></tr><tr id="1ae451cf-7b79-80e1-8c89-e694ec013045"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Github Code</th><td class="" id="L|H:" style="width:580.5px"><a href="https://github.com/mit-han-lab/nunchaku">https://github.com/mit-han-lab/nunchaku</a></td></tr><tr id="1af451cf-7b79-800d-bf70-cf7f29ae2f57"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Demo</th><td class="" id="L|H:" style="width:580.5px"><a href="https://svdquant.mit.edu/">https://svdquant.mit.edu/</a></td></tr><tr id="241451cf-7b79-80d6-a6c2-ce2a5cea5dce"><th class="simple-table-header-color simple-table-header" id="MApI" style="width:125.5px">Affiliation</th><td class="" id="L|H:" style="width:580.5px">MIT, NVIDIA, CMU, Princeton, UC Berkeley, SJTU, Pika Labs</td></tr></tbody></table> <figure class="block-color-teal_background callout" id="1ae451cf-7b79-80b4-b7a9-d4f362a314d8" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">💡</span></div><div style="width:100%"> <strong>Key Differentiator</strong><br/>“Outlier Absorption Using Singular Value Decomposition”<figure class="image" id="1b4451cf-7b79-80d5-8378-e104c018ad62"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image.webp" style="width:643.984375px"/></picture></figure></div></figure> <p class="" id="1b9451cf-7b79-8032-b7ef-e5cec973616b"> </p> <p class="" id="1b9451cf-7b79-8094-97e0-e2c246b2c531"> </p> <h1 class="" id="1b9451cf-7b79-8012-b7d6-e14efa74183b">Song Han?</h1> <blockquote class="" id="1b9451cf-7b79-80aa-8170-e45a21f2c364">Song Han is an associate professor at MIT EECS. He earned his PhD from Stanford, pioneering efficient AI computing techniques such as “Deep Compression” (pruning, quantization) and the “Efficient Inference Engine,” which first introduced weight sparsity to modern AI chips, making it one of the top-5 most cited papers in the 50-year history of ISCA (1953-2023). His innovations, including TinyML and hardware-aware neural architecture search (Once-for-All Network), have advanced AI model deployment on resource-constrained devices.</blockquote> <figure class="image" id="1b9451cf-7b79-80d3-a2d4-c3a2854934a1"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%201.webp" style="width:576px"/></picture></figure> <p class="" id="1b9451cf-7b79-80e5-8edc-f584a3a713c0"> </p> <p class="" id="1b9451cf-7b79-80f8-8222-ce544cfed97c"> </p> <p class="" id="1b9451cf-7b79-8021-b819-f144582b675e"> </p> <p class="" id="1b9451cf-7b79-8088-bc0d-d678ad8a06cd"> </p> <p class="" id="1b9451cf-7b79-8053-b1db-cd0ed566f6a7"> </p> <p class="" id="1b9451cf-7b79-80a4-8ce2-d75baf6f5327"> </p> <p class="" id="1af451cf-7b79-8064-a8a6-d81951bce9ee"> </p> <h1 class="" id="1af451cf-7b79-8080-9bf7-e6ca0ea8ac06">1. Introduction</h1> <div class="column-list" id="1b0451cf-7b79-80cc-89bb-c5061bd83aa2"><div class="column" id="1b0451cf-7b79-803c-ad51-d3337be6cf87" style="width:43.75%"><figure class="image" id="1af451cf-7b79-80b9-b6cc-ef3c8c412aa2"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%202.webp" style="width:336px"/></picture></figure></div><div class="column" id="1b0451cf-7b79-8014-bc51-ce5bd0a7be1d" style="width:56.25%"><p class="" id="1ae451cf-7b79-809f-a365-e27629e5708d">LLM과 비교했을 때, 모델 사이즈에 따라 계산 비용이 빠르게 증가한다.</p><p class="" id="1af451cf-7b79-80d2-a35e-da017eca03f3">Moore’s law가 slow down 함으로서, 저렴한 추론(low-precision inference) 으로 전환하는중 </p><p class="" id="1af451cf-7b79-8098-80f9-eb7a6d6223db">→ 4bit floating point (FP4)가 대세임</p><p class="" id="1b0451cf-7b79-8042-aca3-ebbe11f66404"> </p></div></div> <div class="column-list" id="1b0451cf-7b79-8032-a22b-d1683814c2c5"><div class="column" id="1b0451cf-7b79-80bc-8221-c4aeb1973a4e" style="width:37.5%"><figure class="image" id="1af451cf-7b79-80ac-b07c-ef4740e29565"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%203.webp" style="width:144px"/></picture></figure><p class="" id="1b0451cf-7b79-8053-bbcc-d14dba1639fd"> </p></div><div class="column" id="1b0451cf-7b79-80f9-82f2-f542e8f4941e" style="width:62.5%"><p class="" id="1b0451cf-7b79-80eb-9f9b-d476809a077e">LLM</p><p class="" id="1b0451cf-7b79-80fb-bb0b-c83f6b66c59f">latency는 주로 가중치(weight) 로딩 속도에 의해 결정</p><p class="" id="1b0451cf-7b79-8082-8d58-e14653f5a1e3">"가중치만 양자화(weight-only quantization)" 해도 속도를 개선</p><p class="" id="1b0451cf-7b79-8099-8d68-eda637d51f0a"> </p><p class="" id="1b0451cf-7b79-806c-a2dc-c0c397f6c725">Diffusion 모델</p><p class="" id="1b0451cf-7b79-80a7-92ee-d72568410dc9">레이턴시는 가중치를 불러오는 속도가 아니라, 연산량 자체가 병목</p><p class="" id="1b0451cf-7b79-8049-9f28-d3c199676790">왜냐하면 가중치만 4비트로 줄여도 활성화값이 16비트이면, 연산 과정에서 16비트로 다시 변환(upcast)되므로 연산량이 줄어들지 않음.</p><p class="" id="1b0451cf-7b79-80fe-b855-e236e83dd90e">결국 연산량을 줄이려면 가중치(weight)뿐만 아니라 <strong> 활성화값(activation)</strong>도 함께 4비트로 양자화해야 함.</p></div></div> <figure class="image" id="1b0451cf-7b79-8094-8134-c9ea7d1ff191"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%204.webp" style="width:709.984375px"/></picture></figure> <p class="" id="1b3451cf-7b79-8020-98fd-e38dfe0b7963"> </p> <figure class="block-color-yellow_background callout" id="1b4451cf-7b79-80d5-8357-e37ef77f7fa0" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">📢</span></div><div style="width:100%"><li style="list-style-type:disc"> <strong>Input Channel</strong> → 원래 Activation에서 나온 입력 채널</li><li style="list-style-type:disc"> <strong>Channel</strong> → Weight의 각 채널</li></div></figure> <p class="" id="1b4451cf-7b79-8020-a22d-eda7068c31d3"> </p> <h3 class="" id="1b0451cf-7b79-8031-b656-c73c4e468076">1. 기존 4비트 양자화(4-bit Quantization)의 문제점</h3> <li style="list-style-type:disc">가중치(Weight)와 활성화값(Activation) 모두 4비트로 줄이면 품질이 크게 저하될 가능성이 높음.</li> <li style="list-style-type:disc">특히 기존 방법(예: Smoothing)은 가중치와 활성화값 사이에서 Outlier를 이동시키는 방식을 사용했지만,Diffusion 모델에서는 Outlier가 양쪽(W, X) 모두에서 심각하게 발생하므로 효과적이지 않음.<li style="list-style-type:circle">기존 방식은 활성화값(X)에서 Outlier를 제거하려고 하면 가중치(W)로 이동하고, 반대로 하면 X에 Outlier가 남는 문제 발생.</li></li> <hr id="1b0451cf-7b79-805b-82c0-fa3c3c42a9a6"/> <h3 class="" id="1b0451cf-7b79-80d7-8c42-d6af561178a5">2. SVDQuant의 핵심 아이디어</h3> <li style="list-style-type:disc">Outlier를 단순히 이동하는 것이 아니라, " <strong>흡수</strong>"하는 방법을 사용함.</li> <li style="list-style-type:disc">저비용의 "Low-Rank Branch"를 추가하여 Outlier를 가중치(W)에서 흡수함.</li> <li style="list-style-type:disc">이를 위해 SVD(Singular Value Decomposition, 특이값 분해) 기법을 활용하여 가중치를 두 개의 성분으로 분해함.</li> <hr id="1b0451cf-7b79-8051-961d-cfd87abd2a58"/> <h3 class="" id="1b0451cf-7b79-80fd-8208-c69bf137b1d1">3. SVDQuant의 단계별 동작 방식</h3> <p class="" id="1b0451cf-7b79-8066-829c-c3df956b74ae">1. Outlier 이동 (Smoothing)</p> <li style="list-style-type:disc">먼저 Outlier를 활성화값(X)에서 가중치(W)로 이동함.</li> <li style="list-style-type:disc">이를 통해 활성화값(X)이 더 균일해져서 4비트 양자화가 더 쉬워짐.</li> <p class="" id="1b0451cf-7b79-8029-8c6a-fada4f9ac553">2. SVD(특이값 분해)를 적용하여 가중치(W)를 두 개의 성분으로 분해</p> <li style="list-style-type:disc">W → L1L2(저순위 성분) + 잔여 성분(W - L1L2)로 분리</li> <li style="list-style-type:disc">L1L2(저순위 성분)은 16비트로 유지하고, W - L1L2(잔여 성분)만 4비트로 양자화</li> <li style="list-style-type:disc">즉, 저순위 성분(Low-Rank Component)이 Outlier를 흡수하면서 4비트 양자화가 더 쉬워짐.</li> <p class="" id="1b0451cf-7b79-801a-998e-eac0ba146fa9">3. 저순위 성분을 따로 계산하면 메모리 액세스 오버헤드가 증가하는 문제 발생</p> <li style="list-style-type:disc">즉, L1L2를 별도로 처리하면 연산 속도가 느려지는 문제가 생김.</li> <li style="list-style-type:disc">기본적으로 4비트 연산의 속도를 높이려고 했는데, 저순위 연산이 추가되면 오히려 느려질 수 있음.</li> <p class="" id="1b0451cf-7b79-80af-be9b-cee524284df7">4. 이를 해결하기 위해 전용 추론 엔진(Nunchaku) 설계</p> <li style="list-style-type:disc">Nunchaku 엔진은 4비트 양자화 연산과 저순위 연산을 함께 최적화하여 오버헤드를 줄임.</li> <li style="list-style-type:disc">즉, L1L2(저순위 연산)와 4비트 연산을 함께 처리하는 커널(fusion kernel)로 변환하여 성능을 최적화.</li> <li style="list-style-type:disc">이를 통해 추가적인 연산량이 생기더라도 실제로는 4비트 연산의 속도를 향상할 수 있도록 설계됨.</li> <p class="" id="1b0451cf-7b79-8027-8d85-d72e2a8500c4"> </p> <p class="" id="1b0451cf-7b79-8040-b088-e9573a3875ea"> </p> <details><summary style="font-weight:600;font-size:1.25em;line-height:1.3;margin:0"> <strong>기존 방식(SmoothQuant, AWQ)과 SVDQuant의 차이</strong></summary><div class="indented"><table class="simple-table" id="1b0451cf-7b79-80e9-a7be-e57d2b8883d8"><tbody><tr id="1b0451cf-7b79-8035-9773-e1ac9754aafa"><td class="" id=":Vib">방법</td><td class="" id="uAUW">방식</td><td class="" id="uBN[" style="width:229.5625px">Outlier 처리 방식</td><td class="" id="\ab\">적용 대상</td><td class="" id="d^ui">문제점</td></tr><tr id="1b0451cf-7b79-80d3-b1a1-fa2a22528041"><td class="" id=":Vib"> <strong>SmoothQuant (2023)</strong></td><td class="" id="uAUW">W4A4</td><td class="" id="uBN[" style="width:229.5625px">Input Channel(Activation) → Channel(Weight)</td><td class="" id="\ab\">LLM(대형 언어 모델)</td><td class="" id="d^ui">Outlier가 가중치에 누적됨</td></tr><tr id="1b0451cf-7b79-80a7-b747-d8244d0ca7e5"><td class="" id=":Vib"> <strong>AWQ (2024)</strong></td><td class="" id="uAUW">W4A4</td><td class="" id="uBN[" style="width:229.5625px"> <strong>가중치 중 중요한 부분을 보존하여 양자화</strong></td><td class="" id="\ab\">LLM</td><td class="" id="d^ui">Diffusion 모델에서는 한계 가능성</td></tr><tr id="1b0451cf-7b79-80a2-87d0-ee757edac464"><td class="" id=":Vib"> <strong>SVDQuant (2024)</strong></td><td class="" id="uAUW">W4A4</td><td class="" id="uBN[" style="width:229.5625px"> <strong>저순위(Low-Rank) 성분으로 Outlier 흡수</strong></td><td class="" id="\ab\">Diffusion 모델 최적화</td><td class="" id="d^ui">추가 연산을 해결해야 함</td></tr></tbody></table><h3 class="" id="1b4451cf-7b79-808d-b9f5-caf9daa665ef"> <strong>1. SmoothQuant (2023) – Activation에서 Weight로 이상치 이동</strong></h3><p class="" id="1b4451cf-7b79-809a-907c-c266d6047b9c">SmoothQuant의 핵심 아이디어는  <strong>활성화값(Activation)에서 발생하는 이상치를 가중치(Weight)로 이동</strong>시키는 거야​Li 등 - 2024 - SVDQuan….</p><li style="list-style-type:disc"> <strong>기존 문제</strong><li style="list-style-type:circle">Transformer 기반 모델에서 Self-Attention 연산이 많아서  <strong>활성화값(Activation)의 범위가 넓어지고 이상치가 발생</strong>하는 경우가 많아.</li><li style="list-style-type:circle">이를 8-bit이나 4-bit로 양자화하면, 작은 값들은 모두 0이 되고, 정보 손실이 심해짐.</li></li><li style="list-style-type:disc"> <strong>해결 방법</strong><li style="list-style-type:circle">활성화값(Activation)의 채널별 스케일링을 적용하여,  <strong>이상치를 가중치(Weight) 쪽으로 이동</strong>시킴.</li><li style="list-style-type:circle">즉, 원래 Activation 값이 크면, 해당 채널을 스케일링해서 줄이고, 대신 그 값을 Weight에서 보상해주는 방식.</li><li style="list-style-type:circle">이렇게 하면,  <strong>Activation 값이 양자화할 때 손실 없이 더 균등하게 분포할 수 있음</strong>.</li></li><li style="list-style-type:disc"> <strong>한계</strong><li style="list-style-type:circle">Weight 쪽으로 이상치를 몰아넣으면,  <strong>Weight의 값이 커지고, Weight 양자화 시 오류가 커질 가능성</strong>이 있음.</li><li style="list-style-type:circle">따라서  <strong>Weight를 4-bit로 양자화할 경우 정보 손실이 발생할 수 있음</strong>.</li></li><hr id="1b4451cf-7b79-80d4-b6ae-c77a2e75b979"/><h3 class="" id="1b4451cf-7b79-80a1-b032-fc72c2e78684"> <strong>2. AWQ (Activation-aware Weight Quantization, 2024) – Weight에서 Activation으로 이상치 이동</strong></h3><p class="" id="1b4451cf-7b79-80a8-9004-e985dc396261">AWQ는  <strong>Weight의 이상치를 줄이기 위해 Activation으로 분산시키는 방식</strong></p><li style="list-style-type:disc"> <strong>기존 문제</strong><li style="list-style-type:circle">SmoothQuant 방식처럼 이상치를 Weight 쪽으로 이동시키면, Weight의 크기가 커져서  <strong>Weight를 4-bit로 양자화할 때 정보 손실이 발생</strong>할 가능성이 높아짐.</li><li style="list-style-type:circle">특히, Weight에 이상치가 많으면,  <strong>스케일링을 적용해도 양자화 오류가 커지고 성능이 떨어지는 문제</strong>가 발생.</li></li><li style="list-style-type:disc"> <strong>해결 방법</strong><li style="list-style-type:circle">대신  <strong>Weight에서 Activation으로 일부 이상치를 이동시켜서, Weight가 양자화될 때 정보 손실을 최소화</strong>함.</li><li style="list-style-type:circle">즉, 중요한 Weight 값을 따로 보호하고, 불필요한 큰 값을 Activation 쪽으로 이동시켜서 Weight를 더 균등한 분포로 만들도록 설계.</li></li><li style="list-style-type:disc"> <strong>한계</strong><li style="list-style-type:circle">Activation의 분포가 다시 넓어질 가능성이 있음 →  <strong>Activation을 다시 4-bit로 양자화할 경우 문제가 발생할 수도 있음</strong>.</li></li><hr id="1b4451cf-7b79-8002-96d5-f0c26ed3dad0"/><h3 class="" id="1b4451cf-7b79-8002-a31f-fdb97d4588e9"> <strong>3. SVDQuant (2024) – Outlier를 Low-Rank Component로 이동</strong></h3><p class="" id="1b4451cf-7b79-80a5-b07b-d4011ec79379">SVDQuant는 SmoothQuant와 AWQ의 문제점을 모두 해결하려고,  <strong>이상치를 이동시키는 것뿐만 아니라 Low-Rank Component로 흡수</strong>하는 방식이야​Li 등 - 2024 - SVDQuan….</p><li style="list-style-type:disc"> <strong>핵심 아이디어</strong><li style="list-style-type:circle">SmoothQuant처럼  <strong>Activation의 이상치를 Weight로 이동</strong>하면서도,</li><li style="list-style-type:circle">AWQ처럼  <strong>Weight에서 다시 Activation으로 이동하는 대신, Low-Rank Component로 분리하여 저장</strong>.</li><li style="list-style-type:circle">즉,  <strong>이상치를 양자화하지 않고, 16-bit Low-Rank Component로 유지</strong>하여 정보 손실을 최소화.</li></li><li style="list-style-type:disc"> <strong>장점</strong><li style="list-style-type:circle">SmoothQuant나 AWQ처럼  <strong>한쪽으로 이상치를 몰아넣지 않고, Low-Rank Branch가 이상치를 흡수해서 손실을 막음</strong>.</li><li style="list-style-type:circle"> <strong>Weight와 Activation 모두 균등한 분포를 가지게 되어, 양자화 오류가 줄어듦</strong>.</li><li style="list-style-type:circle">실제 실험에서도  <strong>SmoothQuant, AWQ보다 4-bit 양자화에서 성능이 뛰어남</strong>.</li></li><hr id="1b4451cf-7b79-809c-b6c1-e62cc01ddd97"/><h3 class="" id="1b4451cf-7b79-8021-8426-fe5be52ee107"> <strong>결론</strong></h3><li style="list-style-type:disc"> <strong>SmoothQuant</strong> →  <strong>Activation의 이상치를 Weight로 이동</strong> (Weight의 정보 손실 가능성 있음)</li><li style="list-style-type:disc"> <strong>AWQ</strong> →  <strong>Weight의 이상치를 Activation으로 이동</strong> (Activation의 정보 손실 가능성 있음)</li><li style="list-style-type:disc"> <strong>SVDQuant</strong> →  <strong>Weight와 Activation에서 Low-Rank Component로 이동</strong> (이상치 자체를 제거하여 정보 손실을 최소화)</li><p class="" id="1b4451cf-7b79-8047-a453-cf8f26792a35">즉,  <strong>SmoothQuant과 AWQ는 둘 중 하나만 Outlier를 발생하지 않도록 하려고 했던 접근법</strong>, 반면  <strong>SVDQuant는 Outlier 자체를 Low-Rank로 빼버리는 방식이라 정보 손실이 가장 적음</strong>.</p><p class="" id="1b4451cf-7b79-80c1-b932-f1842c5e4c74"> </p></div></details> <p class="" id="1b4451cf-7b79-8065-9f3f-f2f8ae9a15db"> </p> <p class="" id="1b4451cf-7b79-803e-a0ef-fe7b52f25ec7"> </p> <p class="" id="1b4451cf-7b79-80c0-b0a3-c337950d8bb4"> </p> <p class="" id="1b4451cf-7b79-8041-ad53-eb95341fef1f"> </p> <p class="" id="1b0451cf-7b79-80be-8bfd-f29d8f979a3a"> </p> <h1 class="" id="1b0451cf-7b79-8044-8a33-e5b0a2de789b">3 QUANTIZATION PRELIMINARY</h1> <li style="list-style-type:disc"> <strong>양자화(Quantization)의 기본 개념</strong><li style="list-style-type:circle">딥러닝에서  <strong>양자화는 연산 속도를 높이고 메모리 사용량을 줄이는 데 사용되는 방법</strong>.</li><li style="list-style-type:circle">텐서 X를 양자화하는 과정:</li><figure class="equation" id="230451cf-7b79-8022-9a55-e16bc8d9e68c"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>X</mi></msub><mo>=</mo><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">d</mi></mrow><mrow><mo fence="true">(</mo><mfrac><mi mathvariant="bold">X</mi><msub><mi>s</mi><mi>X</mi></msub></mfrac><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"></mspace><msub><mi>s</mi><mi>X</mi></msub><mo>=</mo><mfrac><mrow><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi mathvariant="bold">X</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><msub><mi>q</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow></msub></mfrac><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex"> Q_X = \mathrm{round}\left( \frac{\mathbf{X}}{s_X} \right), \quad s_X = \frac{\max(|\mathbf{X}|)}{q_\mathrm{max}}.</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="mord mathrm">round</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3631em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathbf">X</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span></span></span></span></span></div></figure></li> <li style="list-style-type:disc">여기서 QX​는  <strong>양자화된(low-bit) 값</strong>.</li> <li style="list-style-type:disc">sX는  <strong>스케일링 팩터(Scaling Factor)</strong>.</li> <li style="list-style-type:disc">qmax는  <strong>최대 양자화 값</strong>(비트 수에 따라 달라짐).</li> <li style="list-style-type:disc"> <strong>4비트 부동소수점 양자화(4-bit FP)에서는 qmax=6임.</strong></li> <li style="list-style-type:disc"> <strong>양자화된 행렬 연산</strong><li style="list-style-type:circle">선형 계층(Linear Layer)에서 입력 X와 가중치 W가 있을 때, 연산을 양자화된 값으로 근사:<figure class="equation" id="230451cf-7b79-8098-9aa3-e93ba3381b72"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="bold">X</mi><mi mathvariant="bold">W</mi></mrow><mo>≈</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>s</mi><mi>X</mi></msub><msub><mi>s</mi><mi>W</mi></msub><mo>⋅</mo><msub><mi>Q</mi><mi>X</mi></msub><msub><mi>Q</mi><mi>W</mi></msub><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathbf{XW} \approx Q(\mathbf{X}) Q(\mathbf{W}) = s_X s_W \cdot Q_X Q_W.</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">XW</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></div></figure></li><li style="list-style-type:circle">즉, 양자화된 텐서끼리 연산한 후, 스케일링 팩터 sX​sW​를 곱하여 다시 원래 값에 가깝게 복원함.</li></li> <li style="list-style-type:disc"> <strong>GPU에서 같은 비트폭(bit width)을 사용해야 하는 이유</strong><li style="list-style-type:circle"> <strong>최신 GPU에서는 입력(QX)과 가중치(QW)의 비트 수가 동일해야 연산 속도가 향상됨.</strong></li><li style="list-style-type:circle"> <strong>만약 QX와 QW의 비트 수가 다르면, 더 높은 비트 값으로 변환(upcast)되면서 속도 이점이 사라짐.</strong></li><li style="list-style-type:circle">예:<li style="list-style-type:square"> <strong>가중치(W)를 4비트로 양자화(W4)했지만, 활성화값(X)이 16비트(A16)라면?</strong><br/>→ <br/> <strong>연산 시 W4가 A16으로 업캐스트(Upcast)되어 실제 속도 향상이 없음.</strong><br/>→ 따라서, <br/> <strong>W4A4(가중치 4비트, 활성화값 4비트) 조합이 최적화된 방식.</strong>&lt;/br&gt;</li></li></li> <li style="list-style-type:disc"> <strong>W4A4 양자화에서의 문제점: Outlier(이상치)</strong><li style="list-style-type:circle"> <strong><span style="border-bottom:0.05em solid">Diffusion 모델에서는 가중치(W)와 활성화값(X) 양쪽에서 Outlier(극단적인 값)가 많이 발생</span></strong> <strong>함.</strong></li><li style="list-style-type:circle"> <strong>Outlier가 많으면 양자화 후 품질이 크게 저하됨.</strong></li><li style="list-style-type:circle">기존 해결 방법:<ol class="numbered-list" id="1b0451cf-7b79-80da-b3d7-e72c02fd8a47" start="1" type="1"><li> <strong>Quantization-Aware Training (QAT)</strong><li style="list-style-type:disc"> <strong>양자화를 고려하여 모델을 훈련하는 방식.</strong></li><li style="list-style-type:disc"> <strong>하지만, 100억 개 이상의 매개변수(예: FLUX.1 모델)를 조정하려면 계산 비용이 매우 큼.</strong></li></li></ol><ol class="numbered-list" id="1b0451cf-7b79-800f-8b55-c2d6731d8775" start="2" type="1"><li> <strong>Rotation 기법</strong> (Ashkboos et al., 2024; Liu et al., 2024c)<li style="list-style-type:disc"> <strong>가중치와 활성화값을 회전(rotation)하여 Outlier를 줄이는 방법.</strong></li><li style="list-style-type:disc"> <strong>하지만, Diffusion 모델의 "Adaptive Normalization Layer"에서는 적용이 어려움.</strong></li><li style="list-style-type:disc">이유:<li style="list-style-type:circle">Adaptive Normalization은  <strong>실행 시간(runtime) 중에 새로운 가중치를 생성</strong>.</li><li style="list-style-type:circle">따라서,  <strong>사전 계산된 회전 행렬을 적용할 수 없음.</strong></li><li style="list-style-type:circle"> <strong>실행 시간에 회전을 적용하면 연산량이 증가하여 속도가 느려짐.</strong></li></li></li></ol></li></li> <p class="" id="1b0451cf-7b79-8096-a589-d7c6648b3890"> </p> <figure class="block-color-yellow_background callout" id="1b4451cf-7b79-8085-8ee5-e934e7c60ee7" style="white-space:pre-wrap;display:flex"><div style="font-size:1.5em"><span class="icon">📢</span></div><div style="width:100%"> <strong>이상치(Outlier)가 있으면 어떻게 성능이 저하될까?</strong><h3 class="" id="1b4451cf-7b79-80fe-94e7-d6c1c716309f"> <strong>1. 스케일링 팩터 문제</strong></h3><li style="list-style-type:disc">양자화는 데이터의 전체 범위(min-max)를 고려해서 값을 조정해야 하는데, 이상치가 있으면  <strong>스케일링 팩터가 비정상적으로 커짐</strong>.</li><li style="list-style-type:disc">대부분의 값은 작은 범위에 몰려 있는데,  <strong>한두 개의 큰 값(이상치) 때문에 스케일이 커지면 작은 값들이 모두 0 또는 동일한 값으로 매핑되는 문제</strong>가 생겨. <strong>예제:</strong><li style="list-style-type:circle">원래 가중치 값: <code>[-0.1, -0.05, 0.0, 0.05, 0.1, 5.0]</code> (이상치: 5.0)</li><li style="list-style-type:circle">이상치가 없을 때: <code>s_X = 0.1</code>, 범위를 <code>[-8, 7]</code>로 매핑 가능</li><li style="list-style-type:circle">이상치(5.0)가 포함될 때: <code>s_X = 5.0</code>, 작은 값들은 모두 0이 되어 정보 손실 발생</li></li><h3 class="" id="1b4451cf-7b79-8094-9ce0-d5349afe65d2"> <strong>2. 정보 손실 (Precision Loss)</strong></h3><li style="list-style-type:disc">이상치를 고려해 전체 값을 조정하면, 나머지 대부분의 값이  <strong>매우 작은 차이를 가지는데도 동일한 양자화된 값으로 표현</strong>될 가능성이 높아.</li><li style="list-style-type:disc">즉,  <strong>모델이 작은 변화(gradient 등)를 반영하지 못하고 표현력이 급격히 떨어짐</strong>.</li><h3 class="" id="1b4451cf-7b79-80ac-ae9d-fb3363b903fa"> <strong>3. 활성화(Activation) 이상치로 인해 연산량 증가</strong></h3><li style="list-style-type:disc">이상치가 있으면 양자화된 값을 다시 부동소수점으로 변환할 때  <strong>FP32(32-bit)로 변환하는 경우가 많아</strong>, 결국 연산 최적화가 깨짐.</li><li style="list-style-type:disc">특히 Transformer 기반 모델에서는 Self-Attention 연산이 크기 때문에  <strong>활성화값(Activation)의 이상치는 메모리 사용량과 연산량 증가로 이어질 수 있음</strong>.</li> </div></figure> <h1 class="" id="1b0451cf-7b79-80b7-93aa-de0c77515d05">4 Method</h1> <p class="" id="1b4451cf-7b79-80cf-b998-e21b580b4344"> </p> <h2 class="" id="1b4451cf-7b79-8054-a2e2-fe6883e5e369">4.1 PROBLEM FORMULATION</h2> <p class="" id="1b5451cf-7b79-8063-8579-df66165101b7">양자화의 오류를 다음과 같이 정의됨.</p> <figure class="equation" id="230451cf-7b79-8043-8fab-e37f5ec6c2f5"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo separator="true">,</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mrow><mo fence="true">∥</mo><mrow><mi mathvariant="bold">X</mi><mi mathvariant="bold">W</mi></mrow><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">E(\mathbf{X}, \mathbf{W}) = \left\| \mathbf{XW} - Q(\mathbf{X}) Q(\mathbf{W}) \right\|_F</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">XW</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span></span></span></span></div></figure> <p class="" id="1b5451cf-7b79-80eb-82da-e0b53f626858">원래 행렬 곱셈 XW와 양자화된 값으로 연산한 Q(X)Q(W)의 차이를 측정하는 값</p> <p class="" id="1b5451cf-7b79-80c5-a6c4-d376626e90d8"> </p> <p class="" id="1b5451cf-7b79-80a7-8b1d-d812b025cb02">좀 더 세분화</p> <figure class="equation" id="230451cf-7b79-8008-a2b3-da9fc1f9849a"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo separator="true">,</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo>≤</mo><msub><mrow><mo fence="true">∥</mo><mi mathvariant="bold">X</mi><mo fence="true">∥</mo></mrow><mi>F</mi></msub><msub><mrow><mo fence="true">∥</mo><mi mathvariant="bold">W</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mo>+</mo><msub><mrow><mo fence="true">∥</mo><mi mathvariant="bold">X</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mrow><mo fence="true">(</mo><msub><mrow><mo fence="true">∥</mo><mi mathvariant="bold">W</mi><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mo>+</mo><msub><mrow><mo fence="true">∥</mo><mi mathvariant="bold">W</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">E(\mathbf{X}, \mathbf{W}) \leq \left\| \mathbf{X} \right\|_F \left\| \mathbf{W} - Q(\mathbf{W}) \right\|_F+ \left\| \mathbf{X} - Q(\mathbf{X}) \right\|_F \left( \left\| \mathbf{W} \right\|_F + \left\| \mathbf{W} - Q(\mathbf{W}) \right\|_F \right).</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathbf">X</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathbf">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">.</span></span></span></span></span></div></figure> <p class="" id="230451cf-7b79-80e8-90b1-edd1fb51bd9c">이 식은 양자화 오류를 결정하는 네 가지 요소를 보여줌:</p> <ol class="numbered-list" id="230451cf-7b79-802d-b873-c1464c5d82b3" start="1" type="1"><li>가중치의 크기: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∥</mi><mi mathvariant="bold">W</mi><msub><mi mathvariant="normal">∥</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">\|\mathbf{W}\|_F</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span></li></ol> <ol class="numbered-list" id="230451cf-7b79-8002-8576-d196c21a1266" start="2" type="1"><li>입력의 크기: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∥</mi><mi mathvariant="bold">X</mi><msub><mi mathvariant="normal">∥</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">\|\mathbf{X}\|_F</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span><span class="mord mathbf">X</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span></li></ol> <ol class="numbered-list" id="230451cf-7b79-80df-967e-e26f603c38f8" start="3" type="1"><li>가중치의 양자화 오류: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∥</mi><mi mathvariant="bold">W</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><msub><mi mathvariant="normal">∥</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">\|\mathbf{W} - Q(\mathbf{W})\|_F</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mclose">)</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span></li></ol> <ol class="numbered-list" id="230451cf-7b79-8051-b5ce-f3ea1ab7182a" start="4" type="1"><li>입력의 양자화 오류: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∥</mi><mi mathvariant="bold">X</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">X</mi><mo stretchy="false">)</mo><msub><mi mathvariant="normal">∥</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">\|\mathbf{X} - Q(\mathbf{X})\|_F</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span><span class="mord mathbf">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">X</span><span class="mclose">)</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span></li></ol> <p class="" id="230451cf-7b79-808c-9b26-edd884dc2e77">즉, 전체적인 양자화 오류를 최소화하려면 이 네 가지 요소를 조절하는 것이 핵심임.</p> <p class="" id="1b5451cf-7b79-801c-b016-f87be0a50e7e"> </p> <p class="" id="1b5451cf-7b79-8013-a4f5-d943e040ae3d"> </p> <h2 class="" id="1b4451cf-7b79-80fd-b19f-d41847604e12">4.2 SVDQUANT: ABSORBING OUTLIERS VIA LOW-RANK BRANCH</h2> <hr id="1b4451cf-7b79-803d-930f-ed86b403b9d8"/> <h3 class="" id="1b4451cf-7b79-8071-8cb0-d42a6cd514bc">Migrate outliers from activation to weight</h3> <figure class="image" id="1b4451cf-7b79-8084-9053-da5bac137308"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%205.webp" style="width:709.984375px"/></picture></figure> <p class="" id="1b4451cf-7b79-80d2-a144-da65900cc7b1">After Smoothing 부분이 기존 기법인데, 단점이 있음</p> <li style="list-style-type:disc">✅  <strong>Activation(X)의 이상치를 없애는 것은 성공했지만</strong>,</li> <li style="list-style-type:disc">❌  <strong>대신 Weight(W)의 이상치가 증가하는 문제가 발생</strong>.</li> <li style="list-style-type:disc">결과적으로,  <strong>전체적인 양자화 오류를 줄이려는 목적이 제대로 달성되지 않음</strong>.</li> <p class="" id="1b5451cf-7b79-806f-846b-e2b09fa70859"> </p> <h3 class="block-color-yellow_background" id="1b5451cf-7b79-8041-8c84-ecfc5e5922cb">Absorb magnified weight outliers with a low-rank branch.</h3> <p class="" id="1b5451cf-7b79-80a3-b791-c78e79c2de89"> <strong>Weight를 바로 4-bit로 양자화하지 않고, Low-Rank Component를 따로 분리해서 이상치를 흡수</strong>하는 전략</p> <figure class="equation" id="230451cf-7b79-805b-897f-d8da2bf251a2"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="bold">W</mi><mo>^</mo></mover><mo>=</mo><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="bold">R</mi><mo separator="true">,</mo><mspace width="1em"></mspace><mtext>where </mtext><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>m</mi><mo>×</mo><mi>r</mi></mrow></msup><mtext> and </mtext><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>r</mi><mo>×</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\hat{\mathbf{W}} = \mathbf{L}_1 \mathbf{L}_2 + \mathbf{R}, \quad \text{where } \mathbf{L}_1 \in \mathbb{R}^{m \times r} \text{ and } \mathbf{L}_2 \in \mathbb{R}^{r \times n}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.9495em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathbf">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">where </span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8213em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord"> and </span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8213em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8213em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></div></figure> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><mo>=</mo><mi mathvariant="bold">U</mi><msub><mi mathvariant="bold">Σ</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{L}_1 = \mathbf{U} \boldsymbol{\Sigma}_r</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord mathbf">U</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">Σ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (입력 차원을 줄이는 행렬)</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi mathvariant="bold">V</mi><mi>r</mi><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{L}_2 = \mathbf{V}_r^T</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0883em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.453em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> (출력 차원을 줄이는 행렬)</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">R</mi></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord mathbf">R</span></span></span></span></span><span>﻿</span></span> (잔여 행렬, 4-bit로 양자화될 부분)</li> <p class="" id="1b5451cf-7b79-806a-a32d-d8f6b89e23ca"> </p> <h3 class="" id="1b9451cf-7b79-80f9-a6a0-ebdb6cb7faac">SVD(Singular Value Decomposition, 특이값 분해)</h3> <li style="list-style-type:disc">원래 행렬 크기가 m×n이면, 직접 곱하면 연산량이  <strong>O(mn)</strong>.</li> <li style="list-style-type:disc">하지만 SVD로 Rank r만 유지하면  <strong>연산량이 O(mr+rn)로 줄어듦</strong>.</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">U</mi></mrow><annotation encoding="application/x-tex">\mathbf{U}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord mathbf">U</span></span></span></span></span><span>﻿</span></span>: 입력 차원 변환 행렬 <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>×</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m \times m)</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span><span>﻿</span></span></li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">Σ</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\Sigma}</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Σ</span></span></span></span></span></span></span><span>﻿</span></span>: 대각 행렬 (특이값들이 들어 있는 행렬, <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m \times n</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span><span>﻿</span></span>)</li> <li style="list-style-type:disc"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">V</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{V}^T</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>: 출력 차원 변환 행렬 <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>×</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n \times n)</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span><span>﻿</span></span></li> <p class="" id="230451cf-7b79-80b8-9234-c1c29c6210ba"> </p> <p class="" id="1b9451cf-7b79-8070-b01a-dba731140a46"> 포인트는 대각 원소(특이값, Singular Values)</p> <li style="list-style-type:disc"> <strong>큰 특이값들은 중요한 정보(패턴)를 나타냄</strong>.</li> <li style="list-style-type:disc"> <strong>작은 특이값들은 노이즈(이상치 포함)를 나타낼 가능성이 높음</strong>.</li> <p class="" id="1b9451cf-7b79-80f1-8f7b-ebea3afbdaa7"> </p> <h3 class="" id="1b9451cf-7b79-80bf-8f75-ed07a8408afc">Low-Rank 분해 </h3> <p class="" id="230451cf-7b79-800a-9eeb-f771f9be4692"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span class="notion-text-equation-token" contenteditable="false" data-token-index="0" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="bold">X</mi><mi mathvariant="bold">W</mi></mrow><mo>=</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mover accent="true"><mi mathvariant="bold">W</mi><mo>^</mo></mover><mo>=</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>+</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mi mathvariant="bold">R</mi><mo>≈</mo><munder><munder><mrow><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub></mrow><mo stretchy="true">⏟</mo></munder><mtext>16-bit low-rank branch</mtext></munder><mo>+</mo><munder><munder><mrow><mi>Q</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">R</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>4-bit residual</mtext></munder><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathbf{XW} = \hat{\mathbf{X}} \hat{\mathbf{W}} = \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + \hat{\mathbf{X}} \mathbf{R}\approx \underbrace{\hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2}_{\text{16-bit low-rank branch}}+ \underbrace{Q(\hat{\mathbf{X}}) Q(\mathbf{R})}_{\text{4-bit residual}}.</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">XW</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9495em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0995em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9495em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord mathbf">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4337em;vertical-align:-1.4841em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-1.5159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">16-bit low-rank branch</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span class="svg-align" style="top:-2.202em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMinYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7 -331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"></path></svg></span><span class="brace-center" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMidYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M199572 214 c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0 -5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"></path></svg></span><span class="brace-right" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMaxYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237 -174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"></path></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.798em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4841em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.5337em;vertical-align:-1.5841em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-1.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">4-bit residual</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMinYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7 -331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"></path></svg></span><span class="brace-center" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMidYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M199572 214 c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0 -5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"></path></svg></span><span class="brace-right" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMaxYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237 -174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"></path></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">R</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5841em;"><span></span></span></span></span></span><span class="mord">.</span></span></span></span></span><span>﻿</span></span></p> <p class="" id="1b9451cf-7b79-808c-b9c0-cb57b5a305e6"><mark class="highlight-yellow_background"> <strong>대각 원소 중에서 상위 r개의 특이값만 유지</strong></mark> <strong>하여, 가장 중요한 정보만 포함하는 L1,L2를 생성. </strong></p> <p class="" id="1b9451cf-7b79-806e-a1d7-d18db5ec03f3"> <strong>→ 따로 16-bit 연산</strong></p> <p class="" id="1b9451cf-7b79-8045-88fa-c4f5633418b3"><mark class="highlight-yellow_background"> <strong>남은 부분(작은 특이값)</strong></mark> <strong> → R으로 분리 </strong></p> <p class="" id="1b9451cf-7b79-8087-8635-fb1ab461f555"> <strong>→ 4-bit 연산</strong></p> <p class="" id="1b9451cf-7b79-804b-82ac-f9668ecca85d"> </p> <p class="" id="1b9451cf-7b79-8031-afcc-dcf955a24738">→ 작은 특이값만 남았으므로 R을  <strong>4-bit로 양자화하더라도 정보 손실이 크게 줄어듦</strong></p> <p class="" id="1b9451cf-7b79-80ea-9676-f298086a02f3"> </p> <p class="" id="1b4451cf-7b79-80bd-9072-cf28b76dcc8c"> </p> <h2 class="" id="1b4451cf-7b79-80a9-8bd2-e53684d44a92">4.3 NUNCHAKU: Fusing Low-Rank and Low-Bit Branch Kernels</h2> <figure class="image" id="1b4451cf-7b79-80c6-9315-d2f2b998bf78"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%206.webp" style="width:709.9921875px"/></picture></figure> <hr id="1b4451cf-7b79-805c-98bf-dd5f162d3829"/> <h3 class="" id="1b4451cf-7b79-8020-8142-d7133e5e1aa9"> <strong>Low-Rank Branch에서 발생하는 성능 저하 문제</strong></h3> <li style="list-style-type:disc"> <strong>QKV Projection과 같은 연산에서는 Low-Rank Branch가 L2 캐시를 초과하면서 DRAM에서 데이터를 불러와야 함</strong>.</li> <li style="list-style-type:disc">이는  <strong>메모리 접근 비용이 증가하여 연산 속도가 떨어지는 원인</strong>.</li> <li style="list-style-type:disc"> <strong>Figure 6(a)에서 보듯이, Low-Rank Branch는 전체 4-bit 연산 지연의 50%를 차지</strong>.</li> <hr id="1b4451cf-7b79-8034-9f73-cadb388dcc08"/> <h3 class="" id="1b4451cf-7b79-80f4-b396-f14e1b10f544"> <strong>NUNCHAKU: 해결 방법</strong></h3> <li style="list-style-type:disc"><mark class="highlight-orange_background">논문에서는 </mark><mark class="highlight-orange_background"> <strong>Low-Rank Branch와 Low-Bit Branch의 연산을 하나로 합쳐(fusing) 메모리 접근을 줄이는 방법을 제안</strong></mark><mark class="highlight-orange_background">.</mark></li> <li style="list-style-type:disc"> <strong>Figure 6(b)에서 보듯이, 두 개의 Kernel을 합쳐서 데이터를 공유함</strong>:<ol class="numbered-list" id="1b4451cf-7b79-8065-a3fc-c7ad225403dc" start="1" type="1"><li> <strong>Down Projection 연산을 Quantization Kernel과 합침</strong>.</li></ol><ol class="numbered-list" id="1b4451cf-7b79-805d-8fad-da3447dd9db0" start="2" type="1"><li> <strong>Up Projection 연산을 4-bit 연산 Kernel과 합침</strong>.</li></ol></li> <li style="list-style-type:disc">이를 통해  <strong>Low-Rank Branch가 Low-Bit Branch와 활성화값을 공유할 수 있어, 추가적인 메모리 접근을 제거</strong>.</li> <li style="list-style-type:disc">결과적으로,  <strong>Kernel 호출 횟수가 절반으로 줄어들어 속도 개선 효과가 있음</strong>.</li> <p class="" id="1b4451cf-7b79-8034-8a61-ebb13c9dbf45"> </p> <p class="" id="1b4451cf-7b79-80b1-b8fd-eea92e48f82b"> </p> <p class="" id="1b4451cf-7b79-8033-8767-e918cb5b1aef"> </p> <p class="" id="1b0451cf-7b79-800d-99d2-e6580a457e9f"> </p> <h1 class="" id="1b0451cf-7b79-800c-a182-fe595644a631">5 Experiments</h1> <h3 class="" id="1b9451cf-7b79-805f-91df-eef69e1b0c6b">Benchmark models</h3> <table class="simple-table" id="1b9451cf-7b79-80ae-8b87-da042df55667"><tbody><tr id="1b9451cf-7b79-8030-a28d-faec444a75d8"><td class="" id="aUJ|">Model</td><td class="" id="LJ;p">Architecture</td><td class="" id="m]Yg">Parameters</td><td class="" id="?hTZ">Special Features</td></tr><tr id="1b9451cf-7b79-80bc-9d21-cad69757e339"><td class="" id="aUJ|">FLUX.1-dev</td><td class="" id="LJ;p">DiT</td><td class="" id="m]Yg">12B</td><td class="" id="?hTZ">50-step guidance-distilled</td></tr><tr id="1b9451cf-7b79-8022-88d2-c16c2e358ced"><td class="" id="aUJ|">FLUX.1-schnell</td><td class="" id="LJ;p">DiT</td><td class="" id="m]Yg">12B</td><td class="" id="?hTZ">4-step timestep-distilled</td></tr><tr id="1b9451cf-7b79-804f-98b1-e428f888fbd7"><td class="" id="aUJ|">PixArt-Σ</td><td class="" id="LJ;p">DiT</td><td class="" id="m]Yg">600M</td><td class="" id="?hTZ">20-step default</td></tr><tr id="1b9451cf-7b79-80b8-98f9-d2d48c452321"><td class="" id="aUJ|">SANA</td><td class="" id="LJ;p">DiT</td><td class="" id="m]Yg">1.6B</td><td class="" id="?hTZ">32× compression autoencoder, Linear Attention</td></tr><tr id="1b9451cf-7b79-80e1-8776-f194ffe206dc"><td class="" id="aUJ|">SDXL</td><td class="" id="LJ;p">UNet</td><td class="" id="m]Yg">2.6B</td><td class="" id="?hTZ">30-step</td></tr></tbody></table> <h3 class="" id="1b9451cf-7b79-8091-b966-f2432aefb45e">Baselines Quantization</h3> <table class="simple-table" id="1b9451cf-7b79-80f1-9730-f6c63a349b46"><tbody><tr id="1b9451cf-7b79-80ab-b8f9-e75c411763db"><td class="" id="&lt;lV]">Method</td><td class="" id="?OWR">Description</td><td class="" id="yunN">Usage in Benchmarking</td></tr><tr id="1b9451cf-7b79-806a-a156-f635b46b71a1"><td class="" id="&lt;lV]">NF4<br/>(4-bit NormalFloat)<br/></td><td class="" id="?OWR">Optimized 4-bit weight-only quantization assuming normal distribution</td><td class="" id="yunN">Used as a weight-only quantization baseline for FLUX.1</td></tr><tr id="1b9451cf-7b79-80ad-956d-d8053cca98b5"><td class="" id="&lt;lV]">ViDiT-Q</td><td class="" id="?OWR">Per-token quantization + smoothing to reduce outliers</td><td class="" id="yunN">Achieves lossless 8-bit quantization on PixArt-Σ</td></tr><tr id="1b9451cf-7b79-80e2-b74e-f201b50a1cbd"><td class="" id="&lt;lV]">MixDQ</td><td class="" id="?OWR">Detects outliers in text embeddings and protects them with 16-bit pre-computation</td><td class="" id="yunN">Enables W4A8 quantization with minimal performance drop on SDXL-Turbo</td></tr><tr id="1b9451cf-7b79-807a-98b4-d434a27793a5"><td class="" id="&lt;lV]">TensorRT</td><td class="" id="?OWR">Industry-standard PTQ toolkit for 8-bit quantization</td><td class="" id="yunN">Uses smoothing + percentile calibration over specific timesteps</td></tr></tbody></table> <figure class="image" id="1b3451cf-7b79-80c7-9c88-ea2289a5f38f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%207.webp" style="width:709.9921875px"/></picture></figure> <figure class="image" id="1b9451cf-7b79-8048-a239-e2d6aa27f92e"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%208.webp" style="width:709.984375px"/></picture></figure> <figure class="image" id="1b3451cf-7b79-80b2-b150-d0f26013425e"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%209.webp" style="width:709.9765625px"/></picture></figure> <figure class="image" id="1b9451cf-7b79-800a-bb07-fb2185e3e8d3"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2010.webp" style="width:709.9921875px"/></picture></figure> <figure class="image" id="1b9451cf-7b79-80f9-b9e7-e0fb7a02557f"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2011.webp" style="width:709.9921875px"/></picture></figure> <p class="" id="1b3451cf-7b79-8016-a721-eb2e6bdb3df9"> </p> <p class="" id="1b3451cf-7b79-801c-8b7c-decce0570ec6"> </p> <h1 class="" id="1b3451cf-7b79-8069-a8d8-cce825d2197e">Limitation</h1> <p class="" id="1b9451cf-7b79-80d0-8c8f-f787946d192e">엄청난 기술이고 기술면에서는 한계가 없다고 생각함. </p> <p class="" id="1b9451cf-7b79-80e3-8195-fd5a412c5cb4">하지만, 굳이 한계점을 뽑자면, Song Han이 NVIDIA에서도 연구를 진행하기 때문에 NVIDIA chip만을 위해서 코드를 짰고, 이에 최적화되어있다.</p> <p class="" id="1b9451cf-7b79-8001-b0c1-c88078f30bf9">심지어 CUDA 12.2 이상에서만 작동 가능해서 내 학교 서버로 돌려보려고 했는데, GPU Driver version이 낮아서 안돌아가더라.</p> <figure class="image" id="1b9451cf-7b79-80b1-90ea-e3f4976a02bc"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2012.webp" style="width:709.984375px"/></picture></figure> <p class="" id="1b5451cf-7b79-809a-be3b-d50cf256f252">물론 NVIDIA chip에서 극한의 최적화를 위해서 였지만, 다른 GPU 장비에서는 이를 사용할 수 없다.</p> <p class="" id="1b9451cf-7b79-8099-b811-d3f49b2751c6">같은 방식을 다른 GPU 장비와 Mobile edge device들에 적용한다면 좋을 것이다.</p> <p class="" id="1b9451cf-7b79-8034-8ef0-db4f0ee73b51"> </p> <p class="" id="1b9451cf-7b79-80af-aa03-f74a76e2d116"> </p> <p class="" id="1b9451cf-7b79-80a9-9db0-cc9a176288ba"> </p> <h1 class="block-color-red_background" id="1b9451cf-7b79-80a2-91bb-dd9012fcaa7b">메모리랑 추론시간만 줄인게 아닌가? 정확도를 왜 언급?</h1> <h3 class="" id="1b9451cf-7b79-80bc-808a-ff3da0234b8d">Memory, Latency?</h3> <p class="" id="1b9451cf-7b79-806e-9095-e10f17ed8580">아래 그림과 같이 SVD양자화로 인해 메모리와 latency 이점을 얻은게 포인트 아닌가?</p> <figure class="image" id="1b9451cf-7b79-80a2-8cd8-fa65283b56c1"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2013.webp" style="width:695px"/></picture></figure> <p class="block-color-yellow_background" id="1b9451cf-7b79-80c4-b42e-c30f72c5bfd2">비교가 기존 16bit / W4A16 / W4A4(SVD) 였기 때문에 큰 차이를 보여준 것 같다.</p> <p class="" id="1b9451cf-7b79-8055-a534-eb7be3a7153c">Inference time과 Memory 줄인게 포인트인줄 알았는데 완전 잘못 생각한것 같기도 합니다.</p> <p class="" id="1b9451cf-7b79-808f-8cb9-c51ec1d5b09c"> </p> <p class="block-color-orange_background" id="1b9451cf-7b79-8056-90ad-f8224f8d116d">물론 Outlier때문에 32bit로 처리했던 부분들이 없어지고 16bit로 low rank로 따로 빼니까 향상은 됐을 것이지만, 제 생각에는 SVD 없는 W4A4랑 비교했다면, Memory와 추론시간이 3배 이상 차이나지는 않을 것입니다.</p> <figure class="image" id="1b9451cf-7b79-8020-b2df-cefc97fa8752"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2014.webp" style="width:694.984375px"/></picture></figure> <h3 class="" id="1b9451cf-7b79-8054-85b1-f77ceb4c8f23">정확도?</h3> <p class="" id="1b9451cf-7b79-80ff-9ed1-c193dde950ec">기존 양자화에서 정확도를 유지하는 부분이 아래 그림처럼 많이 떨어졌었다.</p> <p class="" id="1b9451cf-7b79-803b-b04c-d868ac6d01cd">(두번째가 기존 양자화 기법, 심지어 W4A4가 아닌 W4A16인데도 더 떨어지는 모습을 보임)</p> <figure class="image" id="1b9451cf-7b79-80c7-b6e8-fcd54c9ae799" style="text-align:left"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2015.webp" style="width:432px"/></picture></figure> <h3 class="" id="1b9451cf-7b79-80de-8586-fa234a4e0e1c">보존 할 수 있었던 이유 →  <strong>Low-Rank Branch</strong></h3> <li style="list-style-type:disc">기존 4-bit 양자화 방식에서는  <strong>Weight 전체를 4-bit로 변환</strong>하므로 정보 손실이 큼.</li> <li style="list-style-type:disc">SVDQuant는 Weight를 Low-Rank Component (L1L2) 와 잔여 (R)로 분해한다.<figure class="equation" id="230451cf-7b79-808e-a039-c8447097c22a"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="bold">X</mi><mi mathvariant="bold">W</mi></mrow><mo>=</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mover accent="true"><mi mathvariant="bold">W</mi><mo>^</mo></mover><mo>=</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>+</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mi mathvariant="bold">R</mi><mo>≈</mo><munder><munder><mrow><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub></mrow><mo stretchy="true">⏟</mo></munder><mtext>16-bit low-rank branch</mtext></munder><mo>+</mo><munder><munder><mrow><mi>Q</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">R</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>4-bit residual</mtext></munder><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathbf{XW} = \hat{\mathbf{X}} \hat{\mathbf{W}} = \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + \hat{\mathbf{X}} \mathbf{R}\approx \underbrace{\hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2}_{\text{16-bit low-rank branch}}+ \underbrace{Q(\hat{\mathbf{X}}) Q(\mathbf{R})}_{\text{4-bit residual}}.</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">XW</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9495em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0995em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9495em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord mathbf">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4337em;vertical-align:-1.4841em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-1.5159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">16-bit low-rank branch</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span class="svg-align" style="top:-2.202em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMinYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7 -331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"></path></svg></span><span class="brace-center" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMidYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M199572 214 c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0 -5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"></path></svg></span><span class="brace-right" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMaxYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237 -174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"></path></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.798em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4841em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.5337em;vertical-align:-1.5841em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-1.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">4-bit residual</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMinYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7 -331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"></path></svg></span><span class="brace-center" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMidYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M199572 214 c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0 -5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"></path></svg></span><span class="brace-right" style="height:0.548em;"><svg height="0.548em" preserveaspectratio="xMaxYMin slice" viewbox="0 0 400000 548" width="400em" xmlns="http://www.w3.org/2000/svg"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237 -174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"></path></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">R</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5841em;"><span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></div></figure></li> <li style="list-style-type:disc"><mark class="highlight-yellow_background"><span style="border-bottom:0.05em solid">L1L2는 16-bit precision으로 유지 → 중요한 정보는 고정밀도로 남겨둠.</span></mark></li> <li style="list-style-type:disc"> <strong>잔여 R만 4-bit로 양자화하여 정보 손실을 최소화함</strong></li> <li style="list-style-type:disc">한 번만 Low-Rank 분해하는 것이 아니라,  <strong>반복적으로 R을 최적화</strong>하여 양자화 오류를 최소화</li> <p class="" id="1b9451cf-7b79-8008-addf-df773f81d36d"> </p> <h3 class="" id="1b9451cf-7b79-808d-9c6f-f3db6c7574aa">quantization error</h3> <figure class="equation" id="230451cf-7b79-803f-8520-f790b6db1cd4"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mo fence="true">∥</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mover accent="true"><mi mathvariant="bold">W</mi><mo>^</mo></mover><mo>−</mo><mrow><mo fence="true">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><msub><mi mathvariant="bold">L</mi><mn>1</mn></msub><msub><mi mathvariant="bold">L</mi><mn>2</mn></msub><mo>+</mo><mi>Q</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">R</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mo>=</mo><msub><mrow><mo fence="true">∥</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mi mathvariant="bold">R</mi><mo>−</mo><mi>Q</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold">R</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mi>F</mi></msub><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold">X</mi><mo>^</mo></mover><mo separator="true">,</mo><mi mathvariant="bold">R</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\left\| \hat{\mathbf{X}} \hat{\mathbf{W}} - \left( \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + Q(\hat{\mathbf{X}}) Q(\mathbf{R}) \right) \right\|_F= \left\| \hat{\mathbf{X}} \mathbf{R} - Q(\hat{\mathbf{X}}) Q(\mathbf{R}) \right\|_F= E(\hat{\mathbf{X}}, \mathbf{R}),</annotation></semantics></math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:1.8497em;vertical-align:-0.6997em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.556em;height:1.800em;"><svg height="1.800em" viewbox="0 0 556 1800" width="0.556em" xmlns="http://www.w3.org/2000/svg"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z M367 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v600 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">R</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.556em;height:1.800em;"><svg height="1.800em" viewbox="0 0 556 1800" width="0.556em" xmlns="http://www.w3.org/2000/svg"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z M367 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v600 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8497em;vertical-align:-0.6997em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.556em;height:1.800em;"><svg height="1.800em" viewbox="0 0 556 1800" width="0.556em" xmlns="http://www.w3.org/2000/svg"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z M367 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v600 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord mathbf">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathbf">R</span><span class="mclose">)</span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.556em;height:1.800em;"><svg height="1.800em" viewbox="0 0 556 1800" width="0.556em" xmlns="http://www.w3.org/2000/svg"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z M367 15 v585 v600 v585 c2.667,10,9.667,15,21,15 c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15 c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v600 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1995em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathbf">X</span></span><span style="top:-3.2551em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">R</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></div></figure> <p class="" id="1b9451cf-7b79-804e-a8c5-fb4bb7a0d47c">이 식에서 L1L2+R로 분해함으로서 Quantization을 진행하면서 발생하는 Error를 최대한 줄인거임.</p> <p class="" id="1b9451cf-7b79-8018-b00c-d9eb56f9faeb"> </p> <p class="block-color-blue_background" id="1b9451cf-7b79-80cf-8f38-d29ef01a5203">Quantization 자체가 Outlier로 인해서 정확도를 떨어뜨릴 수 밖에 없는데, 이를 최대한 보존했다는 점이 엄청난 연구인 것임!!!!</p> <h1 class="block-color-red_background" id="1b9451cf-7b79-804d-9f66-e41d84df02ba">SVD를 LLM에 써도 되는가? 왜 Diffusion으로 논문을?</h1> <p class="block-color-teal_background" id="1b9451cf-7b79-80e0-aef1-fbbf56042c83">기존 제 생각 : 적용 할 수는 있을 것 같으나, LLM은 병목현상이 <span style="border-bottom:0.05em solid">무거운 모델을 불러오는 과정</span>에서 나타나므로 뒤에 연산을 줄여도 Diffusion만큼 큰 효과는 나타날 지 모르겠습니다. (<span style="border-bottom:0.05em solid">Diffusion은 연산이 병목</span>임)</p> <p class="" id="1b9451cf-7b79-80df-ace1-c33706c16ab7"> </p> <p class="" id="1b9451cf-7b79-8012-9ba8-ed02e08ebd53">물론 기존 제 생각도 찾아보니 맞는 것 같으나, 실제로 활용한다면, 바로 위 질문에서 다뤘던 정확도 향상에도 도움이 되기 때문에, 오히려 정확도 부분에서 도움이 될 것 같습니다.</p> <p class="" id="1b9451cf-7b79-8008-81c3-e61e76c68f60"> </p> <h3 class="" id="1b9451cf-7b79-804f-8ccf-d771d8e662af">기존 양자화</h3> <li style="list-style-type:disc"> <strong>GPTQ</strong> → Post-training quantization 방식, Weight만 4-bit 변환.</li> <li style="list-style-type:disc"> <strong>AWQ</strong> → Weight 중요도를 분석해 선택적으로 4-bit 변환.</li> <li style="list-style-type:disc"> <strong>SmoothQuant</strong> → Activation 이상치를 Weight로 이동시켜 양자화 오류를 줄이는 방식.</li> <p class="" id="1b9451cf-7b79-801c-a6b9-ddd0e4110575"> </p> <h3 class="" id="1b9451cf-7b79-803b-8cf3-cb358fec4a1a">SVDQuant 사용한다면?</h3> <p class="" id="1b9451cf-7b79-8076-af24-d2dcf281b3da">Weight를 Low-Rank(16-bit) + Residual(4-bit)로 나누어 중요한 정보는 유지하면서 압축하므로</p> <p class="" id="1b9451cf-7b79-8076-94a5-f961585b2b47">Diffusion처럼 정확도 향상에 도움이 될듯 !!!</p> <p class="" id="1b9451cf-7b79-80d3-b36d-e9093fc70da1"> </p> <p class="" id="1b9451cf-7b79-80d4-ad96-f1468b285f55"> </p> <p class="" id="1b9451cf-7b79-8010-846c-d9685870a1ff"> </p> <h1 class="" id="1b9451cf-7b79-8050-a9dd-d24ae3c8c99a">For an explanation from the author, Song Han</h1> <figure class="image" id="1b9451cf-7b79-80aa-9611-df893eea3b07"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2016.webp" style="width:709.9921875px"/></picture></figure> <p class="" id="1b9451cf-7b79-80a6-83f7-ce2fd3f35fb4"><a href="https://www.youtube.com/watch?v=nYujDH9r69s&amp;t=1s">Youtube [Introduction to SVDQuant for 4-bit Diffusion Models]</a></p> <p class="" id="1b9451cf-7b79-801d-bc12-e4601f945f32"> </p> <p class="" id="1b9451cf-7b79-807f-8071-f4a9689437c5"> </p> <h1 class="" id="1b9451cf-7b79-80d7-8244-d4fca4f1d07e">Demo</h1> <p class="" id="1b9451cf-7b79-80ce-9933-f7b6ca6c337c"><a href="https://hanlab.mit.edu/projects/svdquant">https://hanlab.mit.edu/projects/svdquant</a></p> <figure class="image" id="1b9451cf-7b79-8021-aaef-dd4cf2ca4a7b"><picture><img class="img-fluid rounded z-depth-1" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" src="/files/2025-03-06-svdquant/image%2017.webp" style="width:709.9921875px"/></picture></figure> <p><span class="sans" style="font-size:14px;padding-top:2em"></span></p>]]></content><author><name></name></author><category term="Paper"/><category term="AI"/><summary type="html"><![CDATA[ArXivhttps://arxiv.org/abs/2411.05007Project Pagehttps://hanlab.mit.edu/projects/svdquantGithub Codehttps://github.com/mit-han-lab/nunchakuDemohttps://svdquant.mit.edu/AffiliationMIT, NVIDIA, CMU, Princeton, UC Berkeley, SJTU, Pika Labs 💡 Key Differentiator“Outlier Absorption Using Singular Value Decomposition” Song Han? Song Han is an associate professor at MIT EECS. He earned his PhD from Stanford, pioneering efficient AI computing techniques such as “Deep Compression” (pruning, quantization) and the “Efficient Inference Engine,” which first introduced weight sparsity to modern AI chips, making it one of the top-5 most cited papers in the 50-year history of ISCA (1953-2023). His innovations, including TinyML and hardware-aware neural architecture search (Once-for-All Network), have advanced AI model deployment on resource-constrained devices. 1. Introduction LLM과 비교했을 때, 모델 사이즈에 따라 계산 비용이 빠르게 증가한다.Moore’s law가 slow down 함으로서, 저렴한 추론(low-precision inference) 으로 전환하는중 → 4bit floating point (FP4)가 대세임 LLMlatency는 주로 가중치(weight) 로딩 속도에 의해 결정"가중치만 양자화(weight-only quantization)" 해도 속도를 개선 Diffusion 모델레이턴시는 가중치를 불러오는 속도가 아니라, 연산량 자체가 병목왜냐하면 가중치만 4비트로 줄여도 활성화값이 16비트이면, 연산 과정에서 16비트로 다시 변환(upcast)되므로 연산량이 줄어들지 않음.결국 연산량을 줄이려면 가중치(weight)뿐만 아니라  활성화값(activation)도 함께 4비트로 양자화해야 함. 📢 Input Channel → 원래 Activation에서 나온 입력 채널 Channel → Weight의 각 채널 1. 기존 4비트 양자화(4-bit Quantization)의 문제점 가중치(Weight)와 활성화값(Activation) 모두 4비트로 줄이면 품질이 크게 저하될 가능성이 높음. 특히 기존 방법(예: Smoothing)은 가중치와 활성화값 사이에서 Outlier를 이동시키는 방식을 사용했지만,Diffusion 모델에서는 Outlier가 양쪽(W, X) 모두에서 심각하게 발생하므로 효과적이지 않음.기존 방식은 활성화값(X)에서 Outlier를 제거하려고 하면 가중치(W)로 이동하고, 반대로 하면 X에 Outlier가 남는 문제 발생. 2. SVDQuant의 핵심 아이디어 Outlier를 단순히 이동하는 것이 아니라, " 흡수"하는 방법을 사용함. 저비용의 "Low-Rank Branch"를 추가하여 Outlier를 가중치(W)에서 흡수함. 이를 위해 SVD(Singular Value Decomposition, 특이값 분해) 기법을 활용하여 가중치를 두 개의 성분으로 분해함. 3. SVDQuant의 단계별 동작 방식 1. Outlier 이동 (Smoothing) 먼저 Outlier를 활성화값(X)에서 가중치(W)로 이동함. 이를 통해 활성화값(X)이 더 균일해져서 4비트 양자화가 더 쉬워짐. 2. SVD(특이값 분해)를 적용하여 가중치(W)를 두 개의 성분으로 분해 W → L1L2(저순위 성분) + 잔여 성분(W - L1L2)로 분리 L1L2(저순위 성분)은 16비트로 유지하고, W - L1L2(잔여 성분)만 4비트로 양자화 즉, 저순위 성분(Low-Rank Component)이 Outlier를 흡수하면서 4비트 양자화가 더 쉬워짐. 3. 저순위 성분을 따로 계산하면 메모리 액세스 오버헤드가 증가하는 문제 발생 즉, L1L2를 별도로 처리하면 연산 속도가 느려지는 문제가 생김. 기본적으로 4비트 연산의 속도를 높이려고 했는데, 저순위 연산이 추가되면 오히려 느려질 수 있음. 4. 이를 해결하기 위해 전용 추론 엔진(Nunchaku) 설계 Nunchaku 엔진은 4비트 양자화 연산과 저순위 연산을 함께 최적화하여 오버헤드를 줄임. 즉, L1L2(저순위 연산)와 4비트 연산을 함께 처리하는 커널(fusion kernel)로 변환하여 성능을 최적화. 이를 통해 추가적인 연산량이 생기더라도 실제로는 4비트 연산의 속도를 향상할 수 있도록 설계됨.  기존 방식(SmoothQuant, AWQ)과 SVDQuant의 차이방법방식Outlier 처리 방식적용 대상문제점 SmoothQuant (2023)W4A4Input Channel(Activation) → Channel(Weight)LLM(대형 언어 모델)Outlier가 가중치에 누적됨 AWQ (2024)W4A4 가중치 중 중요한 부분을 보존하여 양자화LLMDiffusion 모델에서는 한계 가능성 SVDQuant (2024)W4A4 저순위(Low-Rank) 성분으로 Outlier 흡수Diffusion 모델 최적화추가 연산을 해결해야 함 1. SmoothQuant (2023) – Activation에서 Weight로 이상치 이동SmoothQuant의 핵심 아이디어는  활성화값(Activation)에서 발생하는 이상치를 가중치(Weight)로 이동시키는 거야​Li 등 - 2024 - SVDQuan…. 기존 문제Transformer 기반 모델에서 Self-Attention 연산이 많아서  활성화값(Activation)의 범위가 넓어지고 이상치가 발생하는 경우가 많아.이를 8-bit이나 4-bit로 양자화하면, 작은 값들은 모두 0이 되고, 정보 손실이 심해짐. 해결 방법활성화값(Activation)의 채널별 스케일링을 적용하여,  이상치를 가중치(Weight) 쪽으로 이동시킴.즉, 원래 Activation 값이 크면, 해당 채널을 스케일링해서 줄이고, 대신 그 값을 Weight에서 보상해주는 방식.이렇게 하면,  Activation 값이 양자화할 때 손실 없이 더 균등하게 분포할 수 있음. 한계Weight 쪽으로 이상치를 몰아넣으면,  Weight의 값이 커지고, Weight 양자화 시 오류가 커질 가능성이 있음.따라서  Weight를 4-bit로 양자화할 경우 정보 손실이 발생할 수 있음. 2. AWQ (Activation-aware Weight Quantization, 2024) – Weight에서 Activation으로 이상치 이동AWQ는  Weight의 이상치를 줄이기 위해 Activation으로 분산시키는 방식 기존 문제SmoothQuant 방식처럼 이상치를 Weight 쪽으로 이동시키면, Weight의 크기가 커져서  Weight를 4-bit로 양자화할 때 정보 손실이 발생할 가능성이 높아짐.특히, Weight에 이상치가 많으면,  스케일링을 적용해도 양자화 오류가 커지고 성능이 떨어지는 문제가 발생. 해결 방법대신  Weight에서 Activation으로 일부 이상치를 이동시켜서, Weight가 양자화될 때 정보 손실을 최소화함.즉, 중요한 Weight 값을 따로 보호하고, 불필요한 큰 값을 Activation 쪽으로 이동시켜서 Weight를 더 균등한 분포로 만들도록 설계. 한계Activation의 분포가 다시 넓어질 가능성이 있음 →  Activation을 다시 4-bit로 양자화할 경우 문제가 발생할 수도 있음. 3. SVDQuant (2024) – Outlier를 Low-Rank Component로 이동SVDQuant는 SmoothQuant와 AWQ의 문제점을 모두 해결하려고,  이상치를 이동시키는 것뿐만 아니라 Low-Rank Component로 흡수하는 방식이야​Li 등 - 2024 - SVDQuan…. 핵심 아이디어SmoothQuant처럼  Activation의 이상치를 Weight로 이동하면서도,AWQ처럼  Weight에서 다시 Activation으로 이동하는 대신, Low-Rank Component로 분리하여 저장.즉,  이상치를 양자화하지 않고, 16-bit Low-Rank Component로 유지하여 정보 손실을 최소화. 장점SmoothQuant나 AWQ처럼  한쪽으로 이상치를 몰아넣지 않고, Low-Rank Branch가 이상치를 흡수해서 손실을 막음. Weight와 Activation 모두 균등한 분포를 가지게 되어, 양자화 오류가 줄어듦.실제 실험에서도  SmoothQuant, AWQ보다 4-bit 양자화에서 성능이 뛰어남. 결론 SmoothQuant →  Activation의 이상치를 Weight로 이동 (Weight의 정보 손실 가능성 있음) AWQ →  Weight의 이상치를 Activation으로 이동 (Activation의 정보 손실 가능성 있음) SVDQuant →  Weight와 Activation에서 Low-Rank Component로 이동 (이상치 자체를 제거하여 정보 손실을 최소화)즉,  SmoothQuant과 AWQ는 둘 중 하나만 Outlier를 발생하지 않도록 하려고 했던 접근법, 반면  SVDQuant는 Outlier 자체를 Low-Rank로 빼버리는 방식이라 정보 손실이 가장 적음. 3 QUANTIZATION PRELIMINARY  양자화(Quantization)의 기본 개념딥러닝에서  양자화는 연산 속도를 높이고 메모리 사용량을 줄이는 데 사용되는 방법.텐서 X를 양자화하는 과정:QX=round(XsX),sX=max⁡(∣X∣)qmax. Q_X=\mathrm{round}\left( \frac{\mathbf{X}}{s_X} \right), \quad s_X=\frac{\max(|\mathbf{X}|)}{q_\mathrm{max}}.QX​=round(sX​X​),sX​=qmax​max(∣X∣)​. 여기서 QX​는  양자화된(low-bit) 값. sX는  스케일링 팩터(Scaling Factor). qmax는  최대 양자화 값(비트 수에 따라 달라짐).  4비트 부동소수점 양자화(4-bit FP)에서는 qmax=6임.  양자화된 행렬 연산선형 계층(Linear Layer)에서 입력 X와 가중치 W가 있을 때, 연산을 양자화된 값으로 근사:XW≈Q(X)Q(W)=sXsW⋅QXQW.\mathbf{XW} \approx Q(\mathbf{X}) Q(\mathbf{W}) = s_X s_W \cdot Q_X Q_W.XW≈Q(X)Q(W)=sX​sW​⋅QX​QW​.즉, 양자화된 텐서끼리 연산한 후, 스케일링 팩터 sX​sW​를 곱하여 다시 원래 값에 가깝게 복원함.  GPU에서 같은 비트폭(bit width)을 사용해야 하는 이유 최신 GPU에서는 입력(QX)과 가중치(QW)의 비트 수가 동일해야 연산 속도가 향상됨. 만약 QX와 QW의 비트 수가 다르면, 더 높은 비트 값으로 변환(upcast)되면서 속도 이점이 사라짐.예: 가중치(W)를 4비트로 양자화(W4)했지만, 활성화값(X)이 16비트(A16)라면?→  연산 시 W4가 A16으로 업캐스트(Upcast)되어 실제 속도 향상이 없음.→ 따라서,  W4A4(가중치 4비트, 활성화값 4비트) 조합이 최적화된 방식.&lt;/br&gt;  W4A4 양자화에서의 문제점: Outlier(이상치) Diffusion 모델에서는 가중치(W)와 활성화값(X) 양쪽에서 Outlier(극단적인 값)가 많이 발생 함. Outlier가 많으면 양자화 후 품질이 크게 저하됨.기존 해결 방법: Quantization-Aware Training (QAT) 양자화를 고려하여 모델을 훈련하는 방식. 하지만, 100억 개 이상의 매개변수(예: FLUX.1 모델)를 조정하려면 계산 비용이 매우 큼. Rotation 기법 (Ashkboos et al., 2024; Liu et al., 2024c) 가중치와 활성화값을 회전(rotation)하여 Outlier를 줄이는 방법. 하지만, Diffusion 모델의 "Adaptive Normalization Layer"에서는 적용이 어려움.이유:Adaptive Normalization은  실행 시간(runtime) 중에 새로운 가중치를 생성.따라서,  사전 계산된 회전 행렬을 적용할 수 없음. 실행 시간에 회전을 적용하면 연산량이 증가하여 속도가 느려짐. 📢 이상치(Outlier)가 있으면 어떻게 성능이 저하될까? 1. 스케일링 팩터 문제양자화는 데이터의 전체 범위(min-max)를 고려해서 값을 조정해야 하는데, 이상치가 있으면  스케일링 팩터가 비정상적으로 커짐.대부분의 값은 작은 범위에 몰려 있는데,  한두 개의 큰 값(이상치) 때문에 스케일이 커지면 작은 값들이 모두 0 또는 동일한 값으로 매핑되는 문제가 생겨. 예제:원래 가중치 값: [-0.1, -0.05, 0.0, 0.05, 0.1, 5.0] (이상치: 5.0)이상치가 없을 때: s_X=0.1, 범위를 [-8, 7]로 매핑 가능이상치(5.0)가 포함될 때: s_X=5.0, 작은 값들은 모두 0이 되어 정보 손실 발생 2. 정보 손실 (Precision Loss)이상치를 고려해 전체 값을 조정하면, 나머지 대부분의 값이  매우 작은 차이를 가지는데도 동일한 양자화된 값으로 표현될 가능성이 높아.즉,  모델이 작은 변화(gradient 등)를 반영하지 못하고 표현력이 급격히 떨어짐. 3. 활성화(Activation) 이상치로 인해 연산량 증가이상치가 있으면 양자화된 값을 다시 부동소수점으로 변환할 때  FP32(32-bit)로 변환하는 경우가 많아, 결국 연산 최적화가 깨짐.특히 Transformer 기반 모델에서는 Self-Attention 연산이 크기 때문에  활성화값(Activation)의 이상치는 메모리 사용량과 연산량 증가로 이어질 수 있음. 4 Method 4.1 PROBLEM FORMULATION 양자화의 오류를 다음과 같이 정의됨. E(X,W)=∥XW−Q(X)Q(W)∥FE(\mathbf{X}, \mathbf{W}) = \left\| \mathbf{XW} - Q(\mathbf{X}) Q(\mathbf{W}) \right\|_FE(X,W)=∥XW−Q(X)Q(W)∥F​ 원래 행렬 곱셈 XW와 양자화된 값으로 연산한 Q(X)Q(W)의 차이를 측정하는 값 좀 더 세분화 E(X,W)≤∥X∥F∥W−Q(W)∥F+∥X−Q(X)∥F(∥W∥F+∥W−Q(W)∥F).E(\mathbf{X}, \mathbf{W}) \leq \left\| \mathbf{X} \right\|_F \left\| \mathbf{W} - Q(\mathbf{W}) \right\|_F+ \left\| \mathbf{X} - Q(\mathbf{X}) \right\|_F \left( \left\| \mathbf{W} \right\|_F + \left\| \mathbf{W} - Q(\mathbf{W}) \right\|_F \right).E(X,W)≤∥X∥F​∥W−Q(W)∥F​+∥X−Q(X)∥F​(∥W∥F​+∥W−Q(W)∥F​). 이 식은 양자화 오류를 결정하는 네 가지 요소를 보여줌: 가중치의 크기: ∥W∥F\|\mathbf{W}\|_F∥W∥F​﻿ 입력의 크기: ∥X∥F\|\mathbf{X}\|_F∥X∥F​﻿ 가중치의 양자화 오류: ∥W−Q(W)∥F\|\mathbf{W} - Q(\mathbf{W})\|_F∥W−Q(W)∥F​﻿ 입력의 양자화 오류: ∥X−Q(X)∥F\|\mathbf{X} - Q(\mathbf{X})\|_F∥X−Q(X)∥F​﻿ 즉, 전체적인 양자화 오류를 최소화하려면 이 네 가지 요소를 조절하는 것이 핵심임. 4.2 SVDQUANT: ABSORBING OUTLIERS VIA LOW-RANK BRANCH Migrate outliers from activation to weight After Smoothing 부분이 기존 기법인데, 단점이 있음 ✅  Activation(X)의 이상치를 없애는 것은 성공했지만, ❌  대신 Weight(W)의 이상치가 증가하는 문제가 발생. 결과적으로,  전체적인 양자화 오류를 줄이려는 목적이 제대로 달성되지 않음. Absorb magnified weight outliers with a low-rank branch.  Weight를 바로 4-bit로 양자화하지 않고, Low-Rank Component를 따로 분리해서 이상치를 흡수하는 전략 W^=L1L2+R,where L1∈Rm×r and L2∈Rr×n\hat{\mathbf{W}} = \mathbf{L}_1 \mathbf{L}_2 + \mathbf{R}, \quad \text{where } \mathbf{L}_1 \in \mathbb{R}^{m \times r} \text{ and } \mathbf{L}_2 \in \mathbb{R}^{r \times n}W^=L1​L2​+R,where L1​∈Rm×r and L2​∈Rr×n L1=UΣr\mathbf{L}_1 = \mathbf{U} \boldsymbol{\Sigma}_rL1​=UΣr​﻿ (입력 차원을 줄이는 행렬) L2=VrT\mathbf{L}_2 = \mathbf{V}_r^TL2​=VrT​﻿ (출력 차원을 줄이는 행렬) R\mathbf{R}R﻿ (잔여 행렬, 4-bit로 양자화될 부분) SVD(Singular Value Decomposition, 특이값 분해) 원래 행렬 크기가 m×n이면, 직접 곱하면 연산량이  O(mn). 하지만 SVD로 Rank r만 유지하면  연산량이 O(mr+rn)로 줄어듦. U\mathbf{U}U﻿: 입력 차원 변환 행렬 (m×m)(m \times m)(m×m)﻿ Σ\boldsymbol{\Sigma}Σ﻿: 대각 행렬 (특이값들이 들어 있는 행렬, m×nm \times nm×n﻿) VT\mathbf{V}^TVT﻿: 출력 차원 변환 행렬 (n×n)(n \times n)(n×n)﻿ 포인트는 대각 원소(특이값, Singular Values)  큰 특이값들은 중요한 정보(패턴)를 나타냄.  작은 특이값들은 노이즈(이상치 포함)를 나타낼 가능성이 높음. Low-Rank 분해 XW=X^W^=X^L1L2+X^R≈X^L1L2⏟16-bit low-rank branch+Q(X^)Q(R)⏟4-bit residual.\mathbf{XW} = \hat{\mathbf{X}} \hat{\mathbf{W}} = \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + \hat{\mathbf{X}} \mathbf{R}\approx \underbrace{\hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2}_{\text{16-bit low-rank branch}}+ \underbrace{Q(\hat{\mathbf{X}}) Q(\mathbf{R})}_{\text{4-bit residual}}.XW=X^W^=X^L1​L2​+X^R≈16-bit low-rank branchX^L1​L2​​​+4-bit residualQ(X^)Q(R)​​.﻿  대각 원소 중에서 상위 r개의 특이값만 유지 하여, 가장 중요한 정보만 포함하는 L1,L2를 생성.  → 따로 16-bit 연산  남은 부분(작은 특이값)  → R으로 분리  → 4-bit 연산 → 작은 특이값만 남았으므로 R을  4-bit로 양자화하더라도 정보 손실이 크게 줄어듦 4.3 NUNCHAKU: Fusing Low-Rank and Low-Bit Branch Kernels  Low-Rank Branch에서 발생하는 성능 저하 문제  QKV Projection과 같은 연산에서는 Low-Rank Branch가 L2 캐시를 초과하면서 DRAM에서 데이터를 불러와야 함. 이는  메모리 접근 비용이 증가하여 연산 속도가 떨어지는 원인.  Figure 6(a)에서 보듯이, Low-Rank Branch는 전체 4-bit 연산 지연의 50%를 차지.  NUNCHAKU: 해결 방법 논문에서는  Low-Rank Branch와 Low-Bit Branch의 연산을 하나로 합쳐(fusing) 메모리 접근을 줄이는 방법을 제안.  Figure 6(b)에서 보듯이, 두 개의 Kernel을 합쳐서 데이터를 공유함: Down Projection 연산을 Quantization Kernel과 합침. Up Projection 연산을 4-bit 연산 Kernel과 합침. 이를 통해  Low-Rank Branch가 Low-Bit Branch와 활성화값을 공유할 수 있어, 추가적인 메모리 접근을 제거. 결과적으로,  Kernel 호출 횟수가 절반으로 줄어들어 속도 개선 효과가 있음. 5 Experiments Benchmark models ModelArchitectureParametersSpecial FeaturesFLUX.1-devDiT12B50-step guidance-distilledFLUX.1-schnellDiT12B4-step timestep-distilledPixArt-ΣDiT600M20-step defaultSANADiT1.6B32× compression autoencoder, Linear AttentionSDXLUNet2.6B30-step Baselines Quantization MethodDescriptionUsage in BenchmarkingNF4(4-bit NormalFloat)Optimized 4-bit weight-only quantization assuming normal distributionUsed as a weight-only quantization baseline for FLUX.1ViDiT-QPer-token quantization + smoothing to reduce outliersAchieves lossless 8-bit quantization on PixArt-ΣMixDQDetects outliers in text embeddings and protects them with 16-bit pre-computationEnables W4A8 quantization with minimal performance drop on SDXL-TurboTensorRTIndustry-standard PTQ toolkit for 8-bit quantizationUses smoothing + percentile calibration over specific timesteps Limitation 엄청난 기술이고 기술면에서는 한계가 없다고 생각함. 하지만, 굳이 한계점을 뽑자면, Song Han이 NVIDIA에서도 연구를 진행하기 때문에 NVIDIA chip만을 위해서 코드를 짰고, 이에 최적화되어있다. 심지어 CUDA 12.2 이상에서만 작동 가능해서 내 학교 서버로 돌려보려고 했는데, GPU Driver version이 낮아서 안돌아가더라. 물론 NVIDIA chip에서 극한의 최적화를 위해서 였지만, 다른 GPU 장비에서는 이를 사용할 수 없다. 같은 방식을 다른 GPU 장비와 Mobile edge device들에 적용한다면 좋을 것이다. 메모리랑 추론시간만 줄인게 아닌가? 정확도를 왜 언급? Memory, Latency? 아래 그림과 같이 SVD양자화로 인해 메모리와 latency 이점을 얻은게 포인트 아닌가? 비교가 기존 16bit / W4A16 / W4A4(SVD) 였기 때문에 큰 차이를 보여준 것 같다. Inference time과 Memory 줄인게 포인트인줄 알았는데 완전 잘못 생각한것 같기도 합니다. 물론 Outlier때문에 32bit로 처리했던 부분들이 없어지고 16bit로 low rank로 따로 빼니까 향상은 됐을 것이지만, 제 생각에는 SVD 없는 W4A4랑 비교했다면, Memory와 추론시간이 3배 이상 차이나지는 않을 것입니다. 정확도? 기존 양자화에서 정확도를 유지하는 부분이 아래 그림처럼 많이 떨어졌었다. (두번째가 기존 양자화 기법, 심지어 W4A4가 아닌 W4A16인데도 더 떨어지는 모습을 보임) 보존 할 수 있었던 이유 →  Low-Rank Branch 기존 4-bit 양자화 방식에서는  Weight 전체를 4-bit로 변환하므로 정보 손실이 큼. SVDQuant는 Weight를 Low-Rank Component (L1L2) 와 잔여 (R)로 분해한다.XW=X^W^=X^L1L2+X^R≈X^L1L2⏟16-bit low-rank branch+Q(X^)Q(R)⏟4-bit residual.\mathbf{XW} = \hat{\mathbf{X}} \hat{\mathbf{W}} = \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + \hat{\mathbf{X}} \mathbf{R}\approx \underbrace{\hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2}_{\text{16-bit low-rank branch}}+ \underbrace{Q(\hat{\mathbf{X}}) Q(\mathbf{R})}_{\text{4-bit residual}}.XW=X^W^=X^L1​L2​+X^R≈16-bit low-rank branchX^L1​L2​​​+4-bit residualQ(X^)Q(R)​​. L1L2는 16-bit precision으로 유지 → 중요한 정보는 고정밀도로 남겨둠.  잔여 R만 4-bit로 양자화하여 정보 손실을 최소화함 한 번만 Low-Rank 분해하는 것이 아니라,  반복적으로 R을 최적화하여 양자화 오류를 최소화 quantization error ∥X^W^−(X^L1L2+Q(X^)Q(R))∥F=∥X^R−Q(X^)Q(R)∥F=E(X^,R),\left\| \hat{\mathbf{X}} \hat{\mathbf{W}} - \left( \hat{\mathbf{X}} \mathbf{L}_1 \mathbf{L}_2 + Q(\hat{\mathbf{X}}) Q(\mathbf{R}) \right) \right\|_F= \left\| \hat{\mathbf{X}} \mathbf{R} - Q(\hat{\mathbf{X}}) Q(\mathbf{R}) \right\|_F= E(\hat{\mathbf{X}}, \mathbf{R}),​X^W^−(X^L1​L2​+Q(X^)Q(R))​F​=​X^R−Q(X^)Q(R)​F​=E(X^,R), 이 식에서 L1L2+R로 분해함으로서 Quantization을 진행하면서 발생하는 Error를 최대한 줄인거임. Quantization 자체가 Outlier로 인해서 정확도를 떨어뜨릴 수 밖에 없는데, 이를 최대한 보존했다는 점이 엄청난 연구인 것임!!!! SVD를 LLM에 써도 되는가? 왜 Diffusion으로 논문을? 기존 제 생각 : 적용 할 수는 있을 것 같으나, LLM은 병목현상이 무거운 모델을 불러오는 과정에서 나타나므로 뒤에 연산을 줄여도 Diffusion만큼 큰 효과는 나타날 지 모르겠습니다. (Diffusion은 연산이 병목임) 물론 기존 제 생각도 찾아보니 맞는 것 같으나, 실제로 활용한다면, 바로 위 질문에서 다뤘던 정확도 향상에도 도움이 되기 때문에, 오히려 정확도 부분에서 도움이 될 것 같습니다. 기존 양자화  GPTQ → Post-training quantization 방식, Weight만 4-bit 변환.  AWQ → Weight 중요도를 분석해 선택적으로 4-bit 변환.  SmoothQuant → Activation 이상치를 Weight로 이동시켜 양자화 오류를 줄이는 방식. SVDQuant 사용한다면? Weight를 Low-Rank(16-bit) + Residual(4-bit)로 나누어 중요한 정보는 유지하면서 압축하므로 Diffusion처럼 정확도 향상에 도움이 될듯 !!! For an explanation from the author, Song Han Youtube [Introduction to SVDQuant for 4-bit Diffusion Models] Demo https://hanlab.mit.edu/projects/svdquant]]></summary></entry><entry><title type="html">Ablation Study 란?</title><link href="https://hoonably.github.io/blog/ablation-study/" rel="alternate" type="text/html" title="Ablation Study 란?"/><published>2025-03-05T08:20:00+00:00</published><updated>2025-03-05T08:20:00+00:00</updated><id>https://hoonably.github.io/blog/ablation-study</id><content type="html" xml:base="https://hoonably.github.io/blog/ablation-study/"><![CDATA[<p><a href="https://hanlab.mit.edu/projects/svdquant">SVDQuant Project</a></p> <p>논문을 읽다가 도대체 Ablation Study가 뭐지? 했다.</p> <p>한국어로 직역하면 절제 연구인데 해석해도 이게 뭔지 싶어서 궁금해서 찾아봤다.</p> <blockquote> <p>모델에서 특정 요소를 제거하거나 변경하면서 해당 요소가 성능에 미치는 영향을 분석하는 실험</p> </blockquote> <hr/> <h3 id="-ablation-study의-목적">💡 Ablation Study의 목적</h3> <ol> <li>각 구성 요소의 중요도 평가 <ul> <li>모델에서 특정 요소(예: 특정 레이어, 손실 함수, 데이터 처리 기법 등)를 제거하거나 수정했을 때 성능이 얼마나 떨어지는지 본다.</li> <li>예를 들어 “SVDQuant에서 SVD를 안 쓰면 성능이 어떻게 되지?” 같은 실험.</li> </ul> </li> <li>최적의 모델 구성 찾기 <ul> <li>여러 요소를 실험적으로 비교하면서 불필요한 부분을 제거해 <strong>더 가볍고 빠른 모델</strong>을 만들 수도 있음.</li> </ul> </li> <li>이론적 정당성 검증 <ul> <li>“우리가 제안한 방법이 정말 효과가 있는지?”를 증명하는 과정.</li> </ul> </li> </ol> <hr/> <h3 id="-예제-svdquant-논문에서-ablation-study">💡 예제: SVDQuant 논문에서 Ablation Study</h3> <figure> <picture> <img src="https://github.com/user-attachments/assets/f36e5dd1-951f-44e7-a2a0-37ab7ec0aa11" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>SVDQuant 논문에서는 <strong>Figure 10</strong>에서 다양한 실험을 함:</p> <ul> <li><strong>SVD만 적용</strong> → 성능이 낮아짐 ❌</li> <li><strong>기본적인 4-bit 양자화</strong> → 품질이 많이 떨어짐 ❌</li> <li><strong>Smoothed Quantization 추가</strong> → 조금 나아지지만 여전히 부족함 ❌</li> <li><strong>LoRC 방식 적용</strong> → 효과가 적음 ❌</li> <li><strong>SVDQuant 방식 적용</strong> → 가장 좋은 결과 ✅</li> </ul> <p>즉, <strong>각 요소를 하나씩 제거하면서 실험</strong>을 진행해서 “SVDQuant가 왜 효과적인가?”를 증명함.</p> <hr/> <h3 id="-쉽게-비유하면">💡 쉽게 비유하면?</h3> <p>Ablation Study는 마치 <strong>요리에서 특정 재료를 빼보면서 맛이 어떻게 변하는지 실험하는 과정</strong>과 비슷함</p> <ul> <li>카레를 만들면서 <strong>“양파를 빼면?”</strong>, <strong>“후추를 빼면?”</strong>, <strong>“소금을 줄이면?”</strong> 하는 식으로 실험</li> <li>최종적으로 “이 재료가 핵심이구나!”를 찾아내는 과정</li> </ul> <p>그래서 논문에서 <strong>Ablation Study</strong>라고 하면 “<strong>이 기능이 없었으면 어땠을까?</strong>“를 실험한 부분이라고 생각하면 됨.</p>]]></content><author><name></name></author><category term="Study"/><summary type="html"><![CDATA[SVDQuant Project]]></summary></entry><entry><title type="html">Python env (Conda, Homebrew)</title><link href="https://hoonably.github.io/blog/python-env/" rel="alternate" type="text/html" title="Python env (Conda, Homebrew)"/><published>2025-02-17T07:26:20+00:00</published><updated>2025-02-17T07:26:20+00:00</updated><id>https://hoonably.github.io/blog/python-env</id><content type="html" xml:base="https://hoonably.github.io/blog/python-env/"><![CDATA[<h1 id="python--python3-alias">Python → Python3 alias</h1> <p>alias는 말그대로 별칭을 설정해주는 명령어</p> <p>python이라는 명령어를 실행하면 python3로 동작하도록 해라!는 의미</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">python</span><span class="o">=</span>python3
</code></pre></div></div> <h1 id="macos-기본">macOS 기본</h1> <ul> <li>macOS 기본포함</li> <li>/usr/bin/python3 (비추천, 유지보수 어려움)</li> <li>아래 패키지들은 macOS 기본 패키지라 지울 필요 없음</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/bin/python3 <span class="nt">-m</span> pip list
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 맥 기본 환경</span>
Package    Version
<span class="nt">----------</span> <span class="nt">-------</span>
altgraph   0.17.2
future     0.18.2
macholib   1.15.2
pip        25.0.1
setuptools 58.0.4
six        1.15.0
wheel      0.37.0
</code></pre></div></div> <h1 id="homebrew">⭐ Homebrew</h1> <ul> <li>brew install python으로 쉽게 설치 가능.</li> <li>최신 Python 버전을 사용할 수 있음.</li> <li>/opt/homebrew/bin/python3에 설치됨</li> <li><code class="language-plaintext highlighter-rouge">pip3</code>으로 패키지를 관리 가능하며, 시스템 기본 Python과 분리됨.</li> <li> <p>설치</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  /bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> <span class="o">[</span>https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh]<span class="o">(</span>https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="o">)</span><span class="si">)</span><span class="s2">"</span>
</code></pre></div> </div> </li> <li> <p>Homebrew를 기본으로 사용</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">echo</span> <span class="s1">'export PATH="/opt/homebrew/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.zshrc
  <span class="nb">source</span> ~/.zshrc
</code></pre></div> </div> </li> <li> <p>설치 확인</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  which brew
  brew <span class="nt">-v</span>
</code></pre></div> </div> </li> </ul> <h1 id="anaconda">⭐ Anaconda</h1> <ul> <li>데이터 과학, 머신러닝(ML), 과학 컴퓨팅 환경에 최적화됨.</li> <li>패키지 관리가 쉽고, conda 명령어로 가상환경을 만들고 관리할 수 있음.</li> <li> <p>Jupyter Notebook, SciPy, TensorFlow 등 주요 데이터 과학 라이브러리가 기본적으로 포함됨.</p> <p>→ AI 관련 일을 할 때 가상환경을 만들어서 활용하자.</p> </li> <li>homebrew를 통한 설치</li> </ul> <p>→ 경로가 homebrew/anaconda 로 설치됨</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install</span> <span class="nt">--cask</span> anaconda 
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 설치 중 다음과 같은 내용이 콘다가 설치된 위치임</span>
<span class="c"># 이 위치를 ~/.zshrc 파일에 추가</span>
<span class="nv">PREFIX</span><span class="o">=</span>/opt/homebrew/anaconda3
</code></pre></div></div> <ul> <li> <p><code class="language-plaintext highlighter-rouge">~/.zshrc</code> 파일에 homebrew내용 주석처리하고 다음 추가</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c"># export PATH="/opt/homebrew/bin:$PATH"</span>
  <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/opt/homebrew/anaconda3/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div> </div> </li> <li> <p>설치 확인</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">source</span> ~/.zshrc
  which conda
  conda <span class="nt">-V</span>
</code></pre></div> </div> </li> </ul> <h2 id="conda-가상환경">conda 가상환경</h2> <ul> <li>가상환경 생성</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create <span class="nt">--name</span> &lt;환경명&gt; <span class="nv">python</span><span class="o">=</span>&lt;파이썬 버전&gt;
conda create <span class="nt">--name</span> py39 <span class="nv">python</span><span class="o">=</span>3.9
</code></pre></div></div> <ul> <li>가상환경 활성화</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda activate &lt;환경명&gt;
conda activate py39
</code></pre></div></div> <ul> <li>가상환경 비활성화</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda deactivate
</code></pre></div></div> <ul> <li>가상환경 내 패키지 설치</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">install</span> &lt;패키지명&gt;
</code></pre></div></div> <ul> <li>가상환경 목록 확인</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">env </span>list
</code></pre></div></div> <ul> <li>가상환경 삭제</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda remove <span class="nt">--name</span> &lt;환경명&gt; <span class="nt">--all</span>
<span class="c"># conda remove --name py39 --all</span>
</code></pre></div></div> <ul> <li>이름변경 → 안됨 → 복제 후 삭제</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create <span class="nt">--name</span> &lt;새로운 환경&gt; <span class="nt">--clone</span> &lt;삭제할 환경&gt;
conda remove <span class="nt">--name</span> &lt;삭제할 환경&gt; <span class="nt">--all</span>
</code></pre></div></div> <h3 id="conda-초기화">conda 초기화</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda init zsh
<span class="nb">source</span> ~/.zshrc
</code></pre></div></div> <h3 id="자동-콘다-실행-없애기--맥-기본-파이썬이-기본">자동 콘다 실행 없애기 → 맥 기본 파이썬이 기본</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># base 자동 활성화 끄기</span>
conda config <span class="nt">--set</span> auto_activate_base <span class="nb">false
source</span> ~/.zshrc

<span class="c"># 반대는 true로 바꾸면 됨</span>
</code></pre></div></div> <h3 id="base만-표시-없애고-나머지는-py36처럼-뜨도록">(base)만 표시 없애고 나머지는 (py36)처럼 뜨도록</h3> <p>다음 내용을 .zshrc에 저장</p> <p><code class="language-plaintext highlighter-rouge">conda config --set auto_activate_base false</code> 여야함</p> <p>기본은 원래 맥 기본 파이썬인데, 2)에서 자동으로 base 활성화</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># &gt;&gt;&gt; base 환경에서만 (base) 숨기기 &gt;&gt;&gt;</span>
<span class="c"># 1) 초기 PS1 저장 (중복 방지용 체크)</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$ORIGINAL_PS1</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">ORIGINAL_PS1</span><span class="o">=</span><span class="s2">"</span><span class="nv">$PS1</span><span class="s2">"</span>
<span class="k">fi</span>
<span class="c"># 2) base 자동 활성화</span>
conda activate base
<span class="c"># 3) base일 때만 (base) 표시를 숨기는 함수</span>
<span class="k">function </span>_conda_prompt_override<span class="o">()</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$CONDA_DEFAULT_ENV</span> <span class="o">==</span> <span class="s2">"base"</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="c"># base일 때 프롬프트를 원래 PS1으로 돌려서 (base) 숨기기</span>
        <span class="nv">PS1</span><span class="o">=</span><span class="s2">"</span><span class="nv">$ORIGINAL_PS1</span><span class="s2">"</span>
    <span class="k">fi</span>
    <span class="c"># base가 아닐 땐, (env_name)이 그대로 표시됨</span>
<span class="o">}</span>
<span class="c"># 4) Zsh의 precmd_functions에 등록</span>
precmd_functions+<span class="o">=(</span>_conda_prompt_override<span class="o">)</span>
<span class="c"># &lt;&lt;&lt; base 환경에서만 (base) 숨기기 &lt;&lt;&lt;</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> ~/.zshrc
</code></pre></div></div> <h1 id="pyenv">pyenv</h1> <p>여러 Python 버전을 관리해야 한다면 유용</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pyenv <span class="o">(</span>pyenv <span class="nb">install</span> &lt;version&gt;<span class="o">)</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Tip"/><summary type="html"><![CDATA[Python → Python3 alias]]></summary></entry></feed>